<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python模块</title>
      <link href="/2023/01/09/Python%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/01/09/Python%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h2 id="OS-模块—OS模块可通过函数调用操作系统"><a href="#OS-模块—OS模块可通过函数调用操作系统" class="headerlink" title="OS 模块—OS模块可通过函数调用操作系统"></a>OS 模块—OS模块可通过函数调用操作系统</h2><div class="note orange no-icon flat"><p>当程序运行时，变量是保存数据的好方法，但如果希望程序结束后数据仍然保持，就需要将数据保存到文件中。<br>在这里将学习如何使用 Python 在硬盘上创建、读取和保存文件</p></div><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">Python语法</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染样式</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">os.close()  <span class="comment">#关闭文件</span></span><br><span class="line">os.<span class="built_in">open</span>()  <span class="comment">#打开一个文件</span></span><br><span class="line">os.getcwd()  <span class="comment">#查看当前目录</span></span><br><span class="line">os.chdir(path)  <span class="comment">#切换目录/改变当前目录</span></span><br><span class="line">os.chmod(path, mode)  <span class="comment">#改变权限</span></span><br><span class="line">os.mkdir()  <span class="comment">#创建单个目录</span></span><br><span class="line">os.mkdirs()  <span class="comment">#递归创建目录，当文件夹存在时无法继续创建</span></span><br><span class="line">os.rmdir()  <span class="comment">#删除单个目录</span></span><br><span class="line">os.listdir()  <span class="comment">#以列表形式显示该目录所有文件夹，包括隐藏文件</span></span><br><span class="line">os.remove()  <span class="comment">#只删除文件不删除文件夹</span></span><br><span class="line">os.sep()     <span class="comment">#输出特定系统的路径分隔符 如windows的\\</span></span><br><span class="line">os.pathsep() <span class="comment">#输出用来分割文件路径的字符串&quot;;&quot;</span></span><br><span class="line">os.walk()    <span class="comment">#os.walk方法是python中帮助我们高效管理文件、目录的工具，在深度学习中数据整理应用的很频繁，如数据集的名称格式化、将数据集的按一定比例划分训练集train_set、测试集test_set。</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">os.getcwd()  <span class="comment"># 输出当前工作目录</span></span><br><span class="line">os.chdir(<span class="string">&#x27;F:\pythonProject&#x27;</span>)  <span class="comment"># 切换目录到F:\pythonProject</span></span><br><span class="line">os.mkdir(<span class="string">&#x27;F:\\测试&#x27;</span>) <span class="comment"># 创建单个文件夹</span></span><br><span class="line">os.makedirs(<span class="string">&#x27;F:\\测试\测试1\测试2\测试3&#x27;</span>) <span class="comment">#确保完整路径名存在下创建多级目录</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>后面更新！</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux中安装python3</title>
      <link href="/2023/01/08/linux%E4%B8%AD%E5%AE%89%E8%A3%85python3/"/>
      <url>/2023/01/08/linux%E4%B8%AD%E5%AE%89%E8%A3%85python3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux工具</title>
      <link href="/2023/01/08/Linux%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/01/08/Linux%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>青龙面板</title>
      <link href="/2023/01/08/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/"/>
      <url>/2023/01/08/%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="前言：本教程基于centos7-6搭建-无毒插件-请放心食用"><a href="#前言：本教程基于centos7-6搭建-无毒插件-请放心食用" class="headerlink" title="前言：本教程基于centos7.6搭建 无毒插件 请放心食用"></a>前言：本教程基于centos7.6搭建 无毒插件 请放心食用</h1><p><a href="https://iainixzy.space/2022/12/19/%E5%AE%9D%E5%A1%94%E7%A0%B4%E8%A7%A3/">宝塔科技版</a></p><h2 id="常用软件安装-更新源（可跳过）时间稍久，耐心等待"><a href="#常用软件安装-更新源（可跳过）时间稍久，耐心等待" class="headerlink" title="常用软件安装 更新源（可跳过）时间稍久，耐心等待"></a>常用软件安装 更新源（可跳过）时间稍久，耐心等待</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget unzip gcc gcc-c++ git screen vim -y</span><br></pre></td></tr></table></figure><h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker -y</span><br></pre></td></tr></table></figure><h2 id="设置开机自启docker"><a href="#设置开机自启docker" class="headerlink" title="设置开机自启docker"></a>设置开机自启docker</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service   </span><br><span class="line">systemctl start docker.service      </span><br><span class="line">systemctl status docker.service    #查看是否启动</span><br></pre></td></tr></table></figure><h2 id="青龙面版依赖安装"><a href="#青龙面版依赖安装" class="headerlink" title="青龙面版依赖安装"></a>青龙面版依赖安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">-v /root/ql/config:/ql/config \</span><br><span class="line">-v /root/ql/log:/ql/log \</span><br><span class="line">-v /root/ql/db:/ql/db \</span><br><span class="line">-v /root/ql/scripts:/ql/scripts \</span><br><span class="line">-v /root/ql/jbot:/ql/jbot \</span><br><span class="line">-v /root/ql/repo:/ql/repo \</span><br><span class="line">-p 5960:5700 \</span><br><span class="line">-e ENABLE_HANGUP=true \</span><br><span class="line">-e ENABLE_WEB_PANEL=true \</span><br><span class="line">--name ql \</span><br><span class="line">--hostname ql \</span><br><span class="line">--privileged=true \</span><br><span class="line">--restart always \</span><br><span class="line">whyour/qinglong:latest</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it ql bash #ql为容器名根据自己容器修改</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/FlechazoPh/QLDependency/main/Shell/QLOneKeyDependency.sh | sh</span><br></pre></td></tr></table></figure><font size = 5>安装完exit退出容器</font><font size = 5>docker restart 重启容器</font><h2 id="傻妞安装"><a href="#傻妞安装" class="headerlink" title="傻妞安装"></a>傻妞安装</h2><ol><li>安装node<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local &amp;&amp; wget https://nodejs.org/dist/v16.13.1/node-v16.13.1-linux-x64.tar.xz</span><br></pre></td></tr></table></figure></li><li>解压node<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xz -dk node-v16.13.1-linux-x64.tar.xz &amp;&amp; tar -xvf node-v16.13.1-linux-x64.tar</span><br></pre></td></tr></table></figure></li><li>打开/etc/profile文件，在最后添加下面命令 然后终端执行source /etc/profile<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https://goproxy.cn</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export GOPATH=/usr/local/go/path</span><br><span class="line">export PATH=$PATH:$GOROOT/bin:$GOPATH/bin</span><br><span class="line">export NODE_HOME=/usr/local/node-v16.13.1-linux-x64</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin</span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure><h3 id="安装pm2"><a href="#安装pm2" class="headerlink" title="安装pm2"></a>安装pm2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure></li></ol><h3 id="傻妞安装-1"><a href="#傻妞安装-1" class="headerlink" title="傻妞安装"></a>傻妞安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sSL http://zkyun.cc/install.sh)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sillyGirl -t #根据傻妞目录运行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 青龙面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux冲冲冲！</title>
      <link href="/2022/12/23/Linux%E5%86%B2%E5%86%B2%E5%86%B2/"/>
      <url>/2022/12/23/Linux%E5%86%B2%E5%86%B2%E5%86%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-备忘簿"><a href="#Linux-备忘簿" class="headerlink" title="Linux-备忘簿"></a>Linux-备忘簿</h1><font size = 4>在linux的每个文件中，可分别给予用户，用户组rwx权限su - 命令进入root权限，exit退出chgrp 更改文件用户组 chown更改文件拥有者 chmod赋权对文件来讲权限的性质为：</font><ul><li>r: 可读取文件实际内容，如读取文本文字内容</li><li>w: 可编辑文件，可增改不可删除</li><li>x: 可执行，该文件可被系统执行</li></ul><font size = 4>对目录来讲权限的性质为:</font><ul><li>r: 读取目录中的内容</li><li>w: 修改目录中的内容</li><li>x: 访问目录</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>堡垒之夜</title>
      <link href="/2022/12/19/%E5%AE%9D%E5%A1%94%E7%A0%B4%E8%A7%A3/"/>
      <url>/2022/12/19/%E5%AE%9D%E5%A1%94%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="按步骤来就行"><a href="#按步骤来就行" class="headerlink" title="按步骤来就行"></a>按步骤来就行</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://f.cccyun.cc/bt/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /www/server/panel/data/bind.pl /www/server/panel/data/bind.pl.bak</span><br></pre></td></tr></table></figure><h2 id="www-server-panel-data在这个路径找到plugin-json文件替换下面文件"><a href="#www-server-panel-data在这个路径找到plugin-json文件替换下面文件" class="headerlink" title="/www/server/panel/data在这个路径找到plugin.json文件替换下面文件"></a>/www/server/panel/data在这个路径找到plugin.json文件替换下面文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;type&quot;: [&#123;&quot;id&quot;: 5, &quot;title&quot;: &quot;\u8fd0\u884c\u73af\u5883&quot;, &quot;sort&quot;: 2, &quot;ps&quot;: &quot;\u8fd0\u884c\u73af\u5883&quot;, &quot;icon&quot;: &quot;icon&quot;&#125;, &#123;&quot;id&quot;: 6, &quot;title&quot;: &quot;\u7cfb\u7edf\u5de5\u5177&quot;, &quot;sort&quot;: 3, &quot;ps&quot;: &quot;\u7cfb\u7edf\u5de5\u5177&quot;, &quot;icon&quot;: &quot;icon&quot;&#125;, &#123;&quot;id&quot;: 7, &quot;title&quot;: &quot;\u5b9d\u5854\u63d2\u4ef6&quot;, &quot;sort&quot;: 4, &quot;ps&quot;: &quot;\u5b9d\u5854\u63d2\u4ef6&quot;, &quot;icon&quot;: &quot;icon&quot;&#125;, &#123;&quot;id&quot;: 8, &quot;title&quot;: &quot;\u4e13\u4e1a\u7248\u63d2\u4ef6&quot;, &quot;sort&quot;: 5, &quot;ps&quot;: &quot;\u4e13\u4e1a\u7248\u63d2\u4ef6&quot;, &quot;icon&quot;: &quot;icon&quot;&#125;, &#123;&quot;id&quot;: 12, &quot;title&quot;: &quot;\u4f01\u4e1a\u7248\u63d2\u4ef6&quot;, &quot;sort&quot;: 6, &quot;ps&quot;: &quot;\u4f01\u4e1a\u7248\u63d2\u4ef6&quot;, &quot;icon&quot;: &quot;&quot;&#125;, &#123;&quot;id&quot;: 10, &quot;title&quot;: &quot;\u7b2c\u4e09\u65b9\u5e94\u7528&quot;, &quot;sort&quot;: 7, &quot;ps&quot;: &quot;\u7b2c\u4e09\u65b9\u5e94\u7528&quot;, &quot;icon&quot;: &quot;icon&quot;&#125;, &#123;&quot;id&quot;: 11, &quot;title&quot;: &quot;\u4e00\u952e\u90e8\u7f72&quot;, &quot;sort&quot;: 8, &quot;ps&quot;: &quot;\u4e00\u952e\u90e8\u7f72\u7b2c\u4e09\u65b9\u6e90\u7801&quot;, &quot;icon&quot;: &quot;&quot;&#125;], &quot;beta&quot;: 0, &quot;list&quot;: [&#123;&quot;id&quot;: 35, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000012, &quot;type&quot;: 8, &quot;sort&quot;: 1, &quot;price&quot;: 49.8, &quot;name&quot;: &quot;btwaf_httpd&quot;, &quot;title&quot;: &quot;Apache\u9632\u706b\u5899&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u6709\u6548\u9632\u6b62sql\u6ce8\u5165/xss/\u4e00\u53e5\u8bdd\u6728\u9a6c\u7b49\u5e38\u89c1\u6e17\u900f\u653b\u51fb,\u5f53\u524d\u4ec5\u652f\u6301Apache2.4&lt;a href=\&quot;https://www.bt.cn/bbs/thread-13647-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;apache&quot;, &quot;mutex&quot;: &quot;btwaf&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btwaf_httpd/info.json&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btwaf_httpd&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/btwaf_httpd.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;8&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;2021-06-25\u66f4\u65b0\n1.\u589e\u52a0\u8bed\u4e49\u5206\u6790\u6a21\u5757\n2.\u4fee\u590d\u6587\u4ef6\u4e0a\u4f20\u7684\u7ed5\u8fc7\n3.\u589e\u52a0\u6587\u4ef6\u4e0a\u4f20\u7684\u9a8c\u8bc1\u3002\n4.\u4e25\u683c\u5224\u65adfrom-data \u683c\u5f0f\n5.\u4f18\u5316\u8718\u86db\u5904\u7406\u903b\u8f91\n6.\u4fee\u590d\u5df2\u77e5\u7684bug\n&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 36, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000010, &quot;type&quot;: 8, &quot;sort&quot;: 1, &quot;price&quot;: 49.8, &quot;name&quot;: &quot;btwaf&quot;, &quot;title&quot;: &quot;Nginx\u9632\u706b\u5899&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u6709\u6548\u9632\u6b62sql\u6ce8\u5165/xss/\u4e00\u53e5\u8bdd\u6728\u9a6c/\u9632\u91c7\u96c6\u7b49\u5e38\u89c1\u6e17\u900f\u653b\u51fb\uff0c\u7b26\u5408GB/T 32917-2016\u6807\u51c6\uff0c\u516c\u5b89\u4e09\u6240\u5b89\u5168\u8ba4\u8bc1\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-73847-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;\u6559\u7a0b&lt;/a&gt;  &lt;a href=\&quot;https://www.bt.cn/auth\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot; style=\&quot;color:red\&quot;&gt; &gt;\u7533\u8bf7\u5546\u4e1a\u6388\u6743&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;nginx&quot;, &quot;mutex&quot;: &quot;btwaf_httpd&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btwaf&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btwaf&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product_nginx_firewall.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;8&quot;, &quot;version&quot;: &quot;9.6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;0 \u914d\u5408\u4f01\u4e1a\u7248\u8f6f\u4ef6\u5821\u5854PHP\u5b89\u5168\u9632\u62a4\u66f4\u914d\u54e6\n2021-10-12 10:00 \u66f4\u65b0\n1.\u4f18\u5316\u8bef\u62e6\u8718\u86db\n2.\u4f18\u5316cc\n3.\u4f18\u5316\u62e6\u622aIP\u5e95\u5c42\n4.\u589e\u52a0\u5355\u4e2aURL \u8fdb\u884ccc\u9632\u5fa1&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 34, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000014, &quot;type&quot;: 8, &quot;sort&quot;: 2, &quot;price&quot;: 29.8, &quot;name&quot;: &quot;total&quot;, &quot;title&quot;: &quot;\u7f51\u7ad9\u76d1\u63a7\u62a5\u8868&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5b9e\u65f6\u5206\u6790\u7f51\u7ad9\u8fd0\u884c\u3001\u7528\u6237\u8bbf\u95ee\u72b6\u51b5\uff0c\u7cbe\u786e\u7edf\u8ba1\u7f51\u7ad9\u6d41\u91cf\u3001IP\u3001UV\u3001PV\u3001\u8bf7\u6c42\u3001\u8718\u86db\u7b49\u6570\u636e\uff0c\u7f51\u7ad9SEO\u4f18\u5316\u5229\u5668&lt;a href=\&quot;https://www.bt.cn/new/product/website_total.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;\u56fe\u6587\u8bf4\u660e&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/total&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/total&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product_website_total.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;6&quot;, &quot;version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. Apache\u7528\u6237\u8bf7\u5347\u7ea7\uff1aApache\u7edf\u8ba1bug\u4fee\u590d\u3002\n2. \u4f18\u5316\u65e5\u5fd7\u5b58\u50a8\u3002\n3. \u4fee\u590d\u7edf\u8ba1\u62a5\u544a\u751f\u6210bug\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 107, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 2, &quot;price&quot;: 0, &quot;name&quot;: &quot;site_speed&quot;, &quot;title&quot;: &quot;\u5821\u5854\u7f51\u7ad9\u52a0\u901f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u91cd\u6784\u7248\uff0c\u57fa\u4e8e\u9875\u9762\u7f13\u5b58\u7684\u7f51\u7ad9\u52a0\u901f\u63d2\u4ef6\uff0c\u5b89\u88c5\u6216\u5347\u7ea7\u5230\u6b64\u7248\u672c\uff0c\u5c06\u4f1a\u5378\u8f7d\u65e7\u7248\u672c\uff0c\u5982\u679c\u662fApache\u9700\u8981\u5148\u5b89\u88c5Memcached &lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/bbs/thread-52317-1-1.html\&quot; target=\&quot;_blank\&quot;&gt; &gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/site_speed&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/site_speed&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/site_speed.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u9ed8\u8ba4\u4e0d\u7f13\u5b58\u54cd\u5e94\u5934\u4e2d\u5305\u542bCache-Control:no-cache\u7684\u54cd\u5e94&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 121, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000044, &quot;type&quot;: 12, &quot;sort&quot;: 2, &quot;price&quot;: 99, &quot;name&quot;: &quot;php_filter&quot;, &quot;title&quot;: &quot;\u5821\u5854PHP\u5b89\u5168\u9632\u62a4&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;PHP\u5185\u6838\u7ea7\u9632\u5fa1\u6a21\u5757\uff0c\u53ef\u9488\u5bf9\u9879\u76ee\u8fdb\u884c\u5e95\u5c42\u8fc7\u6ee4\uff0c\u5f7b\u5e95\u675c\u7edd\u8de8\u7ad9/\u7cbe\u51c6\u9632\u6e17\u900f/\u7cbe\u51c6\u9632\u63d0\u6743\uff0c&lt;span style=&#x27;color:red;&#x27;&gt;\u6ce8\u610f\uff1a\u4e0d\u652f\u630132\u4f4d\u7cfb\u7edf\u548carm\u5e73\u53f0\u548cPHP5.2&lt;/span&gt; &lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-49256-1-1.html&#x27; target=&#x27;_blank&#x27;&gt; &gt; \u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/php_filter&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/php_filter&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/php_filter.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;8&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590d\u7f51\u7ad9\u5217\u8868\u540c\u6b65\u95ee\u9898\n2\u3001\u4fee\u590d\u7f51\u7ad9\u6570\u91cf\u8fc7\u591a\u65f6\u6279\u91cf\u6307\u6d3e\u5361\u6b7b\u7684\u95ee\u9898\n3\u3001\u4fee\u590d\u5bf9Pythin2.7\u73af\u5883\u7684\u517c\u5bb9&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 41, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000005, &quot;type&quot;: 8, &quot;sort&quot;: 3, &quot;price&quot;: 19.8, &quot;name&quot;: &quot;rsync&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u6570\u636e\u540c\u6b65\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u57fa\u4e8ersync\u5f00\u53d1\u7684\u6587\u4ef6\u540c\u6b65\u5de5\u5177\uff0c\u53ef\u5b9a\u65f6\u6216\u5b9e\u65f6\u7684\u53d1\u9001\u6587\u4ef6\u548c\u66f4\u65b0\u6587\u4ef6\uff0c\u4e5f\u53ef\u7528\u4e8e\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u3001\u96c6\u7fa4\u3001\u5f02\u5730\u5907\u4efd\u7b49\u573a\u666f &lt;a href=\&quot;https://www.bt.cn/bbs/thread-98022-1-1.html\n\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/rsync&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/rsync&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;9&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u589e\u52a0\u538b\u7f29\u4f20\u8f93\u9009\u9879\n2\u3001\u79fb\u9664rsync\u5168\u5c40\u914d\u7f6e\u4e2d\u7aef\u53e3\u4fee\u6539\u53ea\u8bfb\u9009\u9879&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 43, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000015, &quot;type&quot;: 8, &quot;sort&quot;: 3, &quot;price&quot;: 39.8, &quot;name&quot;: &quot;tamper_proof&quot;, &quot;title&quot;: &quot;\u7f51\u7ad9\u9632\u7be1\u6539\u7a0b\u5e8f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u4e8b\u4ef6\u578b\u9632\u7be1\u6539\uff0c\u7528\u4e8e\u4fdd\u62a4\u7ad9\u70b9\u5185\u5bb9\u5b89\u5168\uff0c\u9632\u6b62\u9ed1\u5ba2\u975e\u6cd5\u4fee\u6539\u7f51\u9875\u3001\u7f51\u7ad9\u6302\u9a6c\u7b49\u5165\u4fb5\u884c\u4e3a\uff0c\u63a8\u8350\u4f7f\u7528 &lt;span style=&#x27;color:red;&#x27;&gt;\u4f01\u4e1a\u7ea7\u9632\u7be1\u6539 &lt;/span&gt;\uff0c\u4fdd\u62a4\u6548\u679c\u66f4\u4f73&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;tamper_drive&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/tamper_proof&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/tamper_proof&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/tamper_proof.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590d\u76ee\u5f55\u9632\u5fa1\u6ca1\u6709\u65e5\u5fd7\u7684\u95ee\u9898\n2\u3001\u4fee\u590d\u65b0\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6\u7a0b\u5e8f\u62a5\u9519\u7684\u95ee\u9898\n3\u3001\u4f7f\u7528\u591a\u7ebf\u7a0b\u521b\u5efa\u6587\u4ef6\u5c5e\u6027&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 99, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 4, &quot;price&quot;: 0, &quot;name&quot;: &quot;coll_admin&quot;, &quot;title&quot;: &quot;\u5821\u5854\u4e91\u63a7\u5e73\u53f0&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u53ef\u514d\u8d39\u9ad8\u6548\u7ba1\u7406\u591a\u53f0\u670d\u52a1\u5668\u9762\u677f\uff0c\u5b98\u65b9\u81ea\u7528\u63a8\u8350\uff0c\u4ee5\u53ca\u5176\u4ed6\u591a\u673a\u7ba1\u7406\u529f\u80fd&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/platform\&quot; target=\&quot;_blank\&quot;&gt; [\u4e86\u89e3\u8be6\u60c5]&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;memcached&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/coll_admin&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/coll_admin&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;update_msg&quot;: &quot;1. \u652f\u6301HTTPS\u534f\u8bae\n2. \u89e3\u51b3\u5361\u987f\u95ee\u9898\n3. \u589e\u52a0\u5bc6\u7801\u5b9a\u65f6\u66f4\u6362\u5f00\u5173\n3. \u589e\u52a0\u5bc6\u7801\u5f3a\u5ea6\u9650\u5236\n\u65e0\u6cd5\u5b8c\u6210\u5347\u7ea7\u7684\u7528\u6237\uff0c\u8bf7\u624b\u52a8\u5347\u7ea7\uff1a\ncurl http://download.bt.cn/install/coll/update_coll.sh | bash\n\u5982\u9047\u5230\u95ee\u9898\u8bf7\u5728\u8bba\u575b\u53d1\u5e16\u6216\u8005\u8054\u7cfb\u5728\u7ebf\u5ba2\u670d&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 131, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000054, &quot;type&quot;: 12, &quot;sort&quot;: 4, &quot;price&quot;: 99, &quot;name&quot;: &quot;bt_security&quot;, &quot;title&quot;: &quot;\u5821\u5854\u9632\u5165\u4fb5&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u539f\u9632\u63d0\u6743, \u9632\u5fa1\u5927\u591a\u6570\u7684\u5165\u4fb5\u63d0\u6743\u653b\u51fb\u9020\u6210\u7684\u6302\u9a6c\u548c\u88ab\u6316\u77ff,\u6709\u6548\u62e6\u622awebshell\u6267\u884c\u63d0\u6743,\u5e76\u53ca\u65f6\u544a\u8b66\u901a\u77e5&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-50998-1-1.html&#x27; target=\&quot;_blank\&quot;&gt; &gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bt_security&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bt_security&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/bt_security.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1.\u4f18\u5316\u6d88\u606f\u63d0\u9192&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 46, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000016, &quot;type&quot;: 8, &quot;sort&quot;: 4, &quot;price&quot;: 39.8, &quot;name&quot;: &quot;syssafe&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u7cfb\u7edf\u52a0\u56fa&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u63d0\u4f9b\u7075\u6d3b\u7684\u7cfb\u7edf\u52a0\u56fa\u529f\u80fd\uff0c\u9632\u6b62\u7cfb\u7edf\u88ab\u690d\u5165\u6728\u9a6c\uff0c\u652f\u6301\u670d\u52a1\u5668\u65e5\u5fd7\u5ba1\u8ba1\u529f\u80fd&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/syssafe&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/syssafe&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/syssafe.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u589e\u52a0\u81ea\u52a8\u540c\u6b65\u4e91\u7aef\u8fdb\u7a0b\u767d\u540d\u5355\u673a\u5236\n2\u3001\u589e\u5f3a\u9ed8\u8ba4\u52a0\u56fa\u80fd\u529b\n3\u3001\u4fee\u590d\u5173\u95edSSH\u52a0\u56fa\u548c\u5f02\u5e38\u8fdb\u7a0b\u76d1\u63a7\u529f\u80fd\u540e\u672a\u5173\u95ed\u670d\u52a1\u7684\u95ee\u9898\n4\u3001\u8fdb\u4e00\u6b65\u4f18\u5316\u8f6f\u4ef6\u5f00\u9500&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 159, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000059, &quot;type&quot;: 8, &quot;sort&quot;: 5, &quot;price&quot;: 39.8, &quot;name&quot;: &quot;mysql_replicate&quot;, &quot;title&quot;: &quot;MySQL\u4e3b\u4ece\u590d\u5236(\u91cd\u6784\u7248)&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u4f7f\u7528GTID\u65b9\u5f0f\u8f7b\u677e\u5b9e\u73b0MySQL\u4e3b\u4ece\u590d\u5236(\u4ec5\u652f\u6301Mysql5.7/8.0)&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mysql_replicate&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mysql_replicate&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/mysql_replicate.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u5220\u9664\u4e3b\u4ece\u7684\u540c\u65f6\u4e3b\u5e93\u5220\u9664\u5bf9\u5e94\u4ece\u5e93\u653e\u884c\u7684\u7aef\u53e3\u3002\n2\u3001\u4fee\u590d\u4e86\u5df2\u77e5BUG\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 39, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000007, &quot;type&quot;: 8, &quot;sort&quot;: 6, &quot;price&quot;: 19.8, &quot;name&quot;: &quot;task_manager&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u4efb\u52a1\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u8f7b\u677e\u7ba1\u7406\u8fdb\u7a0b\u3001\u6d41\u91cf\u76d1\u63a7\u3001\u542f\u52a8\u9879\u3001\u7528\u6237\u3001\u670d\u52a1\u3001\u8ba1\u5212\u4efb\u52a1\u3001\u4f1a\u8bdd&lt;a href=\&quot;https://www.bt.cn/bbs/thread-12682-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/task_manager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/task_manager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/task_manager.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4f18\u5316\u8fdb\u7a0b\u5217\u8868\u8f6e\u8be2\u673a\u5236\n2\u3001\u4fee\u590d\u90e8\u5206\u673a\u5668\u4e0a\u884c\u3001\u4e0b\u884c\u6d41\u91cf\u663e\u793a\u4e0d\u6b63\u786e\u7684\u95ee\u9898\n3\u3001\u4fee\u590d\u670d\u52a1\u6587\u4ef6\u8f6f\u94fe\u5931\u6548\u5bfc\u81f4\u7684\u9519\u8bef&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 105, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000035, &quot;type&quot;: 12, &quot;sort&quot;: 6, &quot;price&quot;: 99, &quot;name&quot;: &quot;san_security&quot;, &quot;title&quot;: &quot;\u670d\u52a1\u5668\u5b89\u5168\u626b\u63cf&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u626b\u63cf\u670d\u52a1\u5668\u7cfb\u7edf\u7684\u6f0f\u6d1e\uff0c\u5f02\u5e38\u7528\u6237\uff0c\u5df2\u5b89\u88c5\u8f6f\u4ef6\u7684\u5b89\u5168\u95ee\u9898\u5e76\u63d0\u4f9b\u4fee\u590d\u65b9\u6848.&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/san_security&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/san_security&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1 \u4f18\u5316\u4e86redis\u68c0\u6d4b\u90e8\u5206\n2 ftp\u68c0\u6d4b\u589e\u52a0\u8fd4\u56de\u663e\u793a\u5177\u4f53\u8d26\u6237\u95ee\u9898\n3 \u4f18\u5316\u4e86NGINX\u7248\u672c\u68c0\u6d4b\n4 \u4f18\u5316\u52a0\u56fa\u5efa\u8bae\u91cd\u590d\u663e\u793a\u95ee\u9898\n5 \u589e\u52a0apche2.4.49 2.4.50\u6f0f\u6d1e\u7248\u672c\u68c0\u6d4b\n6 \u589e\u52a0\u91cd\u590d\u626b\u63cf\u6309\u94ae\n7 \u4f18\u5316\u4e86mysql\u68c0\u6d4b\n8 \u4f18\u5316\u4fee\u590d\u68c0\u6d4b\u663e\u793a&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 118, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000043, &quot;type&quot;: 8, &quot;sort&quot;: 7, &quot;price&quot;: 39.8, &quot;name&quot;: &quot;btapp&quot;, &quot;title&quot;: &quot;\u5821\u5854APP&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u4f7f\u7528\u624b\u673a\u968f\u65f6\u968f\u5730\u7ba1\u7406\u60a8\u7684\u670d\u52a1\u5668\uff0c\u652f\u6301\u82f9\u679c\u548c\u5b89\u5353&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/freegroup\&quot; target=\&quot;_blank\&quot; style=\&quot;color:red\&quot;&gt; &gt; \u7ec4\u961f\u514d\u8d39\u9886\u53d6&lt;/a&gt;&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/bbs/thread-47408-1-1.html\&quot; target=\&quot;_blank\&quot;&gt; &gt; \u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btapp&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btapp&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/btapp.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u590d\u5220\u9664\u548c\u7ed1\u5b9a\u65f6\u4f1a\u5173\u95ed\u7a97\u53e3\u7684\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 185, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 101, &quot;price&quot;: 0, &quot;name&quot;: &quot;oneav&quot;, &quot;title&quot;: &quot;\u5fae\u6b65\u6728\u9a6c\u68c0\u6d4b&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u80fd\u68c0\u6d4b\u5e02\u9762\u4e0a99%\u7684\u5e38\u89c1\u6d41\u884c\u6728\u9a6c\u75c5\u6bd2\u6587\u4ef6\uff0c\u7cbe\u786e\u68c0\u6d4b\u6728\u9a6c\u5a01\u80c1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/oneav&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/oneav&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u65b0\u589e\u63d2\u4ef6&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 173, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 101, &quot;price&quot;: 0, &quot;name&quot;: &quot;ip_configuration&quot;, &quot;title&quot;: &quot;IP\u914d\u7f6e\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u7f51\u5361\u7ed1\u5b9aIP\u3001SSH\u6388\u6743IP\u3001FTP\u914d\u7f6eIP\u7b49IP\u4e00\u952e\u914d\u7f6e\u5de5\u5177,\u652f\u6301centos7\u3001debian10\u3001ubuntu18\u3001ubuntu20&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/ip_configuration&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/ip_configuration&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u589e\u52a0\u591a\u7f51\u5361\u652f\u6301&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 157, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000058, &quot;type&quot;: 8, &quot;sort&quot;: 101, &quot;price&quot;: 29.9, &quot;name&quot;: &quot;bt_ssh_auth&quot;, &quot;title&quot;: &quot;\u5821\u5854SSH\u4e8c\u6b21\u8ba4\u8bc1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u901a\u8fc7SSH\u767b\u5f55\u4e8c\u6b21\u8ba4\u8bc1\u4fdd\u8bc1SSH\u767b\u5f55\u5b89\u5168&lt;a href=\&quot;https://www.bt.cn/bbs/thread-74361-1-2.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;\u4f7f\u7528\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bt_ssh_auth&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bt_ssh_auth&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 8, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 101, &quot;price&quot;: 0, &quot;name&quot;: &quot;nginx&quot;, &quot;title&quot;: &quot;Nginx&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u8f7b\u91cf\u7ea7\uff0c\u5360\u6709\u5185\u5b58\u5c11\uff0c\u5e76\u53d1\u80fd\u529b\u5f3a&quot;, &quot;version&quot;: &quot;/www/server/nginx/sbin/nginx -v 2&gt;&amp;1|grep version|awk &#x27;&#123;print $3&#125;&#x27;|cut -f2 -d&#x27;/&#x27;&quot;, &quot;s_version&quot;: &quot;nginx&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;apache,openlitespeed&quot;, &quot;install_checks&quot;: &quot;/www/server/nginx/sbin/nginx&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/nginx&quot;, &quot;compile_args&quot;: 1, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1.22&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.20&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 0, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.21&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.23&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.19&quot;, &quot;version&quot;: &quot;8&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.18&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.14&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.15&quot;, &quot;version&quot;: &quot;10&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.16&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.17&quot;, &quot;version&quot;: &quot;10&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;-Tengine2.2&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.12&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.18.gmssl&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;openresty&quot;, &quot;version&quot;: &quot;1.19&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;1.8&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 9, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 102, &quot;price&quot;: 0, &quot;name&quot;: &quot;apache&quot;, &quot;title&quot;: &quot;Apache&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u4e16\u754c\u6392\u540d\u7b2c\u4e00\uff0c\u5feb\u901f\u3001\u53ef\u9760\u5e76\u4e14\u53ef\u901a\u8fc7\u7b80\u5355\u7684API\u6269\u5145&quot;, &quot;version&quot;: &quot;/www/server/apache/bin/httpd -v|grep version|awk &#x27;&#123;print $3&#125;&#x27;|cut -f2 -d&#x27;/&#x27;&quot;, &quot;s_version&quot;: &quot;httpd&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;nginx,openlitespeed&quot;, &quot;install_checks&quot;: &quot;/www/server/apache/bin/httpd&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/apache&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2.4&quot;, &quot;version&quot;: &quot;54&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;2.2&quot;, &quot;version&quot;: &quot;34&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 10, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 103, &quot;price&quot;: 0, &quot;name&quot;: &quot;mysql&quot;, &quot;title&quot;: &quot;MySQL&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;MySQL\u662f\u4e00\u79cd\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf!(\u652f\u6301alisql/greatsql/mariadb)&quot;, &quot;version&quot;: &quot;/www/server/mysql/bin/mysql -V|grep Ver|awk &#x27;&#123;print $5&#125;&#x27;|cut -f1 -d&#x27;,&#x27;&quot;, &quot;s_version&quot;: &quot;mysqld&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/mysql/bin/mysql&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/mysql&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5.5&quot;, &quot;version&quot;: &quot;62&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 256, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.6&quot;, &quot;version&quot;: &quot;50&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 768, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.7&quot;, &quot;version&quot;: &quot;40&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 1560, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.1&quot;, &quot;version&quot;: &quot;73&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 128, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;8.0&quot;, &quot;version&quot;: &quot;24&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 3700, &quot;cpu_limit&quot;: 2, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;AliSQL&quot;, &quot;version&quot;: &quot;5.6.32&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 768, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;greatsql_5.7&quot;, &quot;version&quot;: &quot;36&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.0&quot;, &quot;version&quot;: &quot;38&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 768, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.1&quot;, &quot;version&quot;: &quot;44&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 1024, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.2&quot;, &quot;version&quot;: &quot;31&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 1024, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.3&quot;, &quot;version&quot;: &quot;22&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 1500, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;greatsql_8.0&quot;, &quot;version&quot;: &quot;25&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 3700, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.4&quot;, &quot;version&quot;: &quot;12&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 2048, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.5&quot;, &quot;version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 2000, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.6&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 3700, &quot;cpu_limit&quot;: 2, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;mariadb_10.7&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 3700, &quot;cpu_limit&quot;: 2, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 11, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 104, &quot;price&quot;: 0, &quot;name&quot;: &quot;php&quot;, &quot;title&quot;: &quot;PHP&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;PHP\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u7f16\u7a0b\u8bed\u8a00&quot;, &quot;version&quot;: &quot;/www/server/php/&#123;VERSION&#125;/bin/php -v|grep cli|awk &#x27;&#123;print $2&#125;&#x27;&quot;, &quot;s_version&quot;: &quot;php-fpm&quot;, &quot;manager_version&quot;: &quot;/www/server/php/&#123;VERSION&#125;/sbin/php-fpm&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/php/&#123;VERSION&#125;/bin/php&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/php/&#123;VERSION&#125;&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 1, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&#123;\&quot;sg11\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;sg11\uff09&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;fileinfo\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;fileinfo\uff09&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;redis\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;redis\uff09&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;memcache\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;memcache\uff09&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;memcached\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;memcached\uff09&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;opcache\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;opcache&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;apcu\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;apcu&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;imagemagick\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;imagemagick&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;swoole\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;swoole&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;mongodb\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;mongodb&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;,\&quot;pdo_pgsql\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08PHP\u8bbe\u7f6e-&gt;\u5b89\u88c5\u6269\u5c55-&gt;pdo_pgsql&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; onclick=\\\&quot;soft.set_soft_config(&#x27;&#123;NAME&#125;&#x27;)\\\&quot;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;&#125;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;8.1&quot;, &quot;version&quot;: &quot;13&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;8.0&quot;, &quot;version&quot;: &quot;26&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;7.4&quot;, &quot;version&quot;: &quot;33&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;8.2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;7.3&quot;, &quot;version&quot;: &quot;32&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;7.2&quot;, &quot;version&quot;: &quot;33&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;7.1&quot;, &quot;version&quot;: &quot;33&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;7.0&quot;, &quot;version&quot;: &quot;33&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.6&quot;, &quot;version&quot;: &quot;40&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 64, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.5&quot;, &quot;version&quot;: &quot;38&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.4&quot;, &quot;version&quot;: &quot;45&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.3&quot;, &quot;version&quot;: &quot;29&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.2&quot;, &quot;version&quot;: &quot;17&quot;, &quot;dependnet&quot;: &quot;mysql&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 156, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 105, &quot;price&quot;: 0, &quot;name&quot;: &quot;nodejs&quot;, &quot;title&quot;: &quot;Node.js\u7248\u672c\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5b89\u88c5\u3001\u5378\u8f7d\u3001\u914d\u7f6enode.js\u7248\u672c\uff0c\u4e0ePM2\u7ba1\u7406\u5668\u4e92\u65a5&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/nodejs&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/nodejs&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590d\u4e0b\u8f7d\u4e2d\u65ad\u65f6\u62a5\u9519\u7684\u95ee\u9898\n2\u3001\u8bbe\u7f6e\u547d\u4ee4\u884c\u7248\u672c\u65f6\u6dfb\u52a0node/bin\u5230PATH&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 12, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 105, &quot;price&quot;: 0, &quot;name&quot;: &quot;pureftpd&quot;, &quot;title&quot;: &quot;Pure-Ftpd&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;PureFTPd\u662f\u4e00\u6b3e\u4e13\u6ce8\u4e8e\u7a0b\u5e8f\u5065\u58ee\u548c\u8f6f\u4ef6\u5b89\u5168\u7684\u514d\u8d39FTP\u670d\u52a1\u5668\u8f6f\u4ef6&quot;, &quot;version&quot;: &quot;cat /www/server/pure-ftpd/version.pl&quot;, &quot;s_version&quot;: &quot;pure-ftpd&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/pure-ftpd/bin/pure-pw&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/pure-ftpd&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1.0&quot;, &quot;version&quot;: &quot;49&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 13, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 106, &quot;price&quot;: 0, &quot;name&quot;: &quot;phpmyadmin&quot;, &quot;title&quot;: &quot;phpMyAdmin&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u8457\u540dWeb\u7aefMySQL\u7ba1\u7406\u5de5\u5177&quot;, &quot;version&quot;: &quot;cat /www/server/phpmyadmin/version.pl&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;mysql,nginx|apache|openlitespeed&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/phpmyadmin/version.pl&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/phpmyadmin&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5.0&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;php-7.4|php-8.0|php-8.1&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;4.9&quot;, &quot;version&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;php-7.0|php-7.1|php-7.2|php-7.3|php-7.4&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;4.4&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;php-5.3|php-5.4|php-5.5|php-5.6|php-7.0|php-7.1|php-7.2&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;4.0&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;php-5.4|php-5.2|php-5.3&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;php-7.1|php-7.2|php-7.3|php-7.4|php-8.0|php-8.1&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;5.2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 140, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 107, &quot;price&quot;: 0, &quot;name&quot;: &quot;java_manager&quot;, &quot;title&quot;: &quot;Java\u9879\u76ee\u4e00\u952e\u90e8\u7f72&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;Java\u9879\u76ee\u4e00\u952e\u90e8\u7f72\uff0c\u5305\u62ectomcat\uff0cspring boot&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/java_manager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/java_manager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&#123;\&quot;jdk\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08\u8bbe\u7f6e-&gt;\u5bb9\u5668\u7ba1\u7406-&gt;\u5b89\u88c5jdk-&gt;\u5305\u542b\u9ed8\u8ba4jdk1.7\uff0cjdk1.8 \u6216 \u5230\u7f51\u7ad9-&gt;JAVA\u9879\u76ee-&gt;jdk\u7ba1\u7406\uff09&lt;/span&gt;\&quot;&#125;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;2021-06-19\u66f4\u65b0\u3002\n\u4fee\u590d\u524d\u7aef\u9875\u9762bug&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 14, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 107, &quot;price&quot;: 0, &quot;name&quot;: &quot;tomcat&quot;, &quot;title&quot;: &quot;Tomcat&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5f00\u53d1\u548c\u8c03\u8bd5JSP\u7a0b\u5e8f\u7684\u9996\u9009&quot;, &quot;version&quot;: &quot;/www/server/tomcat/bin/version.sh|grep version|awk &#x27;&#123;print $4&#125;&#x27;|cut -f2 -d&#x27;/&#x27;&quot;, &quot;s_version&quot;: &quot;jsvc,java&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/tomcat/bin/catalina.sh&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/tomcat&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;7&quot;, &quot;version&quot;: &quot;0.76&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 256, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;8&quot;, &quot;version&quot;: &quot;5.69&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 256, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;9&quot;, &quot;version&quot;: &quot;0.0.M18&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 512, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 15, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 108, &quot;price&quot;: 0, &quot;name&quot;: &quot;pm2&quot;, &quot;title&quot;: &quot;PM2\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;node.js\u7ba1\u7406\u5668\uff0c\u5185\u7f6e node.js + npm + nvm + pm2.!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/pm2/pm2_main.py&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/pm2&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 256, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u589e\u52a0\u96c6\u7fa4\u5206\u7ec4\n2\u3001\u589e\u52a0\u81ea\u5b9a\u4e49\u76d1\u542c\u7aef\u53e3\u529f\u80fd\n3\u3001\u4fee\u590d\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u65e0\u6cd5\u83b7\u53d6\u7aef\u53e3\u7684\u95ee\u9898\n4\u3001\u4fee\u590d\u96c6\u7fa4\u6a21\u5f0f\u4e0b\u65e0\u6cd5\u63a7\u5236\u6574\u4e2a\u96c6\u7fa4\u72b6\u6001\u7684\u95ee\u9898\n5\u3001\u5176\u5b83\u7ec6\u8282\u8c03\u6574&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 65, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 108, &quot;price&quot;: 0, &quot;name&quot;: &quot;tomcat2&quot;, &quot;title&quot;: &quot;Java\u9879\u76ee\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5f00\u53d1\u548c\u8c03\u8bd5JSP\u7a0b\u5e8f\u7684\u9996\u9009&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/tomcat2&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/tomcat2&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;update_msg&quot;: &quot;1. \u66f4\u65b0\u6bcf\u4e2a\u7ad9\u70b9\u4e3a\u72ec\u7acb\u9879\u76ee\n2. \u4fee\u6539\u7aef\u53e3\u65f6\u7684\u6620\u5c04\u95ee\u9898\n3. \u4fee\u6b63\u4ee3\u7801\u903b\u8f91\n\n1. Update each site as a separate project\n2. Mapping problems when modifying ports\n3. Fix code logic&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 16, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 109, &quot;price&quot;: 0, &quot;name&quot;: &quot;docker&quot;, &quot;title&quot;: &quot;Docker\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/docker&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/docker&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;8&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 768, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u590dUbuntu\u673a\u5668\u83b7\u53d6\u955c\u50cf\u5217\u8868\u62a5\u9519\u7684\u95ee\u9898\n\u589e\u52a0\u5f00\u542f\u81ea\u542f\u52a8&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 17, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 110, &quot;price&quot;: 0, &quot;name&quot;: &quot;mongodb&quot;, &quot;title&quot;: &quot;MongoDB&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u57fa\u4e8e\u5206\u5e03\u5f0f\u6587\u4ef6\u5b58\u50a8\u7684\u6570\u636e\u5e93\uff0c\u65e8\u5728\u4e3aWEB\u5e94\u7528\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u9ad8\u6027\u80fd\u6570\u636e\u5b58\u50a8\u89e3\u51b3\u65b9\u6848!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;mongod&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mongodb&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mongodb&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4.4&quot;, &quot;version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 384, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 18, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 111, &quot;price&quot;: 0, &quot;name&quot;: &quot;memcached&quot;, &quot;title&quot;: &quot;Memcached&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;Memcached \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5bf9\u8c61\u7f13\u5b58\u7cfb\u7edf&quot;, &quot;version&quot;: &quot;/usr/local/memcached/bin/memcached -V|awk &#x27;&#123;print $2&#125;&#x27;&quot;, &quot;s_version&quot;: &quot;memcached&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/usr/local/memcached/bin/memcached&quot;, &quot;uninsatll_checks&quot;: &quot;/usr/local/memcached&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1.6&quot;, &quot;version&quot;: &quot;17&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 256, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 110, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 111, &quot;price&quot;: 0, &quot;name&quot;: &quot;static_cdn&quot;, &quot;title&quot;: &quot;\u5821\u5854\u9762\u677f\u9759\u6001\u6587\u4ef6\u52a0\u901f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5bf9\u9762\u677f\u9759\u6001\u6587\u4ef6\u8fdb\u884cCDN\u52a0\u901f\uff0c\u52a0\u5feb\u9762\u677f\u52a0\u8f7d\u901f\u5ea6\uff0c\u63d0\u5347\u5bf9\u5c0f\u5e26\u5bbd\u548c\u6d77\u5916\u670d\u52a1\u5668\u7684\u9762\u677f\u4f7f\u7528\u4f53\u9a8c!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/static_cdn&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/static_cdn&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590d\u8282\u70b9\u6545\u969c\u540e\u53cd\u590d\u8df3\u51fa\u5173\u95ed\u63d0\u793a\u7684\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 19, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 112, &quot;price&quot;: 0, &quot;name&quot;: &quot;redis&quot;, &quot;title&quot;: &quot;Redis&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;Redis\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684key-value\u6570\u636e\u5e93(PHP\u8fde\u63a5redis\uff0c\u9700PHP\u8bbe\u7f6e\u4e2d\u5b89\u88c5redis\u6269\u5c55) \u90e8\u5206Centos7\u7cfb\u7edf\u4ec5\u652f\u6301\u5b89\u88c55.x\u7248\u672c&quot;, &quot;version&quot;: &quot;/www/server/redis/src/redis-server -v|awk &#x27;&#123;print $3&#125;&#x27;|cut -f2 -d&#x27;=&#x27;&quot;, &quot;s_version&quot;: &quot;redis-server&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/redis/runtest&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/redis&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&#123;\&quot;redis\&quot;:\&quot;&lt;span style=&#x27;color:#fc6d26&#x27;&gt;\uff08\u7ba1\u7406\u5de5\u5177\u8bf7\u524d\u5f80\uff1a\u5de6\u4fa7\u83dc\u5355-&gt;\u6570\u636e\u5e93-&gt;redis\u6a21\u578b\uff09&lt;/span&gt;|&lt;a class=\\\&quot;btlink\\\&quot; href=&#x27;/database&#x27;&gt;&gt;&gt;\u7acb\u5373\u524d\u5f80&lt;/a&gt;\&quot;&#125;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;7.0&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 256, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;, &#123;&quot;m_version&quot;: &quot;6.2&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 144, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 112, &quot;price&quot;: 0, &quot;name&quot;: &quot;btappmanager&quot;, &quot;title&quot;: &quot;\u5821\u5854\u5e94\u7528\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;PHP\u3001Python\u3001Java\u3001Go\u5e94\u7528\u6301\u4e45\u5316\u8fd0\u884c\u548c\u7ba1\u7406\u3002&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-54473-1-1.html&#x27; target=&#x27;_blank&#x27;&gt;\u6559\u7a0b\u548c\u53cd\u9988&gt;&gt;&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btappmanager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btappmanager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u8c03\u6574python\u73af\u5883\u52a0\u8f7d\u5339\u914d\u7684\u65b9\u5f0f\uff0c\u6253\u5f00\u65f6\u62a5\u9519\u8bf7\u4fee\u590d\u5347\u7ea7\u3002\n2. \u7b80\u5355\u8c03\u6574\u5e94\u5bf9\u90e8\u5206\u4e2d\u6587\u5e94\u7528\u540d\u79f0\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u3002\u8bf7\u8c28\u614e\u4f7f\u7528\u4e2d\u6587\u5e94\u7528\u540d\uff0c\u4e0b\u4e2a\u7248\u672c\u4fee\u590d\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 20, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 113, &quot;price&quot;: 0, &quot;name&quot;: &quot;gitlab&quot;, &quot;title&quot;: &quot;GitLab\u4e2d\u6587\u793e\u533a\u7248&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5f53\u524d\u4ec5\u652f\u6301Centos6/7 64\u4f4d\u7cfb\u7edf\uff0c\u5185\u5b58\u5c0f\u4e8e2GB\u7684\u673a\u5668\u8bf7\u52ff\u5b89\u88c5!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/gitlab&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/gitlab&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;8.8&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 1560, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 108, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 113, &quot;price&quot;: 0, &quot;name&quot;: &quot;new_gitlab&quot;, &quot;title&quot;: &quot;GitLab\u6700\u65b0\u793e\u533a\u7248&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u652f\u6301Centos6-8/ubuntu TLS/debian 64\u4f4d\u7cfb\u7edf,\u5185\u5b58\u5c0f\u4e8e4GB\u7684\u673a\u5668\u8bf7\u52ff\u5b89\u88c5!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/new_gitlab&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/new_gitlab&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;12.8&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 3560, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 136, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 5, &quot;sort&quot;: 113, &quot;price&quot;: 0, &quot;name&quot;: &quot;openlitespeed&quot;, &quot;title&quot;: &quot;OpenLiteSpeed&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;OpenLiteSpeed\u662fLiteSpeed Web Server Enterprise\u7684\u5f00\u6e90\u7248\u672c\u3002&quot;, &quot;version&quot;: &quot;cat /usr/local/lsws/VERSION&quot;, &quot;s_version&quot;: &quot;openlitespeed&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;nginx,apache&quot;, &quot;install_checks&quot;: &quot;/usr/local/lsws/bin/lswsctrl&quot;, &quot;uninsatll_checks&quot;: &quot;/usr/local/lsws/bin/lswsctrl&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1.7&quot;, &quot;version&quot;: &quot;16&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 101, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 114, &quot;price&quot;: 0, &quot;name&quot;: &quot;fail2ban&quot;, &quot;title&quot;: &quot;Fail2ban\u9632\u7206\u7834&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u9632\u6b62\u6076\u610f\u4e3b\u673a\u7206\u7834\u670d\u52a1\u3001\u7ad9\u70b9\uff0c\u7981\u6b62\u5bfc\u81f4\u591a\u4e2a\u8eab\u4efd\u9a8c\u8bc1\u9519\u8bef\u7684\u4e3b\u673a&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/fail2ban&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/fail2ban&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u4f18\u5316\u4e86ubuntu\u90ae\u5c40\u7684\u652f\u6301\n2. \u4f18\u5316\u4e86\u9ed1\u540d\u5355\u6279\u91cf\u6dfb\u52a0\n3. \u5bf9IPV6\u5730\u5740\u517c\u5bb9&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 85, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 114, &quot;price&quot;: 0, &quot;name&quot;: &quot;dns_manager&quot;, &quot;title&quot;: &quot;DNS\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u7ba1\u7406\u591a\u4e2a\u57df\u540d\u89e3\u6790\uff0c\u6682\u65f6\u53ea\u652f\u6301\u6b63\u5411\u89e3\u6790\u548clinux centos7.x\u7248\u672c\u7cfb\u7edf&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/dns_manager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/dns_manager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u65b0\u589eSOA\u8bb0\u5f55\u4fee\u6539\n\u65b0\u589eCAA\u8bb0\u5f55\u6dfb\u52a0\u4fee\u6539&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 82, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 114, &quot;price&quot;: 0, &quot;name&quot;: &quot;mail_sys&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u90ae\u5c40\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u591a\u57df\uff0c\u591a\u7528\u6237\u90ae\u5c40\uff0c\u652f\u6301SMTP/IMAP/POP3/HTTP\u63a5\u53e3\uff0c\u9700\u898125\u7aef\u53e3&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/bbs/thread-87496-1-1.html\&quot; target=\&quot;_blank\&quot;&gt; [\u4f7f\u7528\u5e2e\u52a9]&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mail_sys&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mail_sys&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u6dfb\u52a0rspamd\u53cd\u5783\u573e\u670d\u52a1\n2\u3001\u4f18\u5316\u90ae\u7bb1\u5217\u8868\u663e\u793a\n3\u3001\u4f18\u5316\u90ae\u4ef6\u5217\u8868\u663e\u793a\n4\u3001\u5176\u4ed6bug\u4fee\u590d&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 147, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000056, &quot;type&quot;: 12, &quot;sort&quot;: 115, &quot;price&quot;: 99, &quot;name&quot;: &quot;node_admin&quot;, &quot;title&quot;: &quot;\u8282\u70b9\u540c\u6b65\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u63d0\u4f9b\u540c\u6b65\u7f51\u7ad9\u914d\u7f6e\uff0cSSL\u8bc1\u4e66\uff0c\u7f51\u7ad9\u6587\u4ef6\uff0cRewrite\u7b49\u529f\u80fd&lt;a href=\&quot;https://www.bt.cn/bbs/thread-58391-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt;&gt;&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/node_admin&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/node_admin&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u5ef6\u8fdf\u6d4b\u8bd5\u5468\u671f\u52302021-01-20&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 83, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 115, &quot;price&quot;: 0, &quot;name&quot;: &quot;psync_api&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u4e00\u952e\u8fc1\u79fbAPI\u7248\u672c&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5feb\u901f\u8fc1\u79fb\u9762\u677f\u6570\u636e\uff0c\u6b64\u7248\u672c\u4ec5\u5728\u8fc1\u51fa\u673a\u5668\uff08\u53d1\u9001\u6570\u636e\u7aef\uff09\u5b89\u88c5\u5373\u53ef&lt;a href=\&quot;https://www.bt.cn/bbs/thread-33070-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt;&gt;&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/psync_api&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/psync_api&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u589e\u52a0\u3010\u5f00\u53d1\u8005\u6a21\u5f0f\u3011\u65e0\u6cd5\u4f7f\u7528\u7684\u63d0\u793a\n2\u3001\u4fee\u6b63\u5b50\u76ee\u5f55\u7ed1\u5b9a\u548c\u91cd\u5b9a\u5411\u5217\u8868\u672a\u88ab\u8fc1\u79fb\u7684\u95ee\u9898\n3\u3001\u4fee\u6b63\u7f51\u7ad9\u65e5\u5fd7\u8def\u5f84\u88ab\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5bfc\u81f4\u7684\u95ee\u9898\n4\u3001\u589e\u52a0\u5bf9\u65b0\u7248acme\u534f\u8bae\u7684\u8fc1\u79fb\u652f\u6301\n\n1. Added [Developer Mode] unavailable prompt\n2. Fixed the problem that the subdirectory binding and redirect list were not migrated\n3. Fix the problem caused by the website log path being modified\n4. Add migration support for the new acme protocol&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 69, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 115, &quot;price&quot;: 0, &quot;name&quot;: &quot;pythonmamager&quot;, &quot;title&quot;: &quot;Python\u9879\u76ee\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5feb\u901f\u90e8\u7f72Python\u9879\u76ee\uff0c\u5f53\u524d\u4ec5\u652f\u6301Centos7.x\uff0c\u53ef\u90e8\u7f72\u6846\u67b6\u6709flask,django,sanic&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-90005-1-1.html&#x27; target=\&quot;_blank\&quot;&gt; &gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/pythonmamager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/pythonmamager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;9&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;update_msg&quot;: &quot;\u8c03\u6574uwsgi\u542f\u52a8\u65b9\u5f0f\n\nAdjust uwsgi startup method&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 75, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 116, &quot;price&quot;: 0, &quot;name&quot;: &quot;pgsql_manager&quot;, &quot;title&quot;: &quot;PostgreSQL\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u7528\u4e8e\u5b89\u88c5\u5e76\u7ba1\u7406 PostgreSQL\u6570\u636e\u5e93&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/pgsql_manager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/pgsql_manager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u589e\u52a012.4\u548c13.0\u7248\u672c\u9009\u9879\uff1b\n\u4fee\u590d\u5907\u4efd\u6062\u590d\u6570\u636e\u4e0d\u6210\u529f\u7684\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 23, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 117, &quot;price&quot;: 0, &quot;name&quot;: &quot;upyun&quot;, &quot;title&quot;: &quot;\u53c8\u62cd\u4e91\u5b58\u50a8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u53c8\u62cd\u4e91\u5bf9\u8c61\u5b58\u50a8\uff0c\u5b9d\u5854\u7528\u6237\u9996\u6708\u514d\u8d39200G\u6d41\u91cf+\u9996\u6b21\u5145\u503c9\u6298\u4f18\u60e0&lt;a href=&#x27;https://console.upyun.com/register/?invite=SJ42ZQ62t&#x27; target=&#x27;_blank&#x27; class=&#x27;btlink&#x27;&gt; [\u70b9\u51fb\u7533\u8bf7]&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/upyun&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/upyun&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4&quot;, &quot;version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u652f\u6301\u6d88\u606f\u901a\u77e5\u3002\n2. \u6574\u7406\u9519\u8bef\u63d0\u9192\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 24, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 118, &quot;price&quot;: 0, &quot;name&quot;: &quot;ftp&quot;, &quot;title&quot;: &quot;FTP\u5b58\u50a8\u7a7a\u95f4&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230FTP\u5b58\u50a8\u7a7a\u95f4&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/ftp&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/ftp&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u4fee\u590dsftp api\u9a8c\u8bc1\u9519\u8bef\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 25, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 119, &quot;price&quot;: 0, &quot;name&quot;: &quot;alioss&quot;, &quot;title&quot;: &quot;\u963f\u91cc\u4e91OSS&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230\u963f\u91cc\u4e91OSS\u5bf9\u8c61\u5b58\u50a8\u7a7a\u95f4, &lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.aliyun.com/product/oss?source=5176.11533457&amp;userCode=ebtrll6w&#x27; target=&#x27;_blank&#x27;&gt;[\u70b9\u51fb\u7533\u8bf7]&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/alioss&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/alioss&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u652f\u6301\u9762\u677f\u65b0\u7248\u672c\u7684\u5907\u4efd\u5931\u8d25\u901a\u77e5\u3002\n2. \u8c03\u6574\u9519\u8bef\u63d0\u793a\u3002\n3. \u8bbe\u7f6esecret key\u5185\u5bb9\u9ed8\u8ba4\u9690\u85cf\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 90, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 120, &quot;price&quot;: 0, &quot;name&quot;: &quot;gcloud_storage&quot;, &quot;title&quot;: &quot;\u8c37\u6b4c\u4e91\u5b58\u50a8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230Google Cloud Storage&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/gcloud_storage&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/gcloud_storage&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u4fee\u590d\u4e0d\u80fd\u5220\u9664\u5907\u4efd\u6587\u4ef6\u7684bug(Fix the bug that the backup file cannot be deleted)&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 128, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 120, &quot;price&quot;: 0, &quot;name&quot;: &quot;aws_s3&quot;, &quot;title&quot;: &quot;\u4e9a\u9a6c\u900aS3\u4e91\u5b58\u50a8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u8ba9\u4f60\u7684\u6570\u636e\u5907\u4efd\u5230\u4e9a\u9a6c\u900a\u5bf9\u8c61\u5b58\u50a8&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/aws_s3&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/aws_s3&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u652f\u6301\u7f51\u7ad9\u6062\u590d\n\nSupport website restoration&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 151, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 120, &quot;price&quot;: 0, &quot;name&quot;: &quot;dnspod&quot;, &quot;title&quot;: &quot;\u817e\u8baf\u4e91DNS\u89e3\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;&lt;span style=&#x27;color:red;&#x27;&gt;\u817e\u8baf\u4e91\u5c06\u4e8e2023-01-01\u505c\u7528\u8001\u63a5\u53e3\uff0c\u8bf7\u5c3d\u5feb\u5347\u7ea7\u63d2\u4ef6\u52303.0+\u3002&lt;/span&gt;\u817e\u8baf\u4e91DNS\u89e3\u6790\u662f\u56fd\u5185\u6700\u5927\u7684\u514d\u8d39DNS\u89e3\u6790\u4ea7\u54c1\u63d0\u4f9b\u5546&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-65397-1-1.html&#x27; target=&#x27;_blank&#x27;&gt;-&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/dnspod&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/dnspod&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 154, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 120, &quot;price&quot;: 0, &quot;name&quot;: &quot;txcdn&quot;, &quot;title&quot;: &quot;\u817e\u8baf\u4e91CDN&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u817e\u8baf\u4e91 CDN \u7d2f\u8ba1\u5f00\u653e\u4e86\u817e\u8baf\u5341\u591a\u5e74\u7684\u8282\u70b9\uff0c\u63d0\u4f9b\u4e861000+\u4e2a\u5883\u5916\u8282\u70b9\uff0c\u8986\u76d6\u5168\u740350+\u4e2a\u56fd\u5bb6\u548c\u5730\u533a\uff0c\u652f\u6301\u60a8\u7684\u4e1a\u52a1\u65e0\u7f1d\u51fa\u6d77\u3002&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-65398-1-1.html&#x27; target=&#x27;_blank&#x27;&gt;-&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/txcdn&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/txcdn&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 115, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000041, &quot;type&quot;: 12, &quot;sort&quot;: 120, &quot;price&quot;: 99, &quot;name&quot;: &quot;oos&quot;, &quot;title&quot;: &quot;\u5821\u5854\u8fd0\u7ef4\u5e73\u53f0&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u63d0\u4f9b\u8fd0\u7ef4\u4efb\u52a1\u7f16\u6392\u3001\u811a\u672c\u5e93\u3001\u591a\u53f0\u670d\u52a1\u5668\u6279\u91cf\u8fd0\u7ef4\u3001\u547d\u4ee4\u7fa4\u53d1\u7b49\uff0c\u9002\u7528\u4e8e\u6709\u591a\u53f0\u670d\u52a1\u5668\u7684\u7528\u6237&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/oos&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/oos&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/oos.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u589e\u5f3a\u6279\u7406\u547d\u4ee4\u6267\u884c\u80fd\u529b&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 26, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 120, &quot;price&quot;: 0, &quot;name&quot;: &quot;qiniu&quot;, &quot;title&quot;: &quot;\u4e03\u725b\u4e91\u5b58\u50a8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230\u4e03\u725b\u5bf9\u8c61\u5b58\u50a8\u7a7a\u95f4,\u4e03\u725b\u63d0\u4f9b10GB\u514d\u8d39\u5b58\u50a8\u7a7a\u95f4, &lt;a class=&#x27;btlink&#x27;  rel=&#x27;noreferrer noopener&#x27; href=&#x27;https://s.qiniu.com/2Unqqi&#x27; target=&#x27;_blank&#x27;&gt;\u70b9\u51fb\u7533\u8bf7&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/qiniu&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/qiniu&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u518d\u6b21\u517c\u5bb9\u4e03\u725bv2\u5206\u7247\u4e0a\u4f20\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 97, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 120, &quot;price&quot;: 0, &quot;name&quot;: &quot;gdrive&quot;, &quot;title&quot;: &quot;\u8c37\u6b4c\u4e91\u7f51\u76d8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6216\u6307\u5b9a\u76ee\u5f55\u6570\u636e\u6253\u5305\u5907\u4efd\u5230\u8c37\u6b4c\u4e91\u7f51\u76d8&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/gdrive&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/gdrive&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u590d\u6587\u4ef6\u4e0d\u5b58\u5728\u7f51\u76d8\u65f6\u5220\u9664\u62a5\u9519\u7684\u95ee\u9898\n\nFix the problem of deleting an error when the file does not exist in the gdrive&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 127, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 121, &quot;price&quot;: 0, &quot;name&quot;: &quot;firewall&quot;, &quot;title&quot;: &quot;\u7cfb\u7edf\u9632\u706b\u5899&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u63d0\u4f9b\u7cfb\u7edf\u9632\u706b\u5899(iptables/firewall/ufw)\u7684\u53ef\u89c6\u5316\u7ba1\u7406\u529f\u80fd&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/firewall&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/firewall&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590dCentOS\u4e0b\u7aef\u53e3\u8f6c\u53d1\u8bbe\u7f6e\u5931\u6548\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 28, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 122, &quot;price&quot;: 0, &quot;name&quot;: &quot;webhook&quot;, &quot;title&quot;: &quot;\u5b9d\u5854WebHook&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;WebHook\uff0c\u53ef\u8bbe\u7f6e\u56de\u8c03\u811a\u672c\uff0c\u901a\u5e38\u7528\u4e8e\u7b2c\u4e09\u65b9\u56de\u8c03\u901a\u77e5!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/webhook&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/webhook&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u6b63\u53c2\u6570\u4e2d\u5e26\u5f15\u53f7\u5bfc\u81f4\u65e0\u6cd5\u6b63\u786e\u4f20\u9012\u7684\u95ee\u9898\n\n1. Fix the problem that parameters cannot be passed correctly with quotation marks&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 135, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 122, &quot;price&quot;: 0, &quot;name&quot;: &quot;boot&quot;, &quot;title&quot;: &quot;\u7cfb\u7edf\u542f\u52a8\u9879&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u63d0\u4f9b\u7cfb\u7edf\u542f\u52a8\u9879\u7684\u53ef\u89c6\u5316\u7ba1\u7406\u529f\u80fd&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/boot&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/boot&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 32, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 126, &quot;price&quot;: 0, &quot;name&quot;: &quot;linuxsys&quot;, &quot;title&quot;: &quot;Linux\u5de5\u5177\u7bb1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;Linux\u7cfb\u7edf\u5de5\u5177\uff0c\u914d\u7f6eDNS\u3001Swap\u3001\u65f6\u533a\u3001\u5185\u5b58\u76d8!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/linuxsys&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/linuxsys&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u6b63\u6dfb\u52a0IP\u5730\u5740\u4e0d\u751f\u6548\u7684\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 33, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 127, &quot;price&quot;: 0, &quot;name&quot;: &quot;phpguard&quot;, &quot;title&quot;: &quot;PHP\u5b88\u62a4&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u76d1\u63a7PHP-FPM\u8fd0\u884c\u72b6\u6001\uff0c\u9632\u6b62\u5927\u6279\u91cf\u51fa\u73b0502\u9519\u8bef!&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/phpguard&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/phpguard&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 42, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 127, &quot;price&quot;: 0, &quot;name&quot;: &quot;score&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u8dd1\u5206&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u6d4b\u8bd5\u670d\u52a1\u5668\u57fa\u7840\u6027\u80fd&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/score&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/score&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 167, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 128, &quot;price&quot;: 0, &quot;name&quot;: &quot;webshell_check&quot;, &quot;title&quot;: &quot;\u6728\u9a6c\u67e5\u6740\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5b9d\u5854\u96c6\u6210\u957f\u4ead\u7267\u4e91\u7684\u6728\u9a6c\u67e5\u6740\u80fd\u529b\u3002\u6709\u6548\u7684\u67e5\u6740webshell \u3002\u6740\u6bd2\u5fc5\u5907\u3002\u626b\u63cf\u6728\u9a6c\u7684\u9996\u9009&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/webshell_check&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/webshell_check&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 148, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000009, &quot;type&quot;: 8, &quot;sort&quot;: 128, &quot;price&quot;: 39.8, &quot;name&quot;: &quot;load_balance&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u8d1f\u8f7d\u5747\u8861-\u91cd\u6784\u7248&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u57fa\u4e8enginx\u7684\u8d1f\u8f7d\u5747\u8861, \u4f7f\u7528\u4e4b\u524d\u8bf7\u5148\u5b89\u88c5nginx&lt;a href=\&quot;https://www.bt.cn/bbs/thread-89646-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt;&gt;\u4f7f\u7528\u5e2e\u52a9&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;nginx&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/load_balance&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/load_balance&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/load_balance.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590d\u521b\u5efa\u8d1f\u8f7d\u5747\u8861\u65f6\u672a\u6dfb\u52a0\u8282\u70b9\u76f4\u63a5\u62a5\u9519\u7684\u95ee\u9898\n2\u3001\u4fee\u590d\u521b\u5efa\u8d1f\u8f7d\u5747\u8861\u65f6\u672a\u6dfb\u52a0\u666e\u901a\u8282\u70b9\u4e5f\u80fd\u6210\u529f\u7684\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 91, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 128, &quot;price&quot;: 0, &quot;name&quot;: &quot;supervisor&quot;, &quot;title&quot;: &quot;\u8fdb\u7a0b\u5b88\u62a4\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u57fa\u4e8eSupervisor\u5f00\u53d1\u7684\u8fdb\u7a0b\u5b88\u62a4\u5de5\u5177\uff0c\u53ef\u4ee5\u8ba9\u8fdb\u7a0b\u5f00\u673a\u542f\u52a8\uff0c\u5f02\u5e38\u5173\u95ed\u81ea\u52a8\u91cd\u542f&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/supervisor&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/supervisor&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u590dpython\u517c\u5bb9\u95ee\u9898\n\nFix python compatibility issues&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 44, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 129, &quot;price&quot;: 0, &quot;name&quot;: &quot;txcos&quot;, &quot;title&quot;: &quot;\u817e\u8baf\u4e91COS&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230\u817e\u8baf\u4e91COS\u5bf9\u8c61\u5b58\u50a8\u7a7a\u95f4 &lt;a class=\&quot;btlink\&quot; href=\&quot;https://curl.qcloud.com/Jv7OYaXY\&quot; target=\&quot;_blank\&quot;&gt;[\u7533\u8bf7\u8d26\u53f7]&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/txcos&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/txcos&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4&quot;, &quot;version&quot;: &quot;8&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u652f\u6301\u6d88\u606f\u901a\u77e5\u3002\n2. \u6574\u7406\u9519\u8bef\u6d88\u606f\u63d0\u9192\u3002\n3. \u9690\u85cfsecret key\u8f93\u5165\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 70, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000017, &quot;type&quot;: 8, &quot;sort&quot;: 129, &quot;price&quot;: 19.8, &quot;name&quot;: &quot;msg_push&quot;, &quot;title&quot;: &quot;\u5f02\u5e38\u76d1\u63a7\u63a8\u9001&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u76d1\u63a7\u670d\u52a1\u5668\u3001\u7f51\u7ad9\u3001SSL\u8bc1\u4e66\u3001\u5e38\u7528\u670d\u52a1\u7b49\u8d44\u6e90\u5f02\u5e38\u5e76\u53d1\u9001\u544a\u8b66&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/bbs/thread-23574-1-1.html\&quot; target=\&quot;_blank\&quot;&gt;&gt;&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/msg_push&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/msg_push&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/msg_push.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4f18\u5316\u63a8\u9001\u903b\u8f91\n\u4fee\u590d\u5df2\u77e5BUG&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 45, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 130, &quot;price&quot;: 0, &quot;name&quot;: &quot;webssh&quot;, &quot;title&quot;: &quot;\u5b9d\u5854SSH\u7ec8\u7aef&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5b8c\u6574\u529f\u80fd\u7684SSH\u5ba2\u6237\u7aef\uff0c\u4ec5\u7528\u4e8e\u8fde\u63a5\u672c\u670d\u52a1\u5668&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/webssh&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/webssh&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 161, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 130, &quot;price&quot;: 0, &quot;name&quot;: &quot;bos&quot;, &quot;title&quot;: &quot;\u767e\u5ea6\u4e91\u5b58\u50a8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230\u767e\u5ea6\u4e91\u5bf9\u8c61\u5b58\u50a8,\u4f01\u4e1a\u514d\u8d39\u4f53\u9a8c6\u4e2a\u6708500G/\u4e2a\u4eba\u514d\u8d39\u4f53\u9a8c\u4e00\u4e2a\u6708100GB\u5b58\u50a8\u7a7a\u95f4! &lt;a class=&#x27;btlink&#x27; href=&#x27;https://login.bce.baidu.com/reg.html?tpl=bceplat&amp;amp;from=portal&#x27; target=&#x27;_blank&#x27;&gt;\u70b9\u51fb\u7533\u8bf7&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bos&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bos&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 47, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 6, &quot;sort&quot;: 131, &quot;price&quot;: 0, &quot;name&quot;: &quot;clear&quot;, &quot;title&quot;: &quot;\u65e5\u5fd7\u6e05\u7406\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u4e00\u952e\u6e05\u7406\u6307\u5b9a\u65e5\u5fd7\u548c\u7cfb\u7edf\u5783\u573e&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/clear&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/clear&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 163, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 131, &quot;price&quot;: 0, &quot;name&quot;: &quot;obs&quot;, &quot;title&quot;: &quot;\u534e\u4e3a\u4e91\u5b58\u50a8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c06\u7f51\u7ad9\u6216\u6570\u636e\u5e93\u6253\u5305\u5907\u4efd\u5230\u534e\u4e3a\u4e91\u5bf9\u8c61\u5b58\u50a8&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/obs&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/obs&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 132, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 132, &quot;price&quot;: 0, &quot;name&quot;: &quot;anti_spam&quot;, &quot;title&quot;: &quot;\u53cd\u5783\u573e\u90ae\u4ef6\u7f51\u5173&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5141\u8bb8\u4f60\u5c06\u90ae\u4ef6\u670d\u52a1\u5668\u63a5\u5165\u8fc7\u6ee4\u5783\u573e/\u75c5\u6bd2\u90ae\u4ef6&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/anti_spam&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/anti_spam&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 1900, &quot;cpu_limit&quot;: 2, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u590d\u4e00\u4e9bBUG\n\nFix some bugs&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 55, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 132, &quot;price&quot;: 0, &quot;name&quot;: &quot;backup&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u914d\u7f6e\u5907\u4efd&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5feb\u901f\u5907\u4efd\u8ba1\u5212\u4efb\u52a1\u548c\u5b9d\u5854\u76f8\u5173\u914d\u7f6e\u6570\u636e&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/backup&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/backup&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 40, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000001, &quot;type&quot;: 8, &quot;sort&quot;: 135, &quot;price&quot;: 4.8, &quot;name&quot;: &quot;app&quot;, &quot;title&quot;: &quot;\u5fae\u4fe1\u5c0f\u7a0b\u5e8f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5c0f\u7a0b\u5e8f\u5df2\u57281\u670815\u65e5\u4e0b\u67b6\uff0c\u539f\u5269\u4f59\u65f6\u95f4\u53ef\u514d\u8d39\u4f7f\u7528\u3010&lt;a href=\&quot;https://www.bt.cn/bbs/thread-47408-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt;\u5821\u5854APP&lt;/i&gt;&lt;/a&gt;\u3011\uff0c\u529f\u80fd\u66f4\u5f3a\u5927\uff0c\u8bf7\u66f4\u6362\u4f7f\u7528\u3002&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/app&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/app&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;8&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 104, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000034, &quot;type&quot;: 12, &quot;sort&quot;: 150, &quot;price&quot;: 99, &quot;name&quot;: &quot;users&quot;, &quot;title&quot;: &quot;\u9762\u677f\u591a\u7528\u6237\u7ba1\u7406&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u652f\u6301\u7ba1\u7406\u9762\u677f\u591a\u7528\u6237\uff0c\u53ef\u67e5\u770b\u5404\u4e2a\u7528\u6237\u65e5\u5fd7\uff0c\u4f46\u4e0d\u652f\u6301\u6743\u9650\u5206\u914d&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/users&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/users&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u521d\u59cb\u7248\u672c&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 106, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000036, &quot;type&quot;: 12, &quot;sort&quot;: 153, &quot;price&quot;: 99, &quot;name&quot;: &quot;bt_boce&quot;, &quot;title&quot;: &quot;\u5821\u5854\u7f51\u7ad9\u6d4b\u901f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u6d4b\u8bd5\u7f51\u7ad9\u5728\u5168\u7403\u5404\u5730\u7684\u6253\u5f00\u901f\u5ea6\u5e76\u53ca\u65f6\u544a\u8b66&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bt_boce&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bt_boce&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u4fee\u590d\u53d1\u9001\u90ae\u4ef6\u663e\u793a\u7684\u8017\u65f6\u4e0e\u6570\u636e\u5e93\u8bb0\u5f55\u5bf9\u4e0d\u4e0a\u7684\u95ee\u9898\n2. \u6253\u5f00\u5386\u53f2\u8bb0\u5f55\u9875\u9762\u9ed8\u8ba4\u5220\u9664\u4e00\u5468\u4e4b\u524d\u7684\u65e7\u8bb0\u5f55&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 155, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000057, &quot;type&quot;: 8, &quot;sort&quot;: 155, &quot;price&quot;: 19.8, &quot;name&quot;: &quot;nfs_tools&quot;, &quot;title&quot;: &quot;NFS\u6587\u4ef6\u5171\u4eab\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u57fa\u4e8eNFS\u7684\u6587\u4ef6\u5171\u4eab\uff0c\u5305\u542b\u521b\u5efa\u5171\u4eab\u548c\u6302\u8f7d\u8fdc\u7a0bNFS&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/nfs_tools&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/nfs_tools&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1\u3001\u4fee\u590d\u83b7\u53d6\u6302\u8f7d\u76ee\u5f55\u65f6\u670d\u52a1\u5668IP\u88ab\u6e05\u7a7a\u7684\u95ee\u9898\n2\u3001\u589e\u52a0NFS\u670d\u52a1\u5224\u65ad\u673a\u5236&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 143, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 0, &quot;type&quot;: 7, &quot;sort&quot;: 156, &quot;price&quot;: 0, &quot;name&quot;: &quot;msonedrive&quot;, &quot;title&quot;: &quot;\u5fae\u8f6fOneDrive&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5fae\u8f6f\u5bb6\u7684\u4e91\u7f51\u76d8\u670d\u52a1\u3002\u652f\u6301&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.microsoft.com/zh-cn/microsoft-365/onedrive/compare-onedrive-plans?activetab=tab:primaryr2&#x27; target=&#x27;_blank&#x27;&gt;\u5546\u4e1a\u7248&lt;/a&gt;\u548c&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.microsoft.com/zh-cn/microsoft-365/onedrive/compare-onedrive-plans?activetab=tab:primaryr1&#x27; target=&#x27;_blank&#x27;&gt;\u4e2a\u4eba/\u5bb6\u5ead\u7248&lt;/a&gt;\u3002&lt;a class=&#x27;btlink&#x27; href=&#x27;https://www.bt.cn/bbs/thread-54124-1-1.html&#x27; target=&#x27;_blank&#x27;&gt;\u56fe\u6587\u6559\u7a0b\u548c\u53cd\u9988&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/msonedrive&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/msonedrive&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;v1.4\u4ee5\u4e0b\u8bf7\u52a1\u5fc5\u66f4\u65b0!\u539fOneDrive\u5ba2\u6237\u7aef\u8ba4\u8bc1\u79d8\u94a5\u5df2\u8fc7\u671f\u3002\n1. \u4fee\u590d\u8ba1\u5212\u4efb\u52a1\u5907\u4efd\u5931\u8d25\u901a\u77e5\u548c\u4fdd\u7559\u672c\u5730\u5907\u4efd\u9009\u9879\u3002\n&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 112, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000039, &quot;type&quot;: 12, &quot;sort&quot;: 156, &quot;price&quot;: 99, &quot;name&quot;: &quot;database_mater&quot;, &quot;title&quot;: &quot;\u6570\u636e\u5e93\u8fd0\u7ef4\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u6570\u636e\u5e93\u8fd0\u7ef4\u7ba1\u7406\u5de5\u5177,\u4e00\u952e\u4f18\u5316\u6570\u636e\u5e93&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/database_mater&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/database_mater&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/database_mater.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u6570\u636e\u5e93\u8fd0\u7ef4\u7ba1\u7406\u5de5\u5177,\u4e00\u952e\u4f18\u5316\u6570\u636e\u5e93\n&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 113, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000040, &quot;type&quot;: 12, &quot;sort&quot;: 157, &quot;price&quot;: 99, &quot;name&quot;: &quot;site_optimization&quot;, &quot;title&quot;: &quot;\u5821\u5854\u7ad9\u70b9\u4f18\u5316&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u6309\u7167\u7ad9\u70b9\u7c7b\u578b\u4f18\u5316\u7ad9\u70b9\u4ee5\u83b7\u53d6\u66f4\u9ad8\u7684\u6027\u80fd\u3010\u76ee\u524d\u4ec5\u652f\u6301\u5fae\u64ce\u3011&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/site_optimization&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/site_optimization&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/site_optimization.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u6dfb\u52a0\u63d2\u4ef6\u5e93&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 130, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000053, &quot;type&quot;: 12, &quot;sort&quot;: 158, &quot;price&quot;: 99, &quot;name&quot;: &quot;resource_manager&quot;, &quot;title&quot;: &quot;\u5821\u5854\u8d44\u6e90\u76d1\u89c6\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u5bf9\u7f51\u7ad9\u6bcf\u79d2\u8bf7\u6c42\u6570\u548c\u8fdb\u7a0b\u5360\u7528\u7684\u8d44\u6e90\u8fdb\u884c\u76d1\u89c6&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/resource_manager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/resource_manager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/resource_manager.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;\u4fee\u590d\u7f51\u7edc\u680f\u6eda\u52a8\u6761\u8fc7\u591a\u7684\u95ee\u9898\uff1b\n\u4fee\u590d\u6570\u636e\u8fc7\u5927\u79fb\u4f4d\u7684\u95ee\u9898\uff1b\n\u4fee\u590d\u4f7f\u7528\u6700\u65b0\u6d4b\u8bd5\u7248\u9762\u677f\u63a5\u53e3\u6570\u636e\u65e0\u6cd5\u89e3\u5bc6\u7684\u95ee\u9898&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 165, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000062, &quot;type&quot;: 12, &quot;sort&quot;: 200, &quot;price&quot;: 99, &quot;name&quot;: &quot;ssl_verify&quot;, &quot;title&quot;: &quot;\u5821\u5854\u9650\u5236\u8bbf\u95ee\u578b\u8bc1\u4e66-Linux\u7248&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;\u53cc\u5411\u8ba4\u8bc1\u8bc1\u4e66\uff0c\u53ef\u7528\u4e8e\u9650\u5236\u6307\u5b9a\u4eba\u5458\u8bbf\u95ee\uff08\u91cd\u8981\u4e1a\u52a1\u63a8\u8350\uff09\uff0c\u63d0\u4f9b\u8f83\u9ad8\u5b89\u5168\u7684\u8bbf\u95ee\u73af\u5883\uff0c\u4e5f\u53ef\u7528\u4e8e\u5185\u7f51\u8bc1\u4e66\uff0c\u81ea\u7b7eSSL\u7b49\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-77701-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt; &gt; \u4f7f\u7528\u8bf4\u660e&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/ssl_verify&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/ssl_verify&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 63, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000008, &quot;type&quot;: 8, &quot;sort&quot;: 1311, &quot;price&quot;: 29.8, &quot;name&quot;: &quot;masterslave&quot;, &quot;title&quot;: &quot;MySQL\u4e3b\u4ece\u590d\u5236&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;&lt;span style=&#x27;color:red;&#x27;&gt;\u56e0\u8bbe\u8ba1\u7f3a\u9677\uff0c\u5df2\u4e0b\u67b6\uff0c\u8bf7\u4f7f\u7528\u3010MySQL\u4e3b\u4ece\u590d\u5236(\u91cd\u6784\u7248)\u3011&lt;/span&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;mysql&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/masterslave&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/masterslave&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/mysql_replicate.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;mysql&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 117, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000042, &quot;type&quot;: 12, &quot;sort&quot;: 1998, &quot;price&quot;: 99, &quot;name&quot;: &quot;enterprise_backup&quot;, &quot;title&quot;: &quot;\u4f01\u4e1a\u7ea7\u5907\u4efd&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;&lt;span style=&#x27;color:red;&#x27;&gt;\u56e0\u8bbe\u8ba1\u7f3a\u9677\uff0c\u5df2\u4e0b\u67b6\uff0c\u8bf7\u4f7f\u7528\u3010\u6570\u636e\u5e93\u9875\u9762 --&gt; \u4f01\u4e1a\u589e\u91cf\u5907\u4efd\u3011&lt;/span&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/enterprise_backup&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/enterprise_backup&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/enterprise_backup.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;update_msg&quot;: &quot;1. \u517c\u5bb9\u4e03\u725b\u4e91\u5b58\u50a8\u65b0\u4e0a\u4f20\u65b9\u5f0f\u3002&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 122, &quot;os&quot;: &quot;Linux&quot;, &quot;pid&quot;: 100000045, &quot;type&quot;: 12, &quot;sort&quot;: 1999, &quot;price&quot;: 99, &quot;name&quot;: &quot;tamper_drive&quot;, &quot;title&quot;: &quot;\u5821\u5854\u4f01\u4e1a\u7ea7\u9632\u7be1\u6539&quot;, &quot;panel_pro&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;ps&quot;: &quot;&lt;span style=&#x27;color:red;&#x27;&gt;\u56e0\u8bbe\u8ba1\u7f3a\u9677\uff0c\u5df2\u4e0b\u67b6\uff0c\u8bf7\u4f7f\u7528\u3010\u5821\u5854\u4f01\u4e1a\u7ea7\u9632\u7be1\u6539 - \u91cd\u6784\u7248\u3011&lt;/span&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;tamper_proof&quot;, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/tamper_drive&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/tamper_drive&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;preview_url&quot;: &quot;https://www.bt.cn/new/product/tamper_drive.html&quot;, &quot;keyword&quot;: &quot;&quot;, &quot;count&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;update_msg&quot;: &quot;1,\u66f4\u65b0centos 7  root\u53ca\u9762\u677f\u6587\u4ef6\u4fee\u6539&quot;&#125;], &quot;endtime&quot;: 999999999999&#125;, &#123;&quot;id&quot;: 600801398, &quot;pid&quot;: 600801398, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.9, &quot;price&quot;: 0, &quot;name&quot;: &quot;free_waf&quot;, &quot;title&quot;: &quot;Nginx\u514d\u8d39\u9632\u706b\u5899&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;Nginx\u514d\u8d39\u9632\u706b\u5899\uff0c\u548c\u73b0\u6709\u7684Nginx\u7684\u9632\u706b\u5899\u53ea\u80fd\u5b89\u88c5\u4e00\u4e2a&lt;a href=\&quot;https://www.bt.cn/bbs/thread-39649-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;7&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/free_waf&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/free_waf&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u660e\u56fd\u4e09\u5e74\u4e00\u573a\u96e8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-39649-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191107/065808e927f4c37052049b56561fe1cd.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 219938, &quot;score&quot;: &quot;4.9&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;7&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u514d\u8d39\u9632\u706b\u5899&quot;, &quot;download&quot;: &quot;other/20221128/2ecd8f913a0385f8cb271bd0368b2d66.zip&quot;, &quot;md5&quot;: &quot;3dea1fbc6d946a31955c8bafce3c7939&quot;, &quot;size&quot;: 264840&#125;]&#125;, &#123;&quot;id&quot;: 600801254, &quot;pid&quot;: 600801254, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.7, &quot;price&quot;: 0, &quot;name&quot;: &quot;mfsearch&quot;, &quot;title&quot;: &quot;\u6587\u4ef6\u641c\u7d22\u53ca\u6279\u91cf\u4fee\u6539&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u6587\u4ef6\u5185\u5bb9\u641c\u7d22\u53ca\u6279\u91cf\u4fee\u6539(\u53ef\u6574\u7ad9\u4fee\u6539\u53ca\u81ea\u52a8\u5907\u4efd)&lt;a href=\&quot;https://www.bt.cn/bbs/thread-33237-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1.2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mfsearch&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mfsearch&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7267\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-33237-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190615/e7372086b3e573497e612e1003bbe5b3.png&quot;, &quot;install_opt&quot;: 1, &quot;count&quot;: 120730, &quot;score&quot;: &quot;4.7&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1.2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1)\u4fee\u590dwin\u7cfb\u7edf\u5b89\u88c5Bug,2)\u4fee\u590d\u90e8\u5206\u7f16\u7801Bug&quot;, &quot;download&quot;: &quot;other/20200118/db7aaf79ccb5b4d71a40b90a53879953.zip&quot;, &quot;md5&quot;: &quot;f40125b5b8c3b0836e6459639a8c96f5&quot;, &quot;size&quot;: 225019&#125;]&#125;, &#123;&quot;id&quot;: 600801212, &quot;pid&quot;: 600801212, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.7, &quot;price&quot;: 0, &quot;name&quot;: &quot;hm_shell_san&quot;, &quot;title&quot;: &quot;\u6cb3\u9a6cwebshell\u67e5\u6740&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u6cb3\u9a6cwebshell\u67e5\u6740&lt;a href=\&quot;https://www.bt.cn/bbs/thread-39381-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/hm_shell_san&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/hm_shell_san&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;print(&amp;quot;&amp;quot;)&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-39381-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191101/ffb9085b6c30168308e289be27f11486.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 38324, &quot;score&quot;: &quot;4.7&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u6cb3\u9a6cwebshell\u67e5\u6740\u5de5\u5177&quot;, &quot;download&quot;: &quot;other/20220117/287fe84a9cc0b463ff0458079a0b813a.zip&quot;, &quot;md5&quot;: &quot;4d223a9b0caad5226212a526c516b873&quot;, &quot;size&quot;: 8796&#125;]&#125;, &#123;&quot;id&quot;: 600801267, &quot;pid&quot;: 600801267, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.1, &quot;price&quot;: 0, &quot;name&quot;: &quot;publicwelfare404&quot;, &quot;title&quot;: &quot;404\u516c\u76ca&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u54cd\u5e94\u5f0f404\u516c\u76ca\u4ee3\u7801\uff0c\u7f8e\u5316\u4f60\u7684404\u9875\u9762\u540c\u65f6\u53c2\u4e0e\u516c\u76ca\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-33666-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/publicwelfare404&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/publicwelfare404&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u57df\u540d\u516c\u76ca\u7f51&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-33666-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190624/c6bfbb27b99058e14e9e424a4b66104b.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 31701, &quot;score&quot;: &quot;4.1&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u5b8c\u5584\u9519\u8bef\u53cb\u597d\u63d0\u793a\uff1b&quot;, &quot;download&quot;: &quot;other/20191216/e3949a53c6832ad5f75cdbac65b34d54.zip&quot;, &quot;md5&quot;: &quot;51a301c6ce3f28bcbd5e89c586196a7e&quot;, &quot;size&quot;: 14470&#125;]&#125;, &#123;&quot;id&quot;: 600801443, &quot;pid&quot;: 600801443, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.7, &quot;price&quot;: 0, &quot;name&quot;: &quot;baidu_push&quot;, &quot;title&quot;: &quot;\u767e\u5ea6\u63a8\u9001&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u652f\u6301\u767e\u5ea6\u666e\u901a\u6536\u5f55\u8ddf\u5feb\u901f\u6536\u5f55\u4e24\u4e2a\u63a8\u9001\u63a5\u53e3\uff01&lt;a href=\&quot;https://www.bt.cn/bbs/thread-42287-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;v1&quot;, &quot;c_manager_version&quot;: &quot;8&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/baidu_push&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/baidu_push&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5929\u4e00\u6570\u636e&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-42287-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200106/d67109fd986b85ae6291515a7d6b0a61.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 30770, &quot;score&quot;: &quot;3.7&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;v1&quot;, &quot;version&quot;: &quot;8&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u767e\u5ea6\u63a5\u53e3\u8c03\u6574&quot;, &quot;download&quot;: &quot;other/20200602/ff57e2db9e3b3c1c8ef2141d52e1e942.zip&quot;, &quot;md5&quot;: &quot;ec9cbe636a1ee0bf9d07ab54719a3884&quot;, &quot;size&quot;: 11445&#125;]&#125;, &#123;&quot;id&quot;: 600801564, &quot;pid&quot;: 600801564, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 0, &quot;name&quot;: &quot;my_toolbox&quot;, &quot;title&quot;: &quot;\u6211\u7684\u5de5\u5177\u7bb1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u96c6\u5408\u7aef\u53e3\u626b\u63cf\u3001HOSTS\u7f16\u8f91\u3001\u7f51\u7ad9\u538b\u6d4b\u3001\u78c1\u76d8\u5de5\u5177\u7b49\u529f\u80fd&lt;a href=\&quot;https://www.bt.cn/bbs/thread-52772-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;9.2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/my_toolbox&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/my_toolbox&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5434\u5148\u68ee&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-52772-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200720/036bfca9c81b272d09c32984ba3b7aea.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 24754, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;9.2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1.\u7531\u4e8e\u5b58\u5728bug\uff0c\u4e0b\u67b6\u7f51\u7ad9\u5730\u56fe\u751f\u6210\u529f\u80fd 2.\u78c1\u76d8\u5de5\u5177\u5728\u4e0d\u652f\u6301\u7684\u7cfb\u7edf\u4e2d\u4e0d\u518d\u76f4\u63a5\u62a5\u9519&quot;, &quot;download&quot;: &quot;other/20220711/65d0a11f30c50a656a66f5c168c26367.zip&quot;, &quot;md5&quot;: &quot;eeae22fd9339f3b169a55a2f72a69a7a&quot;, &quot;size&quot;: 590852&#125;]&#125;, &#123;&quot;id&quot;: 600801213, &quot;pid&quot;: 600801213, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.3, &quot;price&quot;: 0, &quot;name&quot;: &quot;sshkey&quot;, &quot;title&quot;: &quot;SSH\u79d8\u94a5\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e3a\u89e3\u51b3ssh\u79d8\u94a5\u767b\u9646\u800c\u9ebb\u70e6\u914d\u7f6e&lt;a href=\&quot;https://www.bt.cn/bbs/thread-20943-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/sshkey&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/sshkey&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5e26\u5934\u5927\u54e5&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-20943-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190401/169f9ef390f68c134c4b8b003ec1a412.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 20209, &quot;score&quot;: &quot;4.3&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4e3a\u89e3\u51b3ssh\u79d8\u94a5\u767b\u9646\u800c\u9ebb\u70e6\u914d\u7f6e&quot;, &quot;download&quot;: &quot;other/20190419/080c4f8b6a00055c4510c6b305365deb.zip&quot;, &quot;md5&quot;: &quot;e6baacff85a33be40c32bb526b5fdb03&quot;, &quot;size&quot;: 8679&#125;]&#125;, &#123;&quot;id&quot;: 600801599, &quot;pid&quot;: 600801599, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.3, &quot;price&quot;: 0, &quot;name&quot;: &quot;su_baidu&quot;, &quot;title&quot;: &quot;\u767e\u5ea6\u4e91\u52a0\u901f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u514d\u8d39\u63d0\u4f9b\u9ad8\u9632CDN\u52a0\u901f/DDoS\u9632\u62a4/CC\u4e91\u9632\u62a4\u7684CDN\u670d\u52a1&lt;a href=\&quot;https://www.bt.cn/bbs/thread-56551-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;11&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/su_baidu&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/su_baidu&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u8da3\u57df\u7f51&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-56551-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200921/f2010eeb06bcb63f44a82af418c3f0a5.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 19480, &quot;score&quot;: &quot;3.3&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;11&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u517c\u5bb9\u65b0\u7248\u672c\u7684\u5b9d\u5854\uff0c\u5efa\u8bae\u5347\u7ea7\uff01&quot;, &quot;download&quot;: &quot;other/20220927/272e9cf7c1f08ef7f3a21f75f14d8421.zip&quot;, &quot;md5&quot;: &quot;a17f5d4841fb16c2d5bc677971cb9463&quot;, &quot;size&quot;: 56249&#125;]&#125;, &#123;&quot;id&quot;: 600801550, &quot;pid&quot;: 600801550, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2.6, &quot;price&quot;: 0, &quot;name&quot;: &quot;616seo&quot;, &quot;title&quot;: &quot;SEO\u6536\u5f55\u76d1\u63a7&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;SEO\u76d1\u63a7,\u6536\u5f55\u589e\u52a0\u5fae\u4fe1\u5b9e\u65f6\u63a8\u9001&lt;a href=\&quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=48297&amp;amp;highlight=seo\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;3&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/616seo&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/616seo&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u91cd\u5e86\u6838\u679c\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=48297&amp;amp;highlight=seo&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200619/8292b2d55445856f3531648825f13be5.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 17600, &quot;score&quot;: &quot;2.6&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;SEO\u76d1\u63a7,\u6536\u5f55\u589e\u52a0\u5fae\u4fe1\u5b9e\u65f6\u63a8\u9001&quot;, &quot;download&quot;: &quot;other/20200716/be21725262a40a995c5108dbb8215357.zip&quot;, &quot;md5&quot;: &quot;00a3e760ce7b1c5dc6235fee5cec8d29&quot;, &quot;size&quot;: 11362&#125;]&#125;, &#123;&quot;id&quot;: 600801320, &quot;pid&quot;: 600801320, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2.3, &quot;price&quot;: 0, &quot;name&quot;: &quot;portblast&quot;, &quot;title&quot;: &quot;\u7aef\u53e3\u626b\u63cf\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u7279\u70b9\uff1a\u626b\u63cf\u901f\u5ea6\u5feb\uff0c\u6548\u7387\u9ad8\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u591a\u7aef\u53e3\u626b\u63cf\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-35824-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/portblast&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/portblast&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;Youngxj&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-35824-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190808/17e9b99a0a3649deb219968a9172688a.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 17547, &quot;score&quot;: &quot;2.3&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u7279\u70b9\uff1a\u626b\u63cf\u901f\u5ea6\u5feb\uff0c\u6548\u7387\u9ad8\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u591a\u7aef\u53e3\u626b\u63cf\u3002&quot;, &quot;download&quot;: &quot;other/20190808/e1b844b74eabd979bed57ec4ae9be634.zip&quot;, &quot;md5&quot;: &quot;38431d55fa40ef9609eaa05bc735df89&quot;, &quot;size&quot;: 11736&#125;]&#125;, &#123;&quot;id&quot;: 600801740, &quot;pid&quot;: 600801740, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.7, &quot;price&quot;: 0, &quot;name&quot;: &quot;fastosdocker&quot;, &quot;title&quot;: &quot;FAST OS DOCKER&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;FASTOSDOCKER\u662fDocker\u7684\u56fe\u5f62\u5316\u7ba1\u7406\u5de5\u5177&lt;a href=\&quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=72848\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;3.3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/fastosdocker&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/fastosdocker&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u738b\u658c&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=72848&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210723/e77e884a991dfee022cc95e15c0d831e.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 16193, &quot;score&quot;: &quot;3.7&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3.3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u66f4\u65b0\u4e86docker\u5e94\u7528\u7ba1\u7406&quot;, &quot;download&quot;: &quot;other/20220712/0b80aba0549f3431fccf192d50cd32e0.zip&quot;, &quot;md5&quot;: &quot;0e1e0b0770fb1f225acaa42a9db3d18e&quot;, &quot;size&quot;: 285363&#125;]&#125;, &#123;&quot;id&quot;: 600801441, &quot;pid&quot;: 600801441, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.9, &quot;price&quot;: 0, &quot;name&quot;: &quot;openrasp&quot;, &quot;title&quot;: &quot;openrasp\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5f00\u6e90\u5e94\u7528\u8fd0\u884c\u65f6\u81ea\u6211\u4fdd\u62a4\u89e3\u51b3\u65b9\u6848 - OpenRASP&lt;a href=\&quot;https://www.bt.cn/bbs/thread-42487-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;6&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/openrasp&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/openrasp&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;print(&amp;quot;&amp;quot;)&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-42487-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200106/00e5f4d74d5e8acb10a5b4b279c0bad0.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 15492, &quot;score&quot;: &quot;4.9&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;6&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u5f00\u6e90\u5e94\u7528\u8fd0\u884c\u65f6\u81ea\u6211\u4fdd\u62a4\u89e3\u51b3\u65b9\u6848 - OpenRASP&quot;, &quot;download&quot;: &quot;other/20220312/9495302092e8aa962fb10690137267a7.zip&quot;, &quot;md5&quot;: &quot;5470167602a14479b66f5b38c298bc3a&quot;, &quot;size&quot;: 37677&#125;]&#125;, &#123;&quot;id&quot;: 600801232, &quot;pid&quot;: 600801232, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.4, &quot;price&quot;: 0, &quot;name&quot;: &quot;w7assistant&quot;, &quot;title&quot;: &quot;\u5fae\u64ce\u52a9\u624b&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u9488\u5bf9\u5fae\u64ce\u7cfb\u7edf\u63d0\u4f9b\u5b89\u5168\u52a0\u56fa\u3001\u91cd\u7f6e\u7ba1\u7406\u5458\u5bc6\u7801\u7b49\u5e38\u7528\u64cd\u4f5c\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-31865-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;3&quot;, &quot;c_manager_version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/w7assistant&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/w7assistant&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u8d85\u4eba&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-31865-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190529/b7e5b51c52bc2ead12b338197456916e.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 14932, &quot;score&quot;: &quot;4.4&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;7&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u5b9d\u5854\u65b0\u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1b\u4f18\u5316\u9009\u62e9\u7ad9\u70b9\u4e0b\u62c9\u6846\u6837\u5f0f\uff1b&quot;, &quot;download&quot;: &quot;other/20210618/3a42d45b9245fcf596ad5a14ba589e47.zip&quot;, &quot;md5&quot;: &quot;76b509764fef48efe9709460191b3724&quot;, &quot;size&quot;: 13765&#125;]&#125;, &#123;&quot;id&quot;: 600801340, &quot;pid&quot;: 600801340, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.5, &quot;price&quot;: 0, &quot;name&quot;: &quot;yichaxin&quot;, &quot;title&quot;: &quot;\u57df\u540d\u89e3\u6790\u751f\u6548\u67e5\u8be2&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5b9d\u5854\u63d2\u4ef6\u7248\uff1a\u57df\u540dA\u3001CNAME\u3001MX\u7b49\u89e3\u6790\u8bb0\u5f55\u751f\u6548\u60c5\u51b5\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-36652-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;V2&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/yichaxin&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/yichaxin&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6613\u67e5\u85aa&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-36652-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190829/36a4514dda9ebfde9b6fa1c7277c67e8.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 14867, &quot;score&quot;: &quot;4.5&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;V2&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u517c\u5bb9php8.1,\u89e3\u51b3\u67e5\u8be2\u9ed8\u8ba4\u503c\u83b7\u53d6\u51fa\u9519\u53ca\u67e5\u8be2\u62a5\u9519\u9000\u51fa\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20220207/8937401226d0da12327ff6702926c429.zip&quot;, &quot;md5&quot;: &quot;8299fa484191834a17503849ca6421d4&quot;, &quot;size&quot;: 10315&#125;]&#125;, &#123;&quot;id&quot;: 600801365, &quot;pid&quot;: 600801365, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2.7, &quot;price&quot;: 0, &quot;name&quot;: &quot;qrcode&quot;, &quot;title&quot;: &quot;\u4e8c\u7ef4\u7801\u751f\u6210\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;(\u5df2\u66f4\u65b0\u53ef\u6b63\u5e38\u4f7f\u7528)\u65e0\u9700\u6253\u5f00\u7b2c\u4e09\u65b9\u7f51\u7ad9,\u4e00\u952e\u751f\u6210\u4e8c\u7ef4\u7801&lt;a href=\&quot;https://www.bt.cn/bbs/thread-38178-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/qrcode&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/qrcode&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u963f\u4fee\u7f57&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-38178-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191005/2366e9d746b8e52bfb7f00498dd88d41.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 13693, &quot;score&quot;: &quot;2.7&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u517c\u5bb9\u65b0\u7248,bug\u4fee\u590d&quot;, &quot;download&quot;: &quot;other/20210217/2e64759776ce5c7ce9a54a301257923e.zip&quot;, &quot;md5&quot;: &quot;d266b6d95cb29115481a938aca008340&quot;, &quot;size&quot;: 100927&#125;]&#125;, &#123;&quot;id&quot;: 600801522, &quot;pid&quot;: 600801522, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 0, &quot;name&quot;: &quot;mfboot&quot;, &quot;title&quot;: &quot;\u5f00\u542f\u542f\u52a8\u7ba1\u7406&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5f00\u673a\u542f\u52a8\u7ba1\u7406&lt;a href=\&quot;https://www.bt.cn/bbs/thread-48660-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mfboot&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mfboot&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7267\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-48660-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200427/c053de465ca87c22cb8b4518d5a0425c.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 8653, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;version_msg&quot;: &quot;\u81ea\u6d4bcentos7\u901a\u8fc7&quot;, &quot;download&quot;: &quot;other/20200428/407a57e75869a68ef9add68c419e9f6d.zip&quot;, &quot;md5&quot;: &quot;66f56713059d2041740b8f6a57fa1651&quot;, &quot;size&quot;: 224708&#125;]&#125;, &#123;&quot;id&quot;: 600801709, &quot;pid&quot;: 600801709, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.4, &quot;price&quot;: 0, &quot;name&quot;: &quot;free_promotion&quot;, &quot;title&quot;: &quot;\u514d\u8d39\u7f51\u7ad9\u5916\u94fe\u63a8\u5e7f&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u63d0\u4f9b\u514d\u8d39\u63d0\u4f9b\u7f51\u7ad9\u6536\u5f55,\u7f51\u7ad9\u5206\u7c7b\u76ee\u5f55\u63d0\u4ea4,&lt;a href=\&quot;\u514d\u8d39\u7f51\u7ad9\u5916\u94fe\u63a8\u5e7f\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/free_promotion&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/free_promotion&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u65e0\u4f9d&quot;, &quot;home&quot;: &quot;\u514d\u8d39\u7f51\u7ad9\u5916\u94fe\u63a8\u5e7f&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210430/b6c3c33c90b8cbc80b6142a0231dac98.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 7949, &quot;score&quot;: &quot;3.4&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u63d0\u4ea4\u529f\u80fd\u5f02\u5e38&quot;, &quot;download&quot;: &quot;other/20210510/7dbd1b41850ed50ad7614247286a798a.zip&quot;, &quot;md5&quot;: &quot;323eab1ac72a5d58c0ac545efe65264d&quot;, &quot;size&quot;: 11411&#125;]&#125;, &#123;&quot;id&quot;: 600801221, &quot;pid&quot;: 600801221, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.1, &quot;price&quot;: 4.8, &quot;name&quot;: &quot;disk&quot;, &quot;title&quot;: &quot;\u78c1\u76d8\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e00\u952e\u6302\u8f7d\u78c1\u76d8\uff0c\u8fc1\u79fb\u6570\u636e&lt;a href=\&quot;https://www.bt.cn/bbs/thread-21204-1-2.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;3&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/disk&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/disk&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u62cd\u62cd\u718axf&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-21204-1-2.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190420/0237badbc85457149fc8772e11c39070.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 6790, &quot;score&quot;: &quot;4.1&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u6dfb\u52a0\u8fc1\u79fb\u63d0\u793a&quot;, &quot;download&quot;: &quot;other/20210203/37594792252ad39eec078d389b8bba46.zip&quot;, &quot;md5&quot;: &quot;e170986fc36d2e13200155af013583fd&quot;, &quot;size&quot;: 2521058&#125;]&#125;, &#123;&quot;id&quot;: 600801452, &quot;pid&quot;: 600801452, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.5, &quot;price&quot;: 0, &quot;name&quot;: &quot;fecmall&quot;, &quot;title&quot;: &quot;fecmall&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u57fa\u4e8ephp Yii2\u6846\u67b6\u4e4b\u4e0a\u5f00\u53d1\u7684\u4e00\u6b3e\u4f18\u79c0\u7684\u5f00\u6e90\u7535\u5546\u7cfb\u7edf&lt;a href=\&quot;http://www.fecmall.com/topic\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;5.2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/fecmall&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/fecmall&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;Terry&quot;, &quot;home&quot;: &quot;http://www.fecmall.com/topic&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200120/b388d6ebc2fe5dc1b568663db38b2d49.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 6374, &quot;score&quot;: &quot;4.5&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;5.2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;fecmall.domain_appserver\uff0c\u9519\u8bef\u7ea0\u6b63&quot;, &quot;download&quot;: &quot;other/20210406/34ca15837a26fec5cdc767d8bfdf9d48.zip&quot;, &quot;md5&quot;: &quot;6156e3db345aba5c63628aad0d156131&quot;, &quot;size&quot;: 7069&#125;]&#125;, &#123;&quot;id&quot;: 600801744, &quot;pid&quot;: 600801744, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 0, &quot;name&quot;: &quot;lzfhdwz&quot;, &quot;title&quot;: &quot;\u9632\u7ea2\u77ed\u7f51\u5740\u751f\u6210\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u652f\u63014xl.cn/t.cn\u57df\u540d\u9632\u5fae\u4fe1QQ\u62e6\u622a\u7684\u77ed\u7f51\u5740\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-73359-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/lzfhdwz&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/lzfhdwz&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u94f6\u6148\u79d1\u6280&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-73359-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210802/f5e8fe928a70e6c2ef6aca56c7bf5689.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 6098, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;4&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u66f4\u65b0\u77ed\u7f51\u5740\u57df\u540d\uff0c\u79fb\u9664\u5931\u6548\u57df\u540d&quot;, &quot;download&quot;: &quot;other/20220715/ae23c145e956fa0c8be5ab127fd42d02.zip&quot;, &quot;md5&quot;: &quot;6c01c3c69a8bbb19c690ef83470de985&quot;, &quot;size&quot;: 9855&#125;]&#125;, &#123;&quot;id&quot;: 600801358, &quot;pid&quot;: 600801358, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.3, &quot;price&quot;: 6.66, &quot;name&quot;: &quot;baidu_netdisk&quot;, &quot;title&quot;: &quot;\u767e\u5ea6\u7f51\u76d8&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5907\u4efd\u4f60\u7684\u6570\u636e\u5230\u767e\u5ea6\u7f51\u76d8\uff0c\u6ce8\uff1a\u670d\u52a1\u5668\u5e26\u5bbd\u9700\u4e0d\u5c0f\u4e8e2M&lt;a href=\&quot;https://www.bt.cn/bbs/thread-37544-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;3&quot;, &quot;c_manager_version&quot;: &quot;9.4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/baidu_netdisk&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/baidu_netdisk&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6280\u672f\u96e8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-37544-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190921/1b28d8321def8455207b6482d78d6534.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 4181, &quot;score&quot;: &quot;4.3&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;9.4&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u4efb\u52a1\u6267\u884c\u903b\u8f91\u4ee3\u7801&quot;, &quot;download&quot;: &quot;other/20221219/6c04d7a481bc8baecd68afdf9c3e7727.zip&quot;, &quot;md5&quot;: &quot;95bc08f9167bc53a429e726f099bdb48&quot;, &quot;size&quot;: 46331&#125;]&#125;, &#123;&quot;id&quot;: 600801805, &quot;pid&quot;: 600801805, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 0, &quot;name&quot;: &quot;srs_cloud&quot;, &quot;title&quot;: &quot;SRS\u97f3\u89c6\u9891\u670d\u52a1\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;SRS\u662f\u5f00\u6e90\u7684\u97f3\u89c6\u9891\u670d\u52a1\u5668\uff0c\u4e3b\u8981\u5e94\u7528\u5728\u76f4\u64ad\u548cWebRTC\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-90890-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;4&quot;, &quot;c_manager_version&quot;: &quot;6.3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/srs_cloud&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/srs_cloud&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;Winlin&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-90890-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20220424/dff76f8daeb6dec5c8294f7702e7f079.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 4104, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;4&quot;, &quot;version&quot;: &quot;6.3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u89e3\u51b3PM2\u548cnodejs\u7ba1\u7406\u5668\u51b2\u7a81\u7684\u95ee\u9898\u3002&quot;, &quot;download&quot;: &quot;other/20221229/b047997ede5cbe7368a9bdcad42a4c73.zip&quot;, &quot;md5&quot;: &quot;40768a8e90a3715ea7ecff4315c4a652&quot;, &quot;size&quot;: 3061317&#125;]&#125;, &#123;&quot;id&quot;: 600801427, &quot;pid&quot;: 600801427, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4, &quot;price&quot;: 0, &quot;name&quot;: &quot;chafenba&quot;, &quot;title&quot;: &quot;\u7a7a\u95f4\u57df\u540d\u72b6\u6001\u67e5\u8be2&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u67e5\u8be2\u7ad9\u70b9\u4e0b\u5404\u57df\u540d\u662f\u5426\u89e3\u6790\u5230\u5bf9\u5e94\u7a7a\u95f4\u7b49&lt;a href=\&quot;https://www.bt.cn/bbs/thread-41655-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;V2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/chafenba&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/chafenba&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6613\u67e5\u85aa&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-41655-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191217/e651e53602b61836185802ba6ea261ab.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 3669, &quot;score&quot;: &quot;4.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;V2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u67e5\u8be2\u7ad9\u70b9\u4e0b\u7ed1\u5b9a\u57df\u540d\u662f\u5426\u89e3\u6790\u5230\u5bf9\u5e94\u7a7a\u95f4\u7b49&quot;, &quot;download&quot;: &quot;other/20191225/732c8ad0c9299ae430f389384afd526a.zip&quot;, &quot;md5&quot;: &quot;7cbdb7057790fd1cf403e5d35746f758&quot;, &quot;size&quot;: 9535&#125;]&#125;, &#123;&quot;id&quot;: 600801313, &quot;pid&quot;: 600801313, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1.8, &quot;price&quot;: 1, &quot;name&quot;: &quot;y6w_speedtest&quot;, &quot;title&quot;: &quot;\u7f51\u901f\u6d4b\u8bd5&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u56fd\u5185\u670d\u52a1\u5668\u95f4\u6b47\u6027\u597d\u4f7f\uff0c\u95ee\u9898\u5f85\u4fee\u590d&lt;a href=\&quot;https://www.bt.cn/bbs/thread-35477-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/y6w_speedtest&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/y6w_speedtest&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u732a\u5728\u5929\u4e0a\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-35477-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190802/cd56d03b758b930a85e127ae24a467ca.png&quot;, &quot;install_opt&quot;: 1, &quot;count&quot;: 3371, &quot;score&quot;: &quot;1.8&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;5&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u6d4b\u901f\uff0c\u66f4\u65b0\u6d4b\u901f\u63d2\u4ef6&quot;, &quot;download&quot;: &quot;other/20221020/585a38a0ba98aefdd282d387c499a97d.zip&quot;, &quot;md5&quot;: &quot;ce7354b3ad8d6a393f7ef4530825b8dd&quot;, &quot;size&quot;: 137746&#125;]&#125;, &#123;&quot;id&quot;: 600801360, &quot;pid&quot;: 600801360, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 0, &quot;name&quot;: &quot;swn&quot;, &quot;title&quot;: &quot;\u5b89\u5168\u793e\u533a\u62a5\u8b66\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5b9a\u671f\u722c\u53d6\u963f\u91cc\u4e91\u5b89\u5168\u793e\u533a\u7684\u4fe1\u606f,\u901a\u8fc7STMP\u90ae\u4ef6\u53d1\u9001\u9884\u8b66\u4fe1\u606f&lt;a href=\&quot;https://www.bt.cn/bbs/thread-37738-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/swn&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/swn&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;IW3C&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-37738-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190925/797ff13c9157f656c08a27a1674cbb86.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 3341, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u517c\u5bb9\u5b9d\u58547.2\u65b0\u67b6\u6784\uff0c\u4f18\u5316\u517c\u5bb9IW3C \u4e09\u4ee3\u901a\u8baf\u6807\u51c6&quot;, &quot;download&quot;: &quot;other/20200411/3f9cbb683ee599582582939276f20afc.zip&quot;, &quot;md5&quot;: &quot;7e4ee606ec65839397f4e2714f122ddd&quot;, &quot;size&quot;: 77244&#125;]&#125;, &#123;&quot;id&quot;: 600801698, &quot;pid&quot;: 600801698, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 0, &quot;name&quot;: &quot;wxapijnoocom&quot;, &quot;title&quot;: &quot;\u5fae\u4fe1\u57df\u540d\u88ab\u5c01\u68c0\u6d4b&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u68c0\u6d4b\u670d\u52a1\u5668\u4e0a\u6240\u6709\u57df\u540d\u5728\u5fae\u4fe1\u73af\u5883\u4e0b\u662f\u5426\u5b58\u5728\u88ab\u5c01\u6740\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-66765-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/wxapijnoocom&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/wxapijnoocom&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u666f\u8bfa\u79d1\u6280&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-66765-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210408/83c3fa5c1626ec7c649cb6ddf73c2aa0.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 3203, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u66f4\u65b0\u63a5\u53e3&quot;, &quot;download&quot;: &quot;other/20220130/1ce6234d1d83e361582471eb82a3428b.zip&quot;, &quot;md5&quot;: &quot;7b3ba60b3d656982195d1c7934ad58da&quot;, &quot;size&quot;: 72305&#125;]&#125;, &#123;&quot;id&quot;: 600801372, &quot;pid&quot;: 600801372, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2.5, &quot;price&quot;: 9.8, &quot;name&quot;: &quot;sitemap&quot;, &quot;title&quot;: &quot;sitemap\u751f\u6210\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5b9a\u65f6\u6279\u91cf\u751f\u6210\u7f51\u7ad9\u5730\u56fe+\u63a8\u9001\u767e\u5ea6\u3001\u795e\u9a6c\u3010v5.0\u52a0\u5165\u5206\u9875\u6293\u53d6\u3011&lt;a href=\&quot;https://www.bt.cn/bbs/thread-39780-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;5&quot;, &quot;c_manager_version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/sitemap&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/sitemap&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u963f\u4fee\u7f57&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-39780-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191010/12ae100cb6da09c45ebb64c383f17daa.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 2986, &quot;score&quot;: &quot;2.5&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u7ad9\u70b9\u8fc7\u591a\u65f6\u7684\u6837\u5f0f\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20220829/d9fd4535df60f3c57be6c8f59d9154fa.zip&quot;, &quot;md5&quot;: &quot;2aa87ddcfbe2feb37a45c0224760024f&quot;, &quot;size&quot;: 3166867&#125;]&#125;, &#123;&quot;id&quot;: 600801436, &quot;pid&quot;: 600801436, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;urlpush&quot;, &quot;title&quot;: &quot;\u7f51\u5740\u63a8\u9001&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u81ea\u52a8\u6293\u53d6\u7f51\u5740\u4e0e\u5730\u56fe\u5e76\u81ea\u52a8\u63a8\u9001\uff0c\u652f\u6301\u767e\u5ea6/\u5934\u6761/\u5fc5\u5e94/\u795e\u9a6c&lt;a href=\&quot;https://www.bt.cn/bbs/thread-47424-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;5&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/urlpush&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/urlpush&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u963f\u4fee\u7f57&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-47424-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210722/717d299cc12586b1ceddc0f26591fdb2.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 2538, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;5&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u52a0\u5165 api\u5e93\u7ba1\u7406\uff0c\u5934\u6761\u63a8\u9001&quot;, &quot;download&quot;: &quot;other/20221214/352c561827615351f9ae5cbc7d0a419a.zip&quot;, &quot;md5&quot;: &quot;6acdf96f97a357cf01cb228fec5ca546&quot;, &quot;size&quot;: 2275747&#125;]&#125;, &#123;&quot;id&quot;: 600801459, &quot;pid&quot;: 600801459, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.4, &quot;price&quot;: 5, &quot;name&quot;: &quot;disktool&quot;, &quot;title&quot;: &quot;\u78c1\u76d8\u5b89\u5168\u6302\u8f7d&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e00\u952e\u78c1\u76d8\u6302\u8f7d\uff0c\u66f4\u4e13\u4e1a\u66f4\u5b89\u5168\uff0c\u652f\u6301\u5f00\u673a\u6302\u8f7d&lt;a href=\&quot;https://www.bt.cn/bbs/thread-43836-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/disktool&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/disktool&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u963f\u4fee\u7f57&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-43836-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200210/50e8a3b77777038f72a3b1467ddca264.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 2382, &quot;score&quot;: &quot;3.4&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u4e00\u5904\u9519\u8bef\u63d0\u9192&quot;, &quot;download&quot;: &quot;other/20220804/6afb894077aab37b99b1e6ed9cf5b0da.zip&quot;, &quot;md5&quot;: &quot;8a26e105600a1af074f2d22af6fd84ae&quot;, &quot;size&quot;: 17254&#125;]&#125;, &#123;&quot;id&quot;: 600801433, &quot;pid&quot;: 600801433, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.3, &quot;price&quot;: 0.68, &quot;name&quot;: &quot;btgitea&quot;, &quot;title&quot;: &quot;GiteaForBt&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e00\u6b3e\u975e\u5e38\u8f7b\u91cf\u5e76\u4e14\u529f\u80fd\u5f3a\u5927\u7684GIT\u793e\u533a\u8f6f\u4ef6\u3002&lt;a href=\&quot;https://blog.liushuai.cq.cn/article/detail/2\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;0&quot;, &quot;c_manager_version&quot;: &quot;7.3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btgitea&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btgitea&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u507b\u5138\u5c0f\u5352&quot;, &quot;home&quot;: &quot;https://blog.liushuai.cq.cn/article/detail/2&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20201013/58a8eb4d0c850534ed00e5a2123d53d7.png&quot;, &quot;install_opt&quot;: 1, &quot;count&quot;: 1688, &quot;score&quot;: &quot;4.3&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;0&quot;, &quot;version&quot;: &quot;7.3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1\u3001\u7d27\u6025\u4fee\u590dwindows\u7248\u65e0\u6cd5\u6b63\u5e38\u505c\u6b62\u670d\u52a1bug  2\u3001windows\u7248\u672c\u83b7\u53d6gitea\u72b6\u6001\u6709\u5ef6\u8fdf\uff0c\u5c06windows\u7248\u672c\u6682\u65f6\u53bb\u6389\u91cd\u542f\u6309\u94ae\uff0c\u53ea\u4fdd\u7559\u542f\u52a8\u548c\u505c\u6b62\u6309\u94ae&quot;, &quot;download&quot;: &quot;other/20221205/1be6cbcec43a2d0b5a88ee08ae780cbd.zip&quot;, &quot;md5&quot;: &quot;7a7038cef878b5e1bf480083304b6218&quot;, &quot;size&quot;: 1213055&#125;]&#125;, &#123;&quot;id&quot;: 600801492, &quot;pid&quot;: 600801492, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 0, &quot;name&quot;: &quot;panel_jsbridge_installer&quot;, &quot;title&quot;: &quot;\u9762\u677fJSBridge\u5b89\u88c5\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u672c\u5b89\u88c5\u5668\u63d2\u4ef6\u4e3a\u67d0\u4e9b\u63d2\u4ef6\u7684\u524d\u7f6e\u63d2\u4ef6&lt;a href=\&quot;\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/panel_jsbridge_installer&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/panel_jsbridge_installer&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;xieyi1393&quot;, &quot;home&quot;: &quot;&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200326/6f437e4f013b783cac17842f2b79478b.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 1553, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u5bf9Py3\u652f\u6301(Tab\u7f29\u8fdb\u4fee\u590d)&quot;, &quot;download&quot;: &quot;other/20200330/a38f5b9771ce321be9703a98e2e53909.zip&quot;, &quot;md5&quot;: &quot;eabed272d4af6547f1d059527ad51771&quot;, &quot;size&quot;: 9896&#125;]&#125;, &#123;&quot;id&quot;: 600801658, &quot;pid&quot;: 600801658, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 0, &quot;name&quot;: &quot;west_fss&quot;, &quot;title&quot;: &quot;\u5b9d\u5854west_fss&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u6302\u8f7d\u897f\u90e8\u6570\u7801fss,\u652f\u6301davfs2\u6302\u8f7d\u7684\u5bf9\u8c61\u5b58\u50a8\u53ef\u4ee5\u4f7f\u7528&lt;a href=\&quot;#\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/west_fss&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/west_fss&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u65e0\u4f9d&quot;, &quot;home&quot;: &quot;#&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210203/553219c79074bc827f5011b1faa2189b.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 1500, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u4e86\u754c\u9762\uff0c\u8c03\u6574\u4e86\u53cb\u597d\u62a5\u9519\uff0c\u4fee\u590d\u4e86\u5378\u8f7d\u4e0d\u4f1a\u5220\u9664\u81ea\u52a8\u6302\u8f7d&quot;, &quot;download&quot;: &quot;other/20210203/c286e7562a567b6b5ea5f695926ee9d7.zip&quot;, &quot;md5&quot;: &quot;06124d90d35d0ba6da22292e36625315&quot;, &quot;size&quot;: 10062&#125;]&#125;, &#123;&quot;id&quot;: 600801730, &quot;pid&quot;: 600801730, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 0, &quot;name&quot;: &quot;whois&quot;, &quot;title&quot;: &quot;\u57df\u540dwhois\u67e5\u8be2&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u67e5\u8be2\u57df\u540dwhois\u4fe1\u606f&lt;a href=\&quot;https://www.bt.cn/bbs/thread-70133-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0.1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/whois&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/whois&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7231\u540d\u7f51&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-70133-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210609/bcca34b16e61b603e04b3c64039b1f5e.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 1457, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0.1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u67e5\u8be2\u57df\u540dwhois\u4fe1\u606f1.0.1\u7248\u672c&quot;, &quot;download&quot;: &quot;other/20210609/e2699581be38d4042832dff24e8f6c70.zip&quot;, &quot;md5&quot;: &quot;5a934dcb8af895a85ecc904e4431cbdb&quot;, &quot;size&quot;: 27038&#125;]&#125;, &#123;&quot;id&quot;: 600801438, &quot;pid&quot;: 600801438, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;git_repository_deploy&quot;, &quot;title&quot;: &quot;Git\u8fdc\u7a0b\u4ed3\u5e93\u90e8\u7f72\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u81ea\u52a8\u90e8\u7f72\u8fdc\u7a0bGit\u4ed3\u5e93\uff08github\u7b49\uff09\u4ee3\u7801\u81f3\u670d\u52a1\u5668\u7f51\u7ad9\u76ee\u5f55&lt;a href=\&quot;https://www.bt.cn/bbs/thread-42294-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;7&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/git_repository_deploy&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/git_repository_deploy&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6280\u672f\u96e8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-42294-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191230/0596328af186e6272f09889cfcca5843.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 1297, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;7&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u63d2\u4ef6\u5b89\u88c5\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20210804/9ec9483f760f50883d8ba54ff2ef6703.zip&quot;, &quot;md5&quot;: &quot;9760c137f4872bc610732285f1a712fe&quot;, &quot;size&quot;: 43507&#125;]&#125;, &#123;&quot;id&quot;: 600801369, &quot;pid&quot;: 600801369, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4, &quot;price&quot;: 6.66, &quot;name&quot;: &quot;svn_deploy&quot;, &quot;title&quot;: &quot;SVN\u9879\u76ee\u90e8\u7f72\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u81ea\u52a8\u90e8\u7f72\u672c\u5730SVN\u4ed3\u5e93\u4ee3\u7801\u81f3\u670d\u52a1\u5668\u7f51\u7ad9\u76ee\u5f55&lt;a href=\&quot;https://www.bt.cn/bbs/thread-38166-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/svn_deploy&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/svn_deploy&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6280\u672f\u96e8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-38166-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191008/2c48dbb3f2e21fc2eb19d68e0826d162.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 1042, &quot;score&quot;: &quot;4.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u63d2\u4ef6\u517c\u5bb9\u6027&quot;, &quot;download&quot;: &quot;other/20220618/dbbda3e88634024ee13800d047003431.zip&quot;, &quot;md5&quot;: &quot;4bb56532e8c7445be5b19fbbf3fc1cf1&quot;, &quot;size&quot;: 28892&#125;]&#125;, &#123;&quot;id&quot;: 600801381, &quot;pid&quot;: 600801381, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 6.66, &quot;name&quot;: &quot;svn&quot;, &quot;title&quot;: &quot;SVN\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u672c\u5730SVN\u4ed3\u5e93\u3001\u8d26\u53f7\u3001\u6743\u9650\u3001\u94a9\u5b50\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u81ea\u5b9a\u4e49\u94a9\u5b50&lt;a href=\&quot;https://www.bt.cn/bbs/thread-38535-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/svn&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/svn&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6280\u672f\u96e8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-38535-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191014/a5a91d5b7503ac6fc40b587c18f884cb.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 983, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u63d2\u4ef6\u517c\u5bb9\u6027&quot;, &quot;download&quot;: &quot;other/20220618/d5841964fde703d6e37831feba8a86ea.zip&quot;, &quot;md5&quot;: &quot;0c8d87029250ee827f040b6673cc022d&quot;, &quot;size&quot;: 29755&#125;]&#125;, &#123;&quot;id&quot;: 600801384, &quot;pid&quot;: 600801384, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 6, &quot;name&quot;: &quot;mflogview&quot;, &quot;title&quot;: &quot;\u5927\u65e5\u5fd7\u6587\u4ef6\u67e5\u770b\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5927\u65e5\u5fd7\u6587\u4ef6\u67e5\u770b\u5668\uff0c\u542bnginx\u65e5\u5fd7\u5206\u6790&lt;a href=\&quot;https://www.bt.cn/bbs/thread-38777-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1.4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mflogview&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mflogview&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7267\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-38777-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191019/57f47dfa77ad9b958fdb0682c44dd2dd.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 848, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1.4&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u6539\u9ed8\u8ba4\u641c\u7d22\u8def\u5f84&quot;, &quot;download&quot;: &quot;other/20200110/91e414426a580e4ef83fd3087c5b7a49.zip&quot;, &quot;md5&quot;: &quot;8cd2522773a6120271705b3cc596a8a6&quot;, &quot;size&quot;: 226952&#125;]&#125;, &#123;&quot;id&quot;: 600801404, &quot;pid&quot;: 600801404, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.9, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;qnoss&quot;, &quot;title&quot;: &quot;\u4e03\u725b\u4e91\u5b58\u50a8\u5bf9\u8c61\u591a\u70b9\u6302\u8f7d\u5de5\u5177\u517c\u5bb9\u963f\u91cc\u4e91\u3001\u4eac\u4e1c\u4e91&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5b58\u50a8\u5bf9\u8c61\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u517c\u5bb9\u4e03\u725b\u3001\u963f\u91cc\u3001\u4eac\u4e1c\u3001\u817e\u8baf\u3001\u767e\u5ea6\u4e91\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-40067-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;10&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/qnoss&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/qnoss&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-40067-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191115/a6f31569f41a4a331d0a7d778b3972ab.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 815, &quot;score&quot;: &quot;4.9&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;10&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4e03\u725b\u4e91\u7b49\u5b58\u50a8\u5bf9\u8c61\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u76ee\u524d\u517c\u5bb9\u963f\u91cc\u4e91\u3001\u767e\u5ea6\u4e91\u3001\u4eac\u4e1c\u4e91\u3001\u817e\u8baf\u4e91\uff0c\u5b58\u50a8\u5bf9\u8c61\u5f53\u4f5c\u672c\u5730\u76d8\u4f7f\u7528&quot;, &quot;download&quot;: &quot;other/20200216/47bd29243bc2ae1dd0c20cc74ff9cd30.zip&quot;, &quot;md5&quot;: &quot;276efa84c20aff9ae1d98099be6a257d&quot;, &quot;size&quot;: 8202&#125;]&#125;, &#123;&quot;id&quot;: 600801302, &quot;pid&quot;: 600801302, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2, &quot;price&quot;: 4.99, &quot;name&quot;: &quot;seos&quot;, &quot;title&quot;: &quot;SEO\u5de5\u5177\u7bb1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;robots/\u767e\u5ea6\u63a8\u9001\u7b49\u3010\u6682\u505c\u66f4\u65b0\uff0c\u65e7\u529f\u80fd\u6b63\u5e38\u53ef\u7528\u3011&lt;a href=\&quot;https://www.bt.cn/bbs/thread-34772-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/seos&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/seos&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;Licoy&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-34772-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200315/d92c6611e3678db4bf3f85e0cc9d37cf.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 759, &quot;score&quot;: &quot;2.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u79fb\u9664\u8fc7\u671f\u63a5\u53e3\u529f\u80fd\uff0c\u5b8c\u5584\u7a33\u5b9a\u6027\uff01&quot;, &quot;download&quot;: &quot;other/20200329/012f3686f87767d37b50853868530769.zip&quot;, &quot;md5&quot;: &quot;ff03833a448b38d4e06a1639d7e0cc75&quot;, &quot;size&quot;: 11788&#125;]&#125;, &#123;&quot;id&quot;: 600801527, &quot;pid&quot;: 600801527, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4.9, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;aloss&quot;, &quot;title&quot;: &quot;\u963f\u91cc\u4e91\u5bf9\u8c61\u5b58\u50a8OSS\u81ea\u52a8\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u963f\u91cc\u4e91\u5bf9\u8c61\u5b58\u50a8OSS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f00\u673a\u81ea\u52a8\u6302\u8f7d&lt;a href=\&quot;https://www.bt.cn/bbs/thread-48829-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/aloss&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/aloss&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-48829-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200502/e23e5d4fef12606e3ce935f00eaf3dbe.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 738, &quot;score&quot;: &quot;4.9&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u963f\u91cc\u4e91\u5bf9\u8c61\u5b58\u50a8OSS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f00\u673a\u81ea\u52a8\u6302\u8f7d&quot;, &quot;download&quot;: &quot;other/20200502/dc8e4cf2c3228022843f77264a91feaa.zip&quot;, &quot;md5&quot;: &quot;9281cb434229e53f48b58549f41e76b2&quot;, &quot;size&quot;: 29813&#125;]&#125;, &#123;&quot;id&quot;: 600801321, &quot;pid&quot;: 600801321, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 1, &quot;name&quot;: &quot;y6w_createwebs&quot;, &quot;title&quot;: &quot;\u6279\u91cf\u5efa\u7ad9&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u518d\u65e0\u66f4\u65b0\uff0c\u5982\u9700\u8981QQ:1057916173&lt;a href=\&quot;https://www.bt.cn/bbs/thread-35844-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/y6w_createwebs&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/y6w_createwebs&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u732a\u5728\u5929\u4e0a\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-35844-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190809/3f8f90fde77213080143e63b668d8c77.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 654, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u521d\u59cb\u7248\u672c&quot;, &quot;download&quot;: &quot;other/20190809/896a75a8f551c4ef5a135ae84ee767ff.zip&quot;, &quot;md5&quot;: &quot;fe4a78f5822e0229803366e714ee8333&quot;, &quot;size&quot;: 9792&#125;]&#125;, &#123;&quot;id&quot;: 600801489, &quot;pid&quot;: 600801489, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 8.88, &quot;name&quot;: &quot;cloud_db_diff&quot;, &quot;title&quot;: &quot;\u6570\u636e\u7ed3\u6784\u6bd4\u5bf9\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4f7f\u7528\u6b64\u5de5\u5177\u53ef\u5c06Mysql\u6570\u636e\u5e93AB\u4e24\u8868\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4e00\u952e\u540c\u6b65&lt;a href=\&quot;https://www.bt.cn/bbs/thread-46480-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/cloud_db_diff&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/cloud_db_diff&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u725b\u90fd\u6559\u9192\u4e86&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-46480-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200325/4f20682fd226e85ea0e7e8618a4697f6.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 629, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u81ea\u52a8\u62c9\u53d6\u6570\u636e\u5e93\u5217\u8868\u65f6\uff0c\u8d85\u8fc720\u4e2a\u4e0d\u663e\u793a\u7684\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20201020/af76a7f1d09a993a4256637aafc0b693.zip&quot;, &quot;md5&quot;: &quot;b500f622be896913908a41f1a1eba032&quot;, &quot;size&quot;: 10215&#125;]&#125;, &#123;&quot;id&quot;: 600801363, &quot;pid&quot;: 600801363, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;git_deploy&quot;, &quot;title&quot;: &quot;Git\u9879\u76ee\u90e8\u7f72\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u81ea\u52a8\u90e8\u7f72\u672c\u5730Git\u4ed3\u5e93\u6307\u5b9a\u5206\u652f\u7684\u4ee3\u7801\u81f3\u670d\u52a1\u5668\u7f51\u7ad9\u76ee\u5f55&lt;a href=\&quot;https://www.bt.cn/bbs/thread-37793-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/git_deploy&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/git_deploy&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6280\u672f\u96e8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-37793-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190925/987b50979ba8c2781c62d1ddbe773cef.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 592, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u516c\u94a5\u6307\u7eb9\u83b7\u53d6\u903b\u8f91&quot;, &quot;download&quot;: &quot;other/20220827/7e5318e4896d4eef34778b0cc3cb68c7.zip&quot;, &quot;md5&quot;: &quot;b89323cb860e89dc66e639b65897eb0f&quot;, &quot;size&quot;: 38989&#125;]&#125;, &#123;&quot;id&quot;: 600801803, &quot;pid&quot;: 600801803, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.8, &quot;name&quot;: &quot;lotusweblog&quot;, &quot;title&quot;: &quot;\u718a\u732b\u7f51\u7ad9\u65e5\u5fd7\u5206\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u7f51\u7ad9\u65e5\u5fd7\u5206\u6790\u63d2\u4ef6/\u7f51\u7ad9\u76d1\u63a7\u62a5\u8868\uff0c\u652f\u6301Apache/Nginx&lt;a href=\&quot;https://www.bt.cn/bbs/thread-90125-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/lotusweblog&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/lotusweblog&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u65e7\u96e8\u697c&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-90125-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20220416/3201116e1083d36b2d433d1530913731.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 565, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u63d0\u5347\u540c\u6b65\u7684\u53ca\u65f6\u6027\uff0c\u4f18\u5316\u6027\u80fd&quot;, &quot;download&quot;: &quot;other/20221030/46f0227535a939920a18dd8a94eb937b.zip&quot;, &quot;md5&quot;: &quot;4ea898d0be1edeabe2eff6870c470109&quot;, &quot;size&quot;: 8534523&#125;]&#125;, &#123;&quot;id&quot;: 600801463, &quot;pid&quot;: 600801463, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;bt_vsftpd&quot;, &quot;title&quot;: &quot;vsftpd \u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u57fa\u4e8evsftpd\u5f00\u53d1\u7684\u63d2\u4ef6,\u652f\u6301\u591a\u7528\u6237\u3001\u9650\u901f\u3001\u9650\u5bb9\u91cf\u7b49\u64cd\u4f5c&lt;a href=\&quot;https://www.bt.cn/bbs/thread-44233-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bt_vsftpd&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bt_vsftpd&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;IW3C&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-44233-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200218/ba006d057f070951a7b1cbe75e50ec65.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 531, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;5&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u652f\u6301TLS/SSL \u548c \u6a21\u677f\u53c2\u6570&quot;, &quot;download&quot;: &quot;other/20220805/47e4042a0cee15656d150d4138df432f.zip&quot;, &quot;md5&quot;: &quot;7b8322a644247e044bf8e6b348be66d8&quot;, &quot;size&quot;: 35052&#125;]&#125;, &#123;&quot;id&quot;: 600801383, &quot;pid&quot;: 600801383, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 10, &quot;name&quot;: &quot;mfwatermark&quot;, &quot;title&quot;: &quot;\u56fe\u7247\u6279\u91cf\u6c34\u5370&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u56fe\u7247\u6279\u91cf\u6c34\u5370\u53ca\u5404\u79cd\u538b\u7f29&lt;a href=\&quot;https://www.bt.cn/bbs/thread-38586-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;4.3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mfwatermark&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mfwatermark&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7267\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-38586-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191015/3739007955dbad246abd1bc51a3ce9cc.png&quot;, &quot;install_opt&quot;: 1, &quot;count&quot;: 478, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;4.3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1)\u4f18\u5316png,gif\u538b\u7f29 2)\u589e\u52a0\u5904\u7406\u65e5\u5fd7&quot;, &quot;download&quot;: &quot;other/20210716/2a9dd5936148dfbb1b290c249f4a5a1b.zip&quot;, &quot;md5&quot;: &quot;b11ebef41844f378a2001aee49a0b18b&quot;, &quot;size&quot;: 15712692&#125;]&#125;, &#123;&quot;id&quot;: 600801685, &quot;pid&quot;: 600801685, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.7, &quot;price&quot;: 13, &quot;name&quot;: &quot;tuboshufenxi&quot;, &quot;title&quot;: &quot;\u571f\u62e8\u9f20\u7f51\u7ad9\u65e5\u8bb0\u5206\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u7ad9\u70b9\u65e5\u8bb0,\u9632\u91c7\u96c6,\u6574\u7ad9URL\u81ea\u52a8,\u641c\u72d7\u63a8\u9001,\u5206\u6790\u63a8\u9001\u4e8c\u5408\u4e00&lt;a href=\&quot;https://www.bt.cn/bbs/thread-65678-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;9&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/tuboshufenxi&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/tuboshufenxi&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u571f\u62e8\u9f20&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-65678-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210317/a1e7c8ef4e94babe22b6972f7453ed34.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 444, &quot;score&quot;: &quot;3.7&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;9&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u66f4\u65b0\u7248\u672c\u4fee\u590d\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20220825/5250867dacb0f4c833029b7e882dc229.zip&quot;, &quot;md5&quot;: &quot;4207167ad91590a004872d84cb8916ae&quot;, &quot;size&quot;: 102913&#125;]&#125;, &#123;&quot;id&quot;: 600801453, &quot;pid&quot;: 600801453, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 5, &quot;name&quot;: &quot;aliddns&quot;, &quot;title&quot;: &quot;\u963f\u91cc\u57df\u540d\u52a8\u6001\u89e3\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u963f\u91cc\u4e91\u57df\u540d\u52a8\u6001\u89e3\u6790\uff0c\u9002\u5408\u6709\u516c\u7f51\u4f46IP\u4e0d\u56fa\u5b9a\u7684\u7528\u6237&lt;a href=\&quot;https://www.bt.cn/bbs/thread-43367-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;3&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/aliddns&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/aliddns&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u609f\u7a7a\u6570\u7801&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-43367-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200129/2588534a9f75e23127bd0e882ae1690f.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 406, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;3&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u63d2\u4ef6\u4e0d\u80fd\u6253\u5f00\u7684\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20200806/0359a00c4c43f07b5868b7929268e5be.zip&quot;, &quot;md5&quot;: &quot;821cda42bdc9083f1a5c1ea7ecfbd554&quot;, &quot;size&quot;: 929252&#125;]&#125;, &#123;&quot;id&quot;: 600801352, &quot;pid&quot;: 600801352, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 0.5, &quot;name&quot;: &quot;xjTools&quot;, &quot;title&quot;: &quot;\u5c0f\u6770\u5de5\u5177\u7bb1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u96c6\u6210\u7aef\u53e3\u626b\u63cf\u3001\u7f51\u7ad9\u72b6\u6001\u7801\u68c0\u6d4b\u2026\u2026\u2026\u2026\u4e00\u4e2a\u5c0f\u5de5\u5177&lt;a href=\&quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=37427\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/xjTools&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/xjTools&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;Youngxj&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=37427&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190918/85b94a174957d8c2d078f6e58fef02b8.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 361, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u96c6\u6210\u7aef\u53e3\u626b\u63cf\u3001\u7f51\u7ad9\u72b6\u6001\u7801\u68c0\u6d4b\u3001\u7f51\u7ad9\u6e90\u7801\u83b7\u53d6\u3001\u7f51\u7ad9\u6536\u5f55\u6570\u3001\u5173\u952e\u8bcd\u6392\u884c\u3001\u6536\u5f55\u67e5\u8be2\u7684\u4e00\u4e2a\u5c0f\u5de5\u5177&quot;, &quot;download&quot;: &quot;other/20190918/8d9d72042fbb7a3d64c2b81379620b94.zip&quot;, &quot;md5&quot;: &quot;4dda39539dc9074ec3266d411afb0fc3&quot;, &quot;size&quot;: 658581&#125;]&#125;, &#123;&quot;id&quot;: 600801496, &quot;pid&quot;: 600801496, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3.4, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;autoshield&quot;, &quot;title&quot;: &quot;cloudflare\u81ea\u52a8\u5f00\u76fe&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u670d\u52a1\u5668\u906d\u53d7\u653b\u51fb\u65f6\uff0c\u81ea\u52a8\u5f00\u76fe\uff0c\u9632\u6b62\u670d\u52a1\u4e2d\u65ad&lt;a href=\&quot;https://www.bt.cn/bbs/thread-46825-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0.1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/autoshield&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/autoshield&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;xcsoft&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-46825-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200330/a558018b235958e380eb27385d296672.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 345, &quot;score&quot;: &quot;3.4&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0.1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d \u8d1f\u8f7d\u83b7\u53d6 \u5b58\u5728\u7684\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20220128/6e3cd5c3f95aeeb21298d71d7e2ea93c.zip&quot;, &quot;md5&quot;: &quot;027bd50bb3f338acfae4f394bcfb2372&quot;, &quot;size&quot;: 12666&#125;]&#125;, &#123;&quot;id&quot;: 600801729, &quot;pid&quot;: 600801729, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 5, &quot;name&quot;: &quot;autoclear&quot;, &quot;title&quot;: &quot;\u5b9a\u65f6\u6587\u4ef6\u6e05\u7406&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5b9a\u65f6\u81ea\u52a8\u6e05\u7406\u6587\u4ef6,\u5c0f\u78c1\u76d8\u7684\u798f\u97f3,\u652f\u6301\u591a\u5c42\u6587\u4ef6\u5939\u3001\u81ea\u5b9a\u683c\u5f0f&lt;a href=\&quot;https://www.bt.cn/bbs/thread-70189-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;9&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/autoclear&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/autoclear&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u963f\u4fee\u7f57&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-70189-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210603/4cc55911f65dab0d146352dabbb59053.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 337, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;9&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u52a0\u5165\u6e05\u7406\u7edf\u8ba1\uff0c\u4f18\u5316\u8bb0\u5f55\u663e\u793a\uff0c\u6574\u4f53\u754c\u9762\u4f18\u5316&quot;, &quot;download&quot;: &quot;other/20220713/5e7e289130519d1e17fc670c70f2dc5a.zip&quot;, &quot;md5&quot;: &quot;74954c0d6d5913d5269d16fd9a0a4410&quot;, &quot;size&quot;: 1614601&#125;]&#125;, &#123;&quot;id&quot;: 600801528, &quot;pid&quot;: 600801528, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;txoss&quot;, &quot;title&quot;: &quot;\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8COS\u81ea\u52a8\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8COS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f00\u673a\u81ea\u52a8\u6302\u8f7d&lt;a href=\&quot;https://www.bt.cn/bbs/thread-48857-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/txoss&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/txoss&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-48857-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200502/b5f71be748935aedb7d2211ead1da3d6.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 310, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8COS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f00\u673a\u81ea\u52a8\u6302\u8f7d&quot;, &quot;download&quot;: &quot;other/20200502/2ce65a5eef3ca67e9be8192c3d1aabd5.zip&quot;, &quot;md5&quot;: &quot;2dc80b7844fedd62c8c75727faf11dff&quot;, &quot;size&quot;: 11645&#125;]&#125;, &#123;&quot;id&quot;: 600801845, &quot;pid&quot;: 600801845, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 0, &quot;name&quot;: &quot;dnscom&quot;, &quot;title&quot;: &quot;DNS.COM\u667a\u80fd\u89e3\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5e1d\u6069\u601dDNS.COM\u667a\u80fd\u57df\u540d\u89e3\u6790\u670d\u52a1\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-104447-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0.4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/dnscom&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/dnscom&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;DNS.COM\u57df\u540d\u89e3\u6790\u4e13\u5bb6&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-104447-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20221128/e1ce6cfd922c54301f4e360c1743a02e.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 307, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0.4&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;DNS.COM\u667a\u80fd\u89e3\u67901.0.4&quot;, &quot;download&quot;: &quot;other/20221207/1331c9a9c1079b0c44bb85e619b48dac.zip&quot;, &quot;md5&quot;: &quot;861d83e84c3963dd1e24fb6ed2d68fb1&quot;, &quot;size&quot;: 29325&#125;]&#125;, &#123;&quot;id&quot;: 600801659, &quot;pid&quot;: 600801659, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;myhaproxy&quot;, &quot;title&quot;: &quot;HA\u8d1f\u8f7d\u5747\u8861&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e13\u4e1a\u8d1f\u8f7d\u5747\u8861\u5668,\u7b80\u5355\u597d\u7528\uff0c\u4e00\u952e\u8bbe\u7f6e&lt;a href=\&quot;https://www.bt.cn/bbs/thread-63801-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/myhaproxy&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/myhaproxy&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u62cd\u62cd\u718axf&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-63801-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210204/aff2c76fff3dd2fa0e1e3ba6368639d6.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 306, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;version_msg&quot;: &quot;\u521d\u59cb\u7248\u672c&quot;, &quot;download&quot;: &quot;other/20210207/18d4bb660f3f2bf480859e1c867508b6.zip&quot;, &quot;md5&quot;: &quot;ec7d45c12c746513470d0764162d56ec&quot;, &quot;size&quot;: 35673&#125;]&#125;, &#123;&quot;id&quot;: 600801625, &quot;pid&quot;: 600801625, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;btrenwubeifen&quot;, &quot;title&quot;: &quot;\u8ba1\u5212\u4efb\u52a1\u5907\u4efd\u63d2\u4ef6&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5b9d\u5854\u8ba1\u5212\u4efb\u52a1\u5907\u4efd\u8fd8\u539f\u63d2\u4ef6&lt;a href=\&quot;https://www.bt.cn/bbs/thread-61341-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;0&quot;, &quot;c_manager_version&quot;: &quot;2.3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btrenwubeifen&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btrenwubeifen&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u507b\u5138\u5c0f\u5352&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-61341-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20201122/c7678bdcfde93b622befb7c089465ae3.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 304, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;0&quot;, &quot;version&quot;: &quot;2.3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1\u3001\u7d27\u6025\u4fee\u590d\u5168\u91cf\u5907\u4efd\u65f6\u5927\u90e8\u5206\u8ba1\u5212\u4efb\u52a1\u4e22\u5931bug&quot;, &quot;download&quot;: &quot;other/20221204/711b5148c38077b0d5a4cf306e4cf0ee.zip&quot;, &quot;md5&quot;: &quot;5f6516c57c3b120d70b863a2028ee9f9&quot;, &quot;size&quot;: 561508&#125;]&#125;, &#123;&quot;id&quot;: 600801735, &quot;pid&quot;: 600801735, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2.3, &quot;price&quot;: 16, &quot;name&quot;: &quot;imgtools&quot;, &quot;title&quot;: &quot;\u56fe\u7247\u6279\u91cf\u5904\u7406\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u53ef\u7075\u6d3b\u5904\u7406\u5404\u9879\u590d\u6742\u7684\u56fe\u7247\u538b\u7f29\u4efb\u52a1\uff0c\u4efb\u52a1\u5f0f\u7ba1\u7406&lt;a href=\&quot;https://www.bt.cn/bbs/thread-71558-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/imgtools&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/imgtools&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u98de\u68a6\u4fe1\u606f&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-71558-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210702/c451a7ba3c2431f4a699614585bbafe2.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 284, &quot;score&quot;: &quot;2.3&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u51fa\u9519\u540e\u505c\u6b62\u7684BUG;\u964d\u4f4ephp\u7248\u672c\u8981\u6c42\uff0c\u76ee\u524d\u53ea\u9700\u8981php7.1\u4ee5\u4e0a\u7248\u672c\u5373\u53ef&quot;, &quot;download&quot;: &quot;other/20211003/5e0293a26e2b014c38c14f95ece57ed4.zip&quot;, &quot;md5&quot;: &quot;18cea91bec7a008c980cf62255759b66&quot;, &quot;size&quot;: 1399092&#125;]&#125;, &#123;&quot;id&quot;: 600801406, &quot;pid&quot;: 600801406, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 5, &quot;name&quot;: &quot;nfsgo&quot;, &quot;title&quot;: &quot;\u4e91\u6587\u4ef6\u5b58\u50a8\uff08NFS/CFS/NAS\uff09\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u628a\u4e91\u6587\u4ef6\u670d\u52a1\uff08NFS/CFS/NAS\uff09\uff0c\u6302\u8f7d\u5230\u670d\u52a1\u5668\u4f7f\u7528&lt;a href=\&quot;https://www.bt.cn/bbs/thread-40186-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/nfsgo&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/nfsgo&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-40186-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191118/331aa690f39edc9f15f64045294e853e.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 262, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u628a\u4e91\u6587\u4ef6\u670d\u52a1\uff08NFS/CFS/NAS\uff09\uff0c\u6302\u8f7d\u5230\u670d\u52a1\u5668\u4f7f\u7528,\u589e\u52a0\u4e86\u517c\u5bb9\u6027&quot;, &quot;download&quot;: &quot;other/20200502/6227d4af43e9d63eebafae555673e212.zip&quot;, &quot;md5&quot;: &quot;8c9c192011bbf5ad090cf0957e3668bb&quot;, &quot;size&quot;: 28546&#125;]&#125;, &#123;&quot;id&quot;: 600801478, &quot;pid&quot;: 600801478, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 19.9, &quot;name&quot;: &quot;a_site_click&quot;, &quot;title&quot;: &quot;\u7ad9\u957f\u7ba1\u7406\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e00\u952e\u7ba1\u7406\u7f51\u7ad9\uff0c\u591a\u6e90seo\u4f18\u5316\uff0c&lt;a href=\&quot;https://www.bt.cn/bbs/thread-46919-1-2.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/a_site_click&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/a_site_click&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u62cd\u62cd\u718axf&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-46919-1-2.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200315/eea7e9c23a22857b685ac7a0302a542e.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 239, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;6&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;version_msg&quot;: &quot;\u5220\u9664\u4e2a\u4eba\u6570\u636e&quot;, &quot;download&quot;: &quot;other/20210518/71b5d5e53eee1b28e0afdc7a67df5716.zip&quot;, &quot;md5&quot;: &quot;141696fa664a39069a27e0e7a34105aa&quot;, &quot;size&quot;: 125394&#125;]&#125;, &#123;&quot;id&quot;: 600801510, &quot;pid&quot;: 600801510, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 2.5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;tencent_cdn&quot;, &quot;title&quot;: &quot;\u817e\u8baf\u4e91CDN\u81ea\u52a8\u4e0a\u7ebf&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u81ea\u52a8\u4e0b\u7ebf\u8d85\u6d41IP/\u94fe\u63a5\uff0c\u51cf\u5c11CDN\u88abCC/DDoS\u653b\u51fb\u7684\u635f\u5931&lt;a href=\&quot;https://www.bt.cn/bbs/thread-47625-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;7.0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/tencent_cdn&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/tencent_cdn&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5434\u5148\u68ee&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-47625-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20211124/d64410f1d4f44a0696056c099d504eb3.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 233, &quot;score&quot;: &quot;2.5&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;7.0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u91cd\u5199\u63d2\u4ef6\uff0c\u65b0\u589e\u66f4\u591a\u529f\u80fd\u3002\u5982\u4e0d\u9700\u8981\u65b0\u7248\u529f\u80fd\u53ef\u4e0d\u7528\u5347\u7ea7\uff01&quot;, &quot;download&quot;: &quot;other/20211124/ad3b3e82a5e60592cad4fd78589b8230.zip&quot;, &quot;md5&quot;: &quot;cc1292f33cc012071d1ad14a71d535b4&quot;, &quot;size&quot;: 1596863&#125;]&#125;, &#123;&quot;id&quot;: 600801846, &quot;pid&quot;: 600801846, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 0, &quot;name&quot;: &quot;bocecom&quot;, &quot;title&quot;: &quot;BOCE.COM\u68c0\u6d4b\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u7f51\u7ad9\u6d4b\u901f,PING\u68c0\u6d4b,DNS\u67e5\u8be2,\u52ab\u6301/\u88ab\u5899/\u6c61\u67d3\u68c0\u6d4b&lt;a href=\&quot;https://www.bt.cn/bbs/thread-105418-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0.5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bocecom&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bocecom&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;DNS.COM\u57df\u540d\u89e3\u6790\u4e13\u5bb6&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-105418-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20221213/9c566b4cf1bc1c56f637d288747abda9.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 218, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0.5&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;BOCE.COM\u7f51\u7ad9\u6d4b\u901f&quot;, &quot;download&quot;: &quot;other/20221214/04113db7e6256826405bb3044a7dc722.zip&quot;, &quot;md5&quot;: &quot;af231e8b6971666b7ad8ba6cbefdeeee&quot;, &quot;size&quot;: 14356&#125;]&#125;, &#123;&quot;id&quot;: 600801218, &quot;pid&quot;: 600801218, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 4.88, &quot;name&quot;: &quot;diskquota&quot;, &quot;title&quot;: &quot;\u7ad9\u70b9\u78c1\u76d8\u914d\u989d\u7ba1\u7406&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u53ef\u5bf9\u7ad9\u70b9\u76ee\u5f55\u6216\u81ea\u5b9a\u4e49\u76ee\u5f55\u505a\u4f7f\u7528\u91cf\u914d\u989d,\u5f53\u524d\u4ec5\u652f\u6301XFS\u6587\u4ef6\u7cfb\u7edf&lt;a href=\&quot;https://www.bt.cn/bbs/thread-30486-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/diskquota&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/diskquota&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5c71\u6c34\u6709\u76f8\u9022&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-30486-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20190416/ac0d8aa620c481be425ea5a008e33480.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 210, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u53ef\u5bf9\u7ad9\u70b9\u76ee\u5f55\u6216\u81ea\u5b9a\u4e49\u76ee\u5f55\u505a\u4f7f\u7528\u91cf\u914d\u989d,\u5f53\u524d\u4ec5\u652f\u6301XFS\u6587\u4ef6\u7cfb\u7edf&quot;, &quot;download&quot;: &quot;other/20190416/08003afd16e878db94dce73586b57af1.zip&quot;, &quot;md5&quot;: &quot;96a6d7d41f3cf4770cdfd47e6e3ed400&quot;, &quot;size&quot;: 13988&#125;]&#125;, &#123;&quot;id&quot;: 600801830, &quot;pid&quot;: 600801830, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 6.5, &quot;name&quot;: &quot;netdisk&quot;, &quot;title&quot;: &quot;\u767e\u5ea6\u7f51\u76d8\u81ea\u52a8\u5907\u4efd&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e00\u952e\u81ea\u52a8\u6279\u91cf\u5907\u4efd\u81f3\u767e\u5ea6\u7f51\u76d8\uff0c\u652f\u6301\u7f51\u7ad9/\u6570\u636e\u5e93/\u6587\u4ef6\u5939&lt;a href=\&quot;https://www.bt.cn/bbs/thread-100873-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/netdisk&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/netdisk&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u65e7\u96e8\u697c&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-100873-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20220924/93d91990832155ea602a56e7e6e765c2.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 202, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u517c\u5bb9\u4fee\u6539\u7aef\u53e3\u540e\u7684\u6570\u636e\u5e93\u5907\u4efd&quot;, &quot;download&quot;: &quot;other/20221102/68e5e24ca61b37a60718f65b80b698ee.zip&quot;, &quot;md5&quot;: &quot;ab7ae5299d27810c4153e41beb383e01&quot;, &quot;size&quot;: 1439472&#125;]&#125;, &#123;&quot;id&quot;: 600801742, &quot;pid&quot;: 600801742, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;php_encoder&quot;, &quot;title&quot;: &quot;PHP Encoder&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;php\u4ee3\u7801\u52a0\u5bc6\u4fdd\u62a4,\u9632\u6b62\u6728\u9a6c\u6ce8\u5165&lt;a href=\&quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=73149\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;3.9&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/php_encoder&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/php_encoder&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u9ea6\u4e50&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=73149&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210807/49ee4171a20de74dfd69a7728b20b12d.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 190, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3.9&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;-\u66f4\u65b0\uff1a\u52a0\u5f3a\u52a0\u5bc6\u7b97\u6cd5\uff0c\u754c\u9762\u63d0\u793a\u4f18\u5316\uff1b&quot;, &quot;download&quot;: &quot;other/20220524/4832482fee093afd2001d9490637f893.zip&quot;, &quot;md5&quot;: &quot;e0b2c2ec0b6ece346a428d93898f49b1&quot;, &quot;size&quot;: 5774093&#125;]&#125;, &#123;&quot;id&quot;: 600801389, &quot;pid&quot;: 600801389, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;mfftpdev&quot;, &quot;title&quot;: &quot;SSH/FTP\u78c1\u76d8\u6302\u8f7d&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;SSH/FTP\u78c1\u76d8\u6302\u8f7d(\u6587\u4ef6\u5939\u53ef\u4ee5\u589e\u91cf\u5907\u4efd)&lt;a href=\&quot;https://www.bt.cn/bbs/thread-39350-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mfftpdev&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mfftpdev&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7267\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-39350-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191031/3044f0e8898553b27a3f8e3f39b49829.png&quot;, &quot;install_opt&quot;: 1, &quot;count&quot;: 179, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u517c\u5bb9python27+, centos\u7b49&quot;, &quot;download&quot;: &quot;other/20191031/688860809fb686e0a7bf1885dba2aaf3.zip&quot;, &quot;md5&quot;: &quot;0a0ec426e75ae567ac4428bf0a0b7312&quot;, &quot;size&quot;: 18255&#125;]&#125;, &#123;&quot;id&quot;: 600801401, &quot;pid&quot;: 600801401, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 5, &quot;name&quot;: &quot;bdbos&quot;, &quot;title&quot;: &quot;\u767e\u5ea6\u4e91\u5b58\u50a8\u5bf9\u8c61BOS\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u628a\u767e\u5ea6\u4e91BOS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f53\u4f5c\u672c\u5730\u76d8\u4f7f\u7528\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-39953-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/bdbos&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/bdbos&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-39953-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191113/087f6342714ae5d298e8a75b87a9cd1f.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 153, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u628a\u767e\u5ea6\u4e91BOS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u53ef\u6302\u8f7d\u591a\u4e2aBOS\uff0c\u5f00\u673a\u81ea\u52a8\u542f\u52a8\uff0c\u52a0\u5f3a\u4e86py3\u7684\u517c\u5bb9\u6027&quot;, &quot;download&quot;: &quot;other/20200503/0253851756619ad8fc141f0786c57e05.zip&quot;, &quot;md5&quot;: &quot;93e4f51e15e2d8e84b21fb54bf5e3851&quot;, &quot;size&quot;: 28884&#125;]&#125;, &#123;&quot;id&quot;: 600801562, &quot;pid&quot;: 600801562, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;site_cluster&quot;, &quot;title&quot;: &quot;\u7ad9\u7fa4\u7ba1\u7406\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4e00\u952e\u7ba1\u7406\u591a\u4e2a\u7f51\u7ad9seo\u4f18\u5316&lt;a href=\&quot;https://www.bt.cn/bbs/thread-52655-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/site_cluster&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/site_cluster&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u62cd\u62cd\u718axf&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-52655-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200717/41ab963f3179ebc75d81b158c4ca4433.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 145, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;version_msg&quot;: &quot;\u53bb\u6389\u6743\u9650\u8ba4\u8bc1&quot;, &quot;download&quot;: &quot;other/20221111/9ba82f56193b9e28e70c2557064c4e22.zip&quot;, &quot;md5&quot;: &quot;ba0d6a6141f891a772f68a203573bc06&quot;, &quot;size&quot;: 35982&#125;]&#125;, &#123;&quot;id&quot;: 600801583, &quot;pid&quot;: 600801583, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 19.99, &quot;name&quot;: &quot;cloud189&quot;, &quot;title&quot;: &quot;\u5929\u7ffc\u7f51\u76d8\u52a9\u624b&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u57fa\u4e8e\u5929\u7ffc\u7f51\u76d8\u7684API\u6784\u5efa\u7684\u81ea\u52a8\u5316\u7ba1\u7406\uff0c\u89e3\u6790\u63d2\u4ef6&lt;a href=\&quot;https://www.bt.cn/bbs/thread-53988-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2.i&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/cloud189&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/cloud189&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;IW3C&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-53988-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200820/97f49f5b4f2f21a03b01ec2eb0599ec5.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 138, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2.i&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u8c03\u6574\u90e8\u5206\u63a5\u53e3\u7528\u4ee5\u9002\u914d\u6700\u65b0\u5929\u7ffc\u4e91\uff08\u89c1update.txt\uff09&quot;, &quot;download&quot;: &quot;other/20220307/15a323c8e0eba0f71abcfe708b22c771.zip&quot;, &quot;md5&quot;: &quot;1480adb34f8757b20725143bc9349787&quot;, &quot;size&quot;: 78941&#125;]&#125;, &#123;&quot;id&quot;: 600801495, &quot;pid&quot;: 600801495, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;cloudflare&quot;, &quot;title&quot;: &quot;Cloudflare\u89e3\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u8fde\u63a5cloudflare\u6dfb\u52a0\u3001\u5220\u9664\u3001\u67e5\u770bDNS\u89e3\u6790&lt;a href=\&quot;https://www.bt.cn/bbs/thread-46727-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;1.2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/cloudflare&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/cloudflare&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;cxbsoft&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-46727-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200329/40d01d19b0c2bff6acd5b2c02931d39a.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 134, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;1.2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;Cloudflare\u89e3\u6790\u3001\u8d1f\u8f7d\u9632\u706b\u5899\u3001CC\\DDOS\u76fe\u3001\u8fdc\u7a0b\u7ba1\u7406,\u4f18\u5316\u4e86UI\uff0c\u4fee\u590d\u4e86Bug&quot;, &quot;download&quot;: &quot;other/20200723/9bfd902bdfe0250bfb98c97899a010d4.zip&quot;, &quot;md5&quot;: &quot;05a08a1ff898f2883430b433c0bfae83&quot;, &quot;size&quot;: 23747&#125;]&#125;, &#123;&quot;id&quot;: 600801622, &quot;pid&quot;: 600801622, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;mysqlfind&quot;, &quot;title&quot;: &quot;MySQL\u5185\u5bb9\u5168\u5c40\u641c\u7d22&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5728mysql\u6570\u636e\u5e93\u4e2d\u5168\u5c40\u67e5\u627e\u5185\u5bb9\uff0c\u5305\u542b\u3001\u7b49\u4e8e\u3001\u524d\u7f003\u79cd\u6a21\u5f0f&lt;a href=\&quot;https://www.bt.cn/bbs/thread-58675-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mysqlfind&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mysqlfind&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u82af\u6e56&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-58675-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20201103/4958efe935147ae5933c8da5a84f63ab.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 130, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;mysql\u6570\u636e\u5e93\u4e2d\u5168\u5c40\u67e5\u627e\u5185\u5bb9\uff0c\u5305\u542b\u3001\u7b49\u4e8e\u3001\u524d\u7f003\u79cd\u6a21\u5f0f\uff0c\u6027\u80fd\u4f18\u5316&quot;, &quot;download&quot;: &quot;other/20210316/939e1779f3f3a7036adea85194827893.zip&quot;, &quot;md5&quot;: &quot;d13b5236d78bd7a24c28f3482e71359e&quot;, &quot;size&quot;: 850591&#125;]&#125;, &#123;&quot;id&quot;: 600801491, &quot;pid&quot;: 600801491, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 5, &quot;name&quot;: &quot;tpl_hyaline&quot;, &quot;title&quot;: &quot;\u5b9d\u5854\u540e\u53f0\u76ae\u80a4-\u900f\u660e&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u540e\u53f0\u76ae\u80a4&lt;a href=\&quot;https://www.bt.cn/bbs/thread-46527-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;5&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/tpl_hyaline&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/tpl_hyaline&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u732a\u5728\u5929\u4e0a\u98de&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-46527-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200325/06a8123060338addc6804259a2de83cf.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 104, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;5&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u6dfb\u52a0\u4e8c\u6b21\u5143\u770b\u677f\u5a18&quot;, &quot;download&quot;: &quot;other/20210505/4b8a834922d9ac915bdd86bde6818a0f.zip&quot;, &quot;md5&quot;: &quot;762ed7ae0252bb081b835007a7618c14&quot;, &quot;size&quot;: 3655247&#125;]&#125;, &#123;&quot;id&quot;: 600801508, &quot;pid&quot;: 600801508, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;dnspod_ddns&quot;, &quot;title&quot;: &quot;\u817e\u8baf\u4e91\u57df\u540d\u52a8\u6001\u89e3\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u817e\u8baf\u4e91\u57df\u540d\u52a8\u6001\u89e3\u6790\uff0c\u8bf7\u5148\u70b9\u51fb\u95ee\u53f7\u770b\u8bf4\u660e&lt;a href=\&quot;https://www.bt.cn/bbs/thread-47587-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;7.6&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/dnspod_ddns&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/dnspod_ddns&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5434\u5148\u68ee&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-47587-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200410/891111b223fb30cb065d6a29410c6d70.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 102, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;7.6&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1.\u652f\u6301Tencent API 3.0\u63a5\u53e3 2.\u65b0\u589e\u68c0\u6d4b\u5230IP\u53d1\u9001\u53d8\u66f4\u65f6\uff0c\u53d1\u9001WebHook\u8bf7\u6c42\u7684\u529f\u80fd&quot;, &quot;download&quot;: &quot;other/20220205/6e7a4673d1aeb56647c8fdedaa350025.zip&quot;, &quot;md5&quot;: &quot;4af2df141b9788cca423f2fe2938e93c&quot;, &quot;size&quot;: 289364&#125;]&#125;, &#123;&quot;id&quot;: 600801543, &quot;pid&quot;: 600801543, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;cf_ipchange&quot;, &quot;title&quot;: &quot;CloudFlare  \u6279\u91cf\u8bbe\u7f6eip&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u9488\u5bf9\u540c\u4e00\u8d26\u53f7\u4e0b\u7684\u591a\u4e2a\u57df\u540d\uff0c\u6279\u91cf\u8bbe\u7f6e\u89e3\u6790ip\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-50337-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;v1&quot;, &quot;c_manager_version&quot;: &quot;0.0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/cf_ipchange&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/cf_ipchange&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u6fee\u9633\u5e02\u5e38\u4ead\u7535\u5b50\u79d1\u6280\u6709\u9650\u516c\u53f8&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-50337-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200523/4681b7928072a567b7dfabf162d4108a.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 99, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;v1&quot;, &quot;version&quot;: &quot;0.0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4e0a\u7ebf\u7a33\u5b9a\u7248\u672c&quot;, &quot;download&quot;: &quot;other/20200605/6037d53b3831bbf078f67b5fb00e248a.zip&quot;, &quot;md5&quot;: &quot;981e881adda7d1cadda4904ec535147b&quot;, &quot;size&quot;: 36299&#125;]&#125;, &#123;&quot;id&quot;: 600801395, &quot;pid&quot;: 600801395, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;ssh_manager&quot;, &quot;title&quot;: &quot;SSH\u7ba1\u7406\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u9ed1\u767d\u540d\u5355\u3001\u767b\u9646\u90ae\u4ef6\u63d0\u9192\u3001\u767b\u9646\u65e5\u5fd7\u7b49\u7ba1\u7406&lt;a href=\&quot;\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;3&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/ssh_manager&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/ssh_manager&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u732a\u5728\u5929\u4e0a\u98de&quot;, &quot;home&quot;: &quot;&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191106/1989b486726cdea6a62954fe3b345e3d.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 94, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590dssh\u6587\u4ef6\u4e0d\u80fd\u4fdd\u5b58&quot;, &quot;download&quot;: &quot;other/20200221/6800f457ef99aa17caae9085f058659e.zip&quot;, &quot;md5&quot;: &quot;e4f83629e9c86251ee75ffd7b2510075&quot;, &quot;size&quot;: 23372&#125;]&#125;, &#123;&quot;id&quot;: 600801520, &quot;pid&quot;: 600801520, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 4, &quot;price&quot;: 19.8, &quot;name&quot;: &quot;colscript&quot;, &quot;title&quot;: &quot;\u7f51\u7ad9\u91c7\u96c6\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u7f51\u7ad9\u91c7\u96c6,\u76ee\u524d\u652f\u6301typecho\u7a0b\u5e8f\u91c7\u96c6&lt;a href=\&quot;https://www.waytomilky.com/archives/2084.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/colscript&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/colscript&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u963f\u4fee\u7f57&quot;, &quot;home&quot;: &quot;https://www.waytomilky.com/archives/2084.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200427/44047cab050e6d1a4df7ee1c935cd8a2.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 93, &quot;score&quot;: &quot;4.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316UI\u548c\u4fee\u6539\u63d2\u4ef6\u4f5c\u8005\uff0c\u8fdb\u4e00\u6b65\u4f18\u5316\u7ec6\u8282&quot;, &quot;download&quot;: &quot;other/20200427/5ebd8f6f7169e57343b4ecc45f82cdaf.zip&quot;, &quot;md5&quot;: &quot;ea5ee9ce0f514892d583b7ddf2df568d&quot;, &quot;size&quot;: 595867&#125;]&#125;, &#123;&quot;id&quot;: 600801746, &quot;pid&quot;: 600801746, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 2.9, &quot;name&quot;: &quot;server_port_watcher&quot;, &quot;title&quot;: &quot;\u670d\u52a1\u5668\u7aef\u53e3\u76d1\u6d4b&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u76d1\u6d4b\u670d\u52a1\u5668\u7aef\u53e3\uff0c\u5f02\u5e38\u90ae\u4ef6\u901a\u77e5&lt;a href=\&quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=74227\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/server_port_watcher&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/server_port_watcher&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u9ea6\u4e50&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=74227&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210809/72011b5393b2458cf0ea4cce65b49d97.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 74, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;* \u589e\u52a0\u76d1\u542c\u9891\u7387\u53ef\u914d\u7f6e * \u589e\u52a0\u76d1\u542c\u51fa\u73b0\u9519\u8bef\u5bb9\u9519\u6b21\u6570\u914d\u7f6e\uff0c\u4ee5\u514d\u8bef\u62a5,\u76d1\u542c\u5916\u7f51\u6709\u7f51\u7edc\u6ce2\u52a8\u65f6\u53ef\u9002\u5f53\u589e\u52a0\u5bb9\u9519\u9891\u6b21 * \u589e\u52a0\u51fa\u73b0\u9519\u8bef\u540e\u53ef\u6267\u884c\u547d\u4ee4\uff0c\u8bbf\u95eeURL\uff0c\u5b9e\u73b0\u4e1a\u52a1\u81ea\u6062\u590d&quot;, &quot;download&quot;: &quot;other/20211128/5d78816b8ea08777644013e1b2534b6d.zip&quot;, &quot;md5&quot;: &quot;69e66c6a5d5914ec35f962a5dbd0f839&quot;, &quot;size&quot;: 29358623&#125;]&#125;, &#123;&quot;id&quot;: 600801604, &quot;pid&quot;: 600801604, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;baktomail&quot;, &quot;title&quot;: &quot;\u538b\u7f29\u5907\u4efd\u5230\u90ae\u7bb1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u538b\u7f29\u6587\u4ef6\u5939\u53d1\u9644\u4ef6\u5230\u90ae\u7bb1\uff0c\u53ef\u8d85\u5927\u9644\u4ef6\u591a\u6587\u4ef6\u5939&lt;a href=\&quot;https://www.bt.cn/bbs/thread-57404-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/baktomail&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/baktomail&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u82af\u6e56&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-57404-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20201010/8e7ed2907eec45d8928201c43a94b119.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 73, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 1, &quot;version_msg&quot;: &quot;\u538b\u7f29\u6587\u4ef6\u5939\u6216\u6587\u4ef6\u53d1\u9001\u9644\u4ef6\u5907\u4efd\u5230\u90ae\u7bb1\uff0c\u652f\u6301\u8d85\u5927\u9644\u4ef6\u548c\u591a\u6587\u4ef6\u5939&quot;, &quot;download&quot;: &quot;other/20201026/fde326bccf9e7da990d1e77f6a78c919.zip&quot;, &quot;md5&quot;: &quot;56f2eeef281a9b0b018a1d77066934db&quot;, &quot;size&quot;: 939622&#125;]&#125;, &#123;&quot;id&quot;: 600801499, &quot;pid&quot;: 600801499, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;mounter&quot;, &quot;title&quot;: &quot;S3\u76d8\u78c1\u76d8\u6302\u8f7d\u5668&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u65b9\u4fbf\u5730\u6302\u8f7dS3\u6876\u4e0e\u78c1\u76d8&lt;a href=\&quot;https://www.bt.cn/bbs/thread-46890-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/mounter&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/mounter&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;cxbsoft&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-46890-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200401/5ab52b348d46d2fd21fd6af5bd987955.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 68, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 2, &quot;version_msg&quot;: &quot;\u65b9\u4fbf\u5730\u6302\u8f7d\u5bf9\u8c61\u50a8\u5b58\u4e0e\u78c1\u76d8,\u5e76\u5b9e\u73b0\u6587\u4ef6\u7ba1\u7406(\u5305\u62ec\u4e0a\u4f20\uff08\u6587\u4ef6\u5939\uff09\u3001\u4e0b\u8f7d)&quot;, &quot;download&quot;: &quot;other/20200407/f0c9a6f6f70080ea497662ae862b2565.zip&quot;, &quot;md5&quot;: &quot;f972a0b316cee23aa6abced1cf4a4397&quot;, &quot;size&quot;: 56540&#125;]&#125;, &#123;&quot;id&quot;: 600801539, &quot;pid&quot;: 600801539, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;typechomg&quot;, &quot;title&quot;: &quot;Typecho\u7ba1\u7406&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u65b9\u4fbf\u7684typecho\u7ba1\u7406\uff0c\u4e00\u952e\u5b89\u88c5\u63d2\u4ef6&lt;a href=\&quot;http://blog.bsot.cn/index.php/archives/116/\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;v1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/typechomg&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/typechomg&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;cxbsoft&quot;, &quot;home&quot;: &quot;http://blog.bsot.cn/index.php/archives/116/&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200520/7667104cd890b06a74bc0d336d4f7dbd.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 68, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;v1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 2, &quot;version_msg&quot;: &quot;\u5b9e\u73b0\u4e00\u952e\u5b89\u88c5\u63d2\u4ef6\u3001\u63d2\u4ef6\u7ba1\u7406\u3001\u8bc4\u8bba\u5b89\u5168\u68c0\u6d4b\u3001\u8bc4\u8bba\u7ba1\u7406\u3001\u53cb\u94fe\u7ba1\u7406\u4e0e\u53cb\u94fe\u65e0\u6548url\u5220\u9664&quot;, &quot;download&quot;: &quot;other/20200527/8155b53a9f5e9e2d55aff02776d4146f.zip&quot;, &quot;md5&quot;: &quot;d08e076b7a371115f41b5686afeb8a83&quot;, &quot;size&quot;: 18238&#125;]&#125;, &#123;&quot;id&quot;: 600801399, &quot;pid&quot;: 600801399, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 5, &quot;name&quot;: &quot;jdoss&quot;, &quot;title&quot;: &quot;\u4eac\u4e1c\u4e91\u5b58\u50a8\u5bf9\u8c61\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u628a\u4eac\u4e1c\u4e91OSS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5b8c\u5168\u5ab2\u7f8e\u672c\u5730\u76d8\u3002&lt;a href=\&quot;https://www.bt.cn/bbs/thread-39670-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;2&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/jdoss&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/jdoss&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-39670-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20191108/d74b2c5e165c729f76ca94923835350c.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 65, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;2&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u628a\u4eac\u4e1c\u4e91OSS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u89e3\u51b3\u4e86\u5bf9\u8c61\u5b58\u50a8\u53ef\u89c6\u5316\u64cd\u4f5c\u7684\u5404\u79cd\u95ee\u9898,\u5b8c\u5168\u5ab2\u7f8e\u672c\u5730\u76d8\uff0c\u517c\u5bb9py3&quot;, &quot;download&quot;: &quot;other/20200503/540dc47bb91e9d95934d6875d8424712.zip&quot;, &quot;md5&quot;: &quot;e56ade54e5d96e6cc7afa77a707de63f&quot;, &quot;size&quot;: 33564&#125;]&#125;, &#123;&quot;id&quot;: 600801576, &quot;pid&quot;: 600801576, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 3, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;dnspod_parsing_switch&quot;, &quot;title&quot;: &quot;Dnspod\u89e3\u6790\u81ea\u52a8\u5207\u6362&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5f53\u7f51\u7ad9\u65e0\u6cd5\u8bbf\u95ee\u65f6\u81ea\u52a8\u5207\u6362\u5230\u5907\u7528\u670d\u52a1\u5668\u5e76\u81ea\u52a8\u901a\u77e5\u7ba1\u7406\u5458&lt;a href=\&quot;https://www.bt.cn/bbs/thread-53672-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;8.9&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/dnspod_parsing_switch&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/dnspod_parsing_switch&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5434\u5148\u68ee&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-53672-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200809/e0972606bba6b951b3e3abaf02bee292.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 63, &quot;score&quot;: &quot;3.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;8.9&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u63d2\u4ef6\u4f7f\u7528\u4f53\u9a8c\uff0c\u4fee\u590d\u5df2\u77e5\u63d2\u4ef6\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20221207/1418623d0aff08b85897614c620d039a.zip&quot;, &quot;md5&quot;: &quot;7a6ccb326a8e7aed35bab65fb8265d14&quot;, &quot;size&quot;: 202239&#125;]&#125;, &#123;&quot;id&quot;: 600801764, &quot;pid&quot;: 600801764, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 4, &quot;name&quot;: &quot;hxsquota&quot;, &quot;title&quot;: &quot;\u78c1\u76d8\u914d\u989d&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u5bf9\u6302\u8f7d\u7684xfs\u78c1\u76d8\u6587\u4ef6\u5939\u9650\u5b9a\u4f7f\u7528\u5927\u5c0f\u3010\u7ad9\u70b9\u78c1\u76d8\u914d\u989d\u3011\u7684\u6539\u8fdb\u7248&lt;a href=\&quot;https://www.bt.cn/bbs/thread-76829-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/hxsquota&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/hxsquota&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u8def\u9014\u6709\u5751&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-76829-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210928/e054ee81a23bf594c9ba48c9c40b11d9.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 62, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u5bf9\u6302\u8f7d\u7684xfs\u78c1\u76d8\u6587\u4ef6\u5939\u9650\u5b9a\u4f7f\u7528\u5927\u5c0f\u3010\u7ad9\u70b9\u78c1\u76d8\u914d\u989d\u3011\u7684\u6539\u8fdb\u7248&quot;, &quot;download&quot;: &quot;other/20210928/3742ec1c436387307ac3689c76fcb6ae.zip&quot;, &quot;md5&quot;: &quot;bc05e8cc52cb9d7a7344cc714919f8dd&quot;, &quot;size&quot;: 19349&#125;]&#125;, &#123;&quot;id&quot;: 600801445, &quot;pid&quot;: 600801445, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 1, &quot;price&quot;: 5, &quot;name&quot;: &quot;customtime&quot;, &quot;title&quot;: &quot;php\u6d4b\u8bd5\u865a\u62df\u65f6\u95f4&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u4f1a\u6539\u53d8\u8f6f\u4ef6\u7cfb\u7edf\u65f6\u95f4\uff0c\u751f\u4ea7\u73af\u5883\u8bf7\u8c28\u614e\u4f7f\u7528\uff0c\u4ee5\u514d\u9020\u6210\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6&lt;a href=\&quot;https://blog.csdn.net/qq_38883889/article/details/106731520\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;3.4&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/customtime&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/customtime&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u507b\u5138\u5c0f\u5352&quot;, &quot;home&quot;: &quot;https://blog.csdn.net/qq_38883889/article/details/106731520&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200108/fcfe197c6ddf9cc3f36629f72c1285d7.png&quot;, &quot;install_opt&quot;: 1, &quot;count&quot;: 51, &quot;score&quot;: &quot;1.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;3.4&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1.\u4fee\u590d\u67d0\u4e9b\u7279\u5b9a\u60c5\u51b5\u4e0b\u4e0d\u8d70\u65f6\u95ee\u9898\uff08\u6bd4\u5982docker\u4e2d\u8fd0\u884c\u5b9d\u5854\u65f6\uff09&quot;, &quot;download&quot;: &quot;other/20220329/3dd78eb8ca41e6c60e0121eb044cbdfd.zip&quot;, &quot;md5&quot;: &quot;955734e445f1c525ebda74b5818d210f&quot;, &quot;size&quot;: 364886&#125;]&#125;, &#123;&quot;id&quot;: 600801765, &quot;pid&quot;: 600801765, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 5.98, &quot;name&quot;: &quot;seotip&quot;, &quot;title&quot;: &quot;SEO\u6536\u5f55\u901a\u77e5&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;SEO\u6536\u5f55\u65b0\u6761\u76ee\u90ae\u4ef6\u901a\u77e5,\u9002\u5408\u65b0\u7ad9\u524d\u671fSEO\u7528\u3010\u91cd\u6784\u4e2d\u3011&lt;a href=\&quot;https://www.bt.cn/bbs\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/seotip&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/seotip&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u65e7\u96e8\u697c&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20211101/e4c27dc88f376da272cc3529880d4eeb.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 48, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: -1, &quot;version_msg&quot;: &quot;SEO\u6536\u5f55\u901a\u77e5,\u5b9e\u65f6\u67e5\u8be2\u6536\u5f55\u6570\u636e\uff0c\u90ae\u4ef6\u81ea\u52a8\u901a\u77e5\u65b0\u589e\u6536\u5f55\u3002&quot;, &quot;download&quot;: &quot;other/20211101/3445f4559fbf4dd27f23e3ab83053c14.zip&quot;, &quot;md5&quot;: &quot;e45ecdb5acac6aa1296f647ac5ec8384&quot;, &quot;size&quot;: 891693&#125;]&#125;, &#123;&quot;id&quot;: 600801843, &quot;pid&quot;: 600801843, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.98, &quot;name&quot;: &quot;imgtool&quot;, &quot;title&quot;: &quot;\u7f51\u7ad9\u56fe\u7247\u81ea\u52a8\u538b\u7f29\u6c34\u5370&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u7f51\u7ad9\u56fe\u7247\u81ea\u52a8\u538b\u7f29\u53ca\u6c34\u5370\uff0c\u6781\u5927\u63d0\u5347\u7f51\u7ad9\u52a0\u8f7d\u901f\u5ea6\uff0c1\u5206\u949f\u5373\u53ef\u914d\u7f6e&lt;a href=\&quot;https://www.bt.cn/bbs/thread-104078-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/imgtool&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/imgtool&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u65e7\u96e8\u697c&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-104078-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20221118/a6e94fb316bb90e687c969f5c9addc8b.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 44, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4f18\u5316\u538b\u7f29\u89c4\u5219&quot;, &quot;download&quot;: &quot;other/20221225/1f3ce346b7eeddf00570bec6fb07eba8.zip&quot;, &quot;md5&quot;: &quot;d15a696fe241aaf30b9f1e9cb9b73ce8&quot;, &quot;size&quot;: 13172528&#125;]&#125;, &#123;&quot;id&quot;: 600801594, &quot;pid&quot;: 600801594, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;ftplimit&quot;, &quot;title&quot;: &quot;FTP\u76ee\u5f55\u63a7\u5236&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u57fa\u4e8e\u5b98\u65b9pureftp\u5b9e\u73b0\u7684\u76ee\u5f55\u5bb9\u91cf\u63a7\u5236\u63d2\u4ef6&lt;a href=\&quot;https://www.bt.cn/bbs/thread-56245-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/ftplimit&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/ftplimit&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5fae\u95ea\u95ea&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-56245-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200915/28ff3da91aefe2ddf22962094c3180ab.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 39, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590dpython3\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20200921/5bc6671562865689f60c289fd1d93178.zip&quot;, &quot;md5&quot;: &quot;e07740e718fa6d70da8577ccdeea911f&quot;, &quot;size&quot;: 10578&#125;]&#125;, &#123;&quot;id&quot;: 600801666, &quot;pid&quot;: 600801666, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.99, &quot;name&quot;: &quot;hwobs&quot;, &quot;title&quot;: &quot;\u534e\u4e3a\u4e91\u5bf9\u8c61\u5b58\u50a8OBS\u81ea\u52a8\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u534e\u4e3a\u4e91\u5bf9\u8c61\u5b58\u50a8OBS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f00\u673a\u81ea\u52a8\u6302\u8f7d&lt;a href=\&quot;https://www.bt.cn/bbs/thread-64317-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/hwobs&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/hwobs&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;linuxxp&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-64317-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210219/32fccecd49f18c4f5154a6d33766a93d.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 31, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u534e\u4e3a\u4e91\u5bf9\u8c61\u5b58\u50a8OBS\u6302\u8f7d\u5230\u670d\u52a1\u5668\uff0c\u5f00\u673a\u81ea\u52a8\u6302\u8f7d&quot;, &quot;download&quot;: &quot;other/20210221/46768e0f7ec1e86f14f031d292de097d.zip&quot;, &quot;md5&quot;: &quot;783f4f026ba646a8733fc785065c6eb2&quot;, &quot;size&quot;: 35319&#125;]&#125;, &#123;&quot;id&quot;: 600801813, &quot;pid&quot;: 600801813, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 19.9, &quot;name&quot;: &quot;godaddydns&quot;, &quot;title&quot;: &quot;Godaddy\u57df\u540dDNS\u89e3\u6790&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;Godaddy DNS\u57df\u540d\u6279\u91cf\u89e3\u6790\u7ba1\u7406\u7cfb\u7edf!&lt;a href=\&quot;https://www.bt.cn/bbs/thread-93672-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/godaddydns&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/godaddydns&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5c0f\u742a&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-93672-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20220608/c3ee3849df6b0da2603a8cdb6d4f61a5.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 30, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u57df\u540d\u5217\u8868\u8fc7\u591a\u6837\u5f0f\u663e\u793a\u95ee\u9898&quot;, &quot;download&quot;: &quot;other/20220922/e22ef1333942af30930e3f8e5aca4c38.zip&quot;, &quot;md5&quot;: &quot;c518f9fded2f9dfbc8a44850dcfd4adf&quot;, &quot;size&quot;: 197057&#125;]&#125;, &#123;&quot;id&quot;: 600801506, &quot;pid&quot;: 600801506, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;dnspod_record&quot;, &quot;title&quot;: &quot;DnsPod\u89e3\u6790\u8bbe\u7f6e&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u901a\u8fc7\u672c\u63d2\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5728\u5b9d\u5854\u9762\u677f\u4e2d\u7ba1\u7406\u817e\u8baf\u4e91\u7684\u57df\u540d\u89e3\u6790&lt;a href=\&quot;https://www.bt.cn/bbs/thread-47377-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;2.1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/dnspod_record&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/dnspod_record&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u5434\u5148\u68ee&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-47377-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20200407/fea4f518a447cde5cbc5c6df1e1f434d.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 27, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;2.1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u4fee\u590d\u4e86\u672a\u9009\u62e9\u57df\u540d\u5bfc\u81f4\u62a5\u9519&quot;, &quot;download&quot;: &quot;other/20200411/3c0dfc945a429653ce6414006c929a2c.zip&quot;, &quot;md5&quot;: &quot;03954a3ed556069d82a67e9bfa5996eb&quot;, &quot;size&quot;: 51308&#125;]&#125;, &#123;&quot;id&quot;: 600801629, &quot;pid&quot;: 600801629, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;btgogs&quot;, &quot;title&quot;: &quot;gogs\u5b9d\u5854\u63d2\u4ef6&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u57fa\u4e8egogs\u7684\u5b9d\u5854\u7b2c\u4e09\u65b9\u63d2\u4ef6&lt;a href=\&quot;https://blog.liushuai.cq.cn/article/detail/29\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;0&quot;, &quot;c_manager_version&quot;: &quot;4.1&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/btgogs&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/btgogs&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u507b\u5138\u5c0f\u5352&quot;, &quot;home&quot;: &quot;https://blog.liushuai.cq.cn/article/detail/29&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20201213/ada0d5433c4d484f22e4811dfddd1f94.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 23, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;0&quot;, &quot;version&quot;: &quot;4.1&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;1.\u4ecegiteaforBt\u4e2d\u5206\u79bb\u51fa\u6765\uff0c2.\u4e3a\u540e\u671f\u517c\u5bb9\u4f7f\u7528\u6307\u5b9a\u7528\u6237\u8fd0\u884c\u6253\u4e0b\u57fa\u7840\uff0c3.\u4e3awindows\u5e73\u53f0\u8fd0\u884c\u6253\u4e0b\u57fa\u7840&quot;, &quot;download&quot;: &quot;other/20210116/f9f92107b94376bbb72a966297f2a537.zip&quot;, &quot;md5&quot;: &quot;745ed27e370e06fa763fbfe79f4cb40c&quot;, &quot;size&quot;: 382075&#125;]&#125;, &#123;&quot;id&quot;: 600801750, &quot;pid&quot;: 600801750, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 5, &quot;price&quot;: 19.9, &quot;name&quot;: &quot;server_proxy_res&quot;, &quot;title&quot;: &quot;\u8fdc\u7a0b\u8d44\u6e90\u7f13\u5b58\u670d\u52a1&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;\u8fdc\u7a0b\u8d44\u6e90\u7f13\u5b58\uff0c\u652f\u6301\u8de8\u57df\u3001\u9632\u76d7\u94fe\u9650\u5236&lt;a href=\&quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=74355\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/server_proxy_res&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/server_proxy_res&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u9ea6\u4e50&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/forum.php?mod=viewthread&amp;amp;tid=74355&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210817/1bbc79b0173702705a1138ae2a0c04ad.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 12, &quot;score&quot;: &quot;5.0&quot;, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;\u8fdc\u7a0b\u8d44\u6e90\u7f13\u5b58\uff0c\u652f\u6301\u8de8\u57df\u3001\u9632\u76d7\u94fe\u9650\u5236&quot;, &quot;download&quot;: &quot;other/20210826/b4b958690a19863b87b24800914d1e9f.zip&quot;, &quot;md5&quot;: &quot;a13e4b89ecebfcf65cf0cd8a4f806eab&quot;, &quot;size&quot;: 14611625&#125;]&#125;, &#123;&quot;id&quot;: 600801651, &quot;pid&quot;: 600801651, &quot;os&quot;: &quot;Linux&quot;, &quot;type&quot;: 10, &quot;sort&quot;: 0, &quot;price&quot;: 9.9, &quot;name&quot;: &quot;us3&quot;, &quot;title&quot;: &quot;UCloud\u5bf9\u8c61\u5b58\u50a8US3\u81ea\u52a8\u6302\u8f7d\u5de5\u5177&quot;, &quot;panel_pro&quot;: 1, &quot;panel_free&quot;: 1, &quot;panel_test&quot;: 1, &quot;panel_ltd&quot;: 1, &quot;endtime&quot;: 999999999999, &quot;et&quot;: null, &quot;ps&quot;: &quot;UCloud\u5bf9\u8c61\u5b58\u50a8US3\u81ea\u52a8\u6302\u8f7d\u5230\u7cfb\u7edf,\u5f53\u4f5c\u672c\u5730\u78c1\u76d8\u4f7f\u7528&lt;a href=\&quot;https://www.bt.cn/bbs/thread-63016-1-1.html\&quot; target=\&quot;_blank\&quot; rel=\&quot;noreferrer noopener\&quot; class=\&quot;bt-ico-ask\&quot; style=\&quot;cursor: pointer;\&quot;&gt;?&lt;/a&gt;&quot;, &quot;version&quot;: &quot;0&quot;, &quot;s_version&quot;: &quot;0&quot;, &quot;manager_version&quot;: &quot;1&quot;, &quot;c_manager_version&quot;: &quot;0&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mutex&quot;: &quot;&quot;, &quot;state&quot;: 0, &quot;o_plugin&quot;: true, &quot;install_checks&quot;: &quot;/www/server/panel/plugin/us3&quot;, &quot;uninsatll_checks&quot;: &quot;/www/server/panel/plugin/us3&quot;, &quot;compile_args&quot;: 0, &quot;version_coexist&quot;: 0, &quot;author&quot;: &quot;\u7ffc\u4e0b\u4e4b\u98ce&quot;, &quot;home&quot;: &quot;https://www.bt.cn/bbs/thread-63016-1-1.html&quot;, &quot;min_image&quot;: &quot;/api/Pluginother/get_file?fname=image/20210121/9f106b6e8aed899e01f1c056a4b13a8f.png&quot;, &quot;install_opt&quot;: 0, &quot;count&quot;: 7, &quot;score&quot;: 0, &quot;versions&quot;: [&#123;&quot;m_version&quot;: &quot;1&quot;, &quot;version&quot;: &quot;0&quot;, &quot;update_msg&quot;: &quot;&quot;, &quot;dependnet&quot;: &quot;&quot;, &quot;mem_limit&quot;: 32, &quot;cpu_limit&quot;: 1, &quot;os_limit&quot;: 0, &quot;version_msg&quot;: &quot;UCloud\u5bf9\u8c61\u5b58\u50a8US3\u81ea\u52a8\u6302\u8f7d\u5230\u7cfb\u7edf,\u5f53\u4f5c\u672c\u5730\u78c1\u76d8\u4f7f\u7528&quot;, &quot;download&quot;: &quot;other/20210121/494382fc7b85264f8ef4ffbd839329fa.zip&quot;, &quot;md5&quot;: &quot;507aefb64f4303a58dd2b087582be239&quot;, &quot;size&quot;: 17189&#125;]&#125;], &quot;is_user_status&quot;: 1, &quot;ltd&quot;: 0, &quot;pro&quot;: 0, &quot;recommend&quot;: [&#123;&quot;title&quot;: &quot;\u5821\u5854\u8fd0\u7ef4\u76f4\u64ad\u7b54\u7591&quot;, &quot;image&quot;: &quot;/static/img/recom_icon/1.png&quot;, &quot;type&quot;: &quot;link&quot;, &quot;sort&quot;: 2, &quot;data&quot;: &quot;https://live.bilibili.com/22312524&quot;&#125;, &#123;&quot;title&quot;: &quot;\u4f01\u4e1a\u7248999\u5143/\u5e74&quot;, &quot;image&quot;: &quot;/static/img/recom_icon/2.png&quot;, &quot;type&quot;: &quot;link&quot;, &quot;sort&quot;: 1, &quot;data&quot;: &quot;https://www.bt.cn/download/linuxent.html&quot;&#125;, &#123;&quot;title&quot;: &quot;\u7cbe\u54c1\u8f6f\u4ef6\u63a8\u8350&quot;, &quot;image&quot;: &quot;/static/img/recom_icon/3.png&quot;, &quot;type&quot;: &quot;soft&quot;, &quot;sort&quot;: 0, &quot;data&quot;: [&#123;&quot;name&quot;: &quot;static_cdn&quot;, &quot;pid&quot;: 0, &quot;title&quot;: &quot;\u5821\u5854\u9762\u677f\u9759\u6001\u6587\u4ef6\u52a0\u901f&quot;, &quot;ps&quot;: &quot;\u5bf9\u9762\u677f\u9759\u6001\u6587\u4ef6\u8fdb\u884cCDN\u52a0\u901f\uff0c\u52a0\u5feb\u9762\u677f\u52a0\u8f7d\u901f\u5ea6\uff0c\u63d0\u5347\u5bf9\u5c0f\u5e26\u5bbd\u548c\u6d77\u5916\u670d\u52a1\u5668\u7684\u9762\u677f\u4f7f\u7528\u4f53\u9a8c!&quot;, &quot;price&quot;: 0, &quot;version&quot;: &quot;1.2&quot;, &quot;endtime&quot;: 999999999999, &quot;sort&quot;: 1, &quot;setup&quot;: false&#125;, &#123;&quot;name&quot;: &quot;fail2ban&quot;, &quot;pid&quot;: 0, &quot;title&quot;: &quot;Fail2ban\u9632\u7206\u7834&quot;, &quot;ps&quot;: &quot;\u9632\u6b62\u6076\u610f\u4e3b\u673a\u7206\u7834\u670d\u52a1\u3001\u7ad9\u70b9\uff0c\u7981\u6b62\u5bfc\u81f4\u591a\u4e2a\u8eab\u4efd\u9a8c\u8bc1\u9519\u8bef\u7684\u4e3b\u673a&quot;, &quot;price&quot;: 0, &quot;version&quot;: &quot;1.7&quot;, &quot;endtime&quot;: 999999999999, &quot;sort&quot;: 2, &quot;setup&quot;: false&#125;, &#123;&quot;name&quot;: &quot;mail_sys&quot;, &quot;pid&quot;: 0, &quot;title&quot;: &quot;\u5b9d\u5854\u90ae\u5c40\u7ba1\u7406\u5668&quot;, &quot;ps&quot;: &quot;\u591a\u57df\uff0c\u591a\u7528\u6237\u90ae\u5c40\uff0c\u652f\u6301SMTP/IMAP/POP3/HTTP\u63a5\u53e3\uff0c\u9700\u898125\u7aef\u53e3&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/bbs/thread-87496-1-1.html\&quot; target=\&quot;_blank\&quot;&gt; [\u4f7f\u7528\u5e2e\u52a9]&lt;/a&gt;&quot;, &quot;price&quot;: 0, &quot;version&quot;: &quot;4.3&quot;, &quot;endtime&quot;: 999999999999, &quot;sort&quot;: 3, &quot;setup&quot;: false&#125;, &#123;&quot;name&quot;: &quot;psync_api&quot;, &quot;pid&quot;: 0, &quot;title&quot;: &quot;\u5b9d\u5854\u4e00\u952e\u8fc1\u79fbAPI\u7248\u672c&quot;, &quot;ps&quot;: &quot;\u5feb\u901f\u8fc1\u79fb\u9762\u677f\u6570\u636e\uff0c\u6b64\u7248\u672c\u4ec5\u5728\u8fc1\u51fa\u673a\u5668\uff08\u53d1\u9001\u6570\u636e\u7aef\uff09\u5b89\u88c5\u5373\u53ef&lt;a href=\&quot;https://www.bt.cn/bbs/thread-33070-1-1.html\&quot; target=\&quot;_blank\&quot; class=\&quot;btlink\&quot;&gt;&gt;&gt;\u6559\u7a0b&lt;/a&gt;&quot;, &quot;price&quot;: 0, &quot;version&quot;: &quot;3.2&quot;, &quot;endtime&quot;: 999999999999, &quot;sort&quot;: 4, &quot;setup&quot;: false&#125;, &#123;&quot;name&quot;: &quot;firewall&quot;, &quot;pid&quot;: 0, &quot;title&quot;: &quot;\u7cfb\u7edf\u9632\u706b\u5899&quot;, &quot;ps&quot;: &quot;\u63d0\u4f9b\u7cfb\u7edf\u9632\u706b\u5899(iptables/firewall/ufw)\u7684\u53ef\u89c6\u5316\u7ba1\u7406\u529f\u80fd&quot;, &quot;price&quot;: 0, &quot;version&quot;: &quot;3.1&quot;, &quot;endtime&quot;: 999999999999, &quot;sort&quot;: 5, &quot;setup&quot;: false&#125;, &#123;&quot;name&quot;: &quot;coll_admin&quot;, &quot;pid&quot;: 0, &quot;title&quot;: &quot;\u5821\u5854\u4e91\u63a7\u5e73\u53f0&quot;, &quot;ps&quot;: &quot;\u53ef\u514d\u8d39\u9ad8\u6548\u7ba1\u7406\u591a\u53f0\u670d\u52a1\u5668\u9762\u677f\uff0c\u5b98\u65b9\u81ea\u7528\u63a8\u8350\uff0c\u4ee5\u53ca\u5176\u4ed6\u591a\u673a\u7ba1\u7406\u529f\u80fd&lt;a class=\&quot;btlink\&quot; href=\&quot;https://www.bt.cn/platform\&quot; target=\&quot;_blank\&quot;&gt; [\u4e86\u89e3\u8be6\u60c5]&lt;/a&gt;&quot;, &quot;price&quot;: 0, &quot;version&quot;: &quot;2.5&quot;, &quot;endtime&quot;: 999999999999, &quot;sort&quot;: 6, &quot;setup&quot;: false&#125;]&#125;], &quot;remarks&quot;: &#123;&quot;list&quot;: [&quot;\u66f4\u6362\u6388\u6743IP&quot;, &quot;5\u5206\u949f\u6781\u901f\u54cd\u5e94&quot;, &quot;15\u5929\u65e0\u7406\u7531\u9000\u6b3e&quot;, &quot;\u4f4e\u81f32.43\u5143/\u5929&quot;, &quot;30+\u6b3e\u4ed8\u8d39\u63d2\u4ef6&quot;, &quot;20+\u4f01\u4e1a\u7248\u4e13\u4eab\u529f\u80fd&quot;, &quot;1000\u6761\u514d\u8d39\u77ed\u4fe1\uff08\u5e74\u4ed8\uff09&quot;, &quot;2\u5f20SSL\u5546\u7528\u8bc1\u4e66\uff08\u5e74\u4ed8\uff09&quot;, &quot;\u4e13\u4eab\u4f01\u4e1a\u670d\u52a1\u7fa4\uff08\u5e74\u4ed8\uff09&quot;], &quot;pro_list&quot;: [&quot;15+\u6b3e\u4ed8\u8d39\u63d2\u4ef6&quot;, &quot;15\u5929\u65e0\u7406\u7531\u9000\u6b3e&quot;, &quot;\u53ef\u66f4\u6362IP&quot;, &quot;\u4f4e\u81f31.18\u5143/\u5929&quot;, &quot;\u5546\u7528\u9632\u706b\u5899\u6388\u6743&quot;, &quot;\u5ba2\u670d\u4f18\u5148\u54cd\u5e94&quot;], &quot;kfqq&quot;: &quot;3007255432&quot;, &quot;kf&quot;: &quot;http://q.url.cn/CDfQPS?_type=wpa&amp;qidian=true&quot;, &quot;qun&quot;: &quot;&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="最后输入"><a href="#最后输入" class="headerlink" title="最后输入"></a>最后输入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr +i /www/server/panel/data/plugin.json</span><br></pre></td></tr></table></figure><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20230108095647.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 健身 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0到1部署ChatGPT</title>
      <link href="/2022/12/11/%E4%B8%80%E9%95%9C%E5%88%B0%E5%BA%95%E2%80%94ChatGPT/"/>
      <url>/2022/12/11/%E4%B8%80%E9%95%9C%E5%88%B0%E5%BA%95%E2%80%94ChatGPT/</url>
      
        <content type="html"><![CDATA[<h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><ul><li>代理</li><li>国外手机号</li><li>准备一个趁手的浏览器</li></ul><details class="folding-tag" ><summary> 注册chatgpt </summary>              <div class='content'>              <h2 id="注册chatgpt"><a href="#注册chatgpt" class="headerlink" title="注册chatgpt"></a>注册chatgpt</h2><ol><li><a href="https://sms-activate.org/cn">点我进入接码平台</a><div class="img-wrap"><div class="img-bg"><img class="img" src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221211220543.png"/></div></div></li><li><strong>注册成功后需要充值USD 大概一次接码OpenAi的验证码费用是11卢布，人民币来看差不多是1块钱，不过只能充美金。</strong><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212081844.png" alt=""></li></ol><div class="tip info"><p><strong>在左侧搜索OpenAi，然后点击印度</strong></p></div><div class="tip info"><p><strong>这里我用的韩国的节点所以我们要把它换成印度归属地9开头</strong></p></div><p><img src="https://lh5.googleusercontent.com/-P8__DqW8L2ALL1R-prXR67miAndgWSKd1nyRVX6GIOLqqBM-pIYr9-ItBB4Y-dvbK4IsVomBl7ZLrHr60rkJIPh6ra1293C7CNKIgNGo0nRChZQSH4BnAtJ1IZfjJRZDhGnfNp_aGlo_O46QOChyz5REw0Xu3nOP2yqJSQmKRXbIP1xaWhiVmlAHtXE3g" alt=""></p><p><img src="https://lh6.googleusercontent.com/CF_2ilYYa3bJndavHZkG2CRuKOIBnI_pRd7ljOik61P42vHUdfGN-yOautzgUI9Jty04jdoqf9tOQdsAfSlqKDO-SQwyrzS9JvriuPwO3UD7MlMJgbZi_E4M76FhzcL8X5zz8HewvTtwOCHziihUKESUovjR2f8pVg5QYF5gVWxCIOpJJ5NhKP2uruGrJA" alt=""></p><div class="tip success"><p><strong>点击小黄车购买后稍等片刻会出现验证码留着一会粘贴</strong></p></div><h2 id="注册openapi-点我进入openapi官网"><a href="#注册openapi-点我进入openapi官网" class="headerlink" title="注册openapi 点我进入openapi官网"></a>注册openapi <a href="https://auth0.openai.com/u/signup/identifier?state=hKFo2SBOakZ6UXI4Q05sc3dWa0JjRHRwV0sxNHFGb3djVG0zRKFur3VuaXZlcnNhbC1sb2dpbqN0aWTZIExMVVVaX0F4Yjc5YnpyaVk4eUJtREtPZGI4ODZKSVhoo2NpZNkgRFJpdnNubTJNdTQyVDNLT3BxZHR3QjNOWXZpSFl6d0Q">点我进入openapi官网</a></h2><p><img src="image https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221211224024.png" alt=""></p><p><strong>这里我使用QQ邮箱注册，然后查看自己Email里的链接验证即可</strong></p><div class="tip warning"><p>如果出现不能在当前国家服务的提示，100%是因为我们的代理在了中国或香港<br>解决方法切换代理设置，接着状态栏输入<strong>javascript:</strong>,粘贴以下代码</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.localStorage.removeItem(Object.keys(window.localStorage).find(i=&gt;i.startsWith(<span class="string">&#x27;@@auth0spajs&#x27;</span>)))</span><br></pre></td></tr></table></figure><p><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221211225338.png" alt=""></p><p><img src="https://lh3.googleusercontent.com/6ZdsiN3icfui0AdbF5_D5gRsK6BGlNBbNYusO4jrPHzZOJYov0zE9qukPwlA1jmGET4og0s9oYlZ0cHtaM1Ty8nW9BpnHxf14SZ9Jkq7NrgTfYC7qwx8fl4IpRykNdcRic4dAiQ3c_VRrLe8E7MNdZEAf9prceEdOAd6btO5FiWDOXt8VTu0PJz8Iq69Cg" alt=""></p><div class="tip success"><p>注册完毕！取乐吧！</p></div>              </div>            </details><details class="folding-tag" ><summary> railway自动部署微信机器人 </summary>              <div class='content'>              <h2 id="配置相关项"><a href="#配置相关项" class="headerlink" title="配置相关项"></a>配置相关项</h2><p><a href="https://github.com/fuergaosi233/wechat-chatgpt">进入项目地址</a><br><img src="https://img-blog.csdnimg.cn/img_convert/742eed8e34744e4a46cdaabebbcdf78a.png" alt=""></p><p><div class="tip info"><p><strong>下面按部就班操作就可以如图</strong></p></div><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212084301.png" alt=""></p><p><div class="tip info"><p><strong>部署成功后我们回到github自己仓库的位置会看到仓库已经fork过来了</strong></p></div><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212084932.png" alt=""></p><p><div class="tip info"><p><strong>修改配置文件</strong></p></div><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212085447.png" alt=""></p><h2 id="部署点击部署railway-注册登录步骤如上。"><a href="#部署点击部署railway-注册登录步骤如上。" class="headerlink" title="部署点击部署railway 注册登录步骤如上。"></a>部署<a href="https://chat.openai.com/chat">点击部署railway</a> 注册登录步骤如上。</h2><ol><li><strong>f12打开开发工具</strong>。</li><li><strong>打开应用程序&gt; Cookie。</strong><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212090527.png" alt=""></li><li><strong>单击deploy</strong><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212091007.png" alt=""></li><li><strong>部署成功后点击查看部署日志，双击链接扫码登录，稍等片刻即可</strong><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212091240.png" alt=""><br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/20221212091446.png" alt=""></li></ol>              </div>            </details><div class="tip bell"><p>此外，在部署中，您可能会遇到以下问题：</p><p>错误：⚠️池中没有聊天项目：此错误表示您未正确配置 OpenAI 帐户信息。您可以从以下几个方面解决此问题：1.检查令牌或openAI账号和密码是否正确填写。2. 令牌可能已经过期（经验表明令牌的过期时间为24小时），可以到chatGPT官网重新获取令牌。3. 重新部署当前服务。请注意，应在铁路仪表板的“变量”页面上修改上述内容。<br>部署完成后，不会生成 QR 码。尝试刷新页面，再次查看“部署日志”面板是否生成了链接和二维码。<br>生成的二维码无法扫描。在生成的二维码上，有一个链接可以点击扫描二维码。<br>消息反馈非常慢。由于Railway的服务器部署在海外，消息反馈延迟有所增加，但仍在接受范围内。如果您对时间敏感，则可以使用自己的服务器部署。</p></div>]]></content>
      
      
      <categories>
          
          <category> ChatGPT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写给未来的自己</title>
      <link href="/2022/11/25/%E5%86%99%E7%BB%99%E6%9C%AA%E6%9D%A5/"/>
      <url>/2022/11/25/%E5%86%99%E7%BB%99%E6%9C%AA%E6%9D%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="感想"><a href="#感想" class="headerlink" title="感想:"></a>感想:</h1><p><strong>学习的过程真的很难</strong>，如何把自己的注意力和时间都用到成长中去，自我感觉，想要做到这点真的很难很难，因为无时无刻都会有事情让我分心，坐的时间太长了，想起来走走，结果去喝点水的时间就看上手机了，然后就被浪费了几十分钟的时间。还是对于自己的成长没有紧迫感，觉得自己的时间还很多。一直都在想把自己的注意力和时间都用到成长中去，但现在找到的各种理由都还不是刚需。<br>我们现在看到所有成功的人，都是因为他们在之前已经做好了充足的准备，所以当机会来临时能够一把抓住。比如现在很火的<strong>内容创业</strong>，需要的是写作能力，所以有写作能力的的可以抓住这次机会。但当机会来的时候，什么才是充足的准备呢？需要现在准备什么技能呢？这个谁都不知道。现在只能不断的提高自己的认知，找准一项技能去磨练。以期望在下次机会到来的时候自己准备的这项能力可以派上用处。<br>自己未来想要过什么样的生活而准备，如果满足未来的生活，需要什么样的能力。只有活在未来，才能现在就开始准备起来。</p><blockquote><p>知道自己未来一定会创业，所以努力去学习营销和管理。<br>知道自己未来想要拥有一份“睡前收入”，所以努力开始留言写作</p></blockquote><p><strong>未来还会继续写作</strong></p>]]></content>
      
      
      <categories>
          
          <category> ONE PIECE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ONE PIECE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心路历程</title>
      <link href="/2022/11/25/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
      <url>/2022/11/25/%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么建站"><a href="#为什么建站" class="headerlink" title="为什么建站?"></a><strong>为什么建站?</strong></h1><p>创建这个站的时候，想要就是能够有一个自己能够<font color=SandyBrown><strong>积累知识、积累兴趣</strong></font>的地方。<font color=pink>在学业之余</font>和他人分享，会让这些成为积累和沉淀。如果能够帮助到更多的人，帮助更多人解决问题，那一定是非常棒的事情。</p><p>与大多数垂直类的技术博客不同，这里的种类会非常的繁杂，有<font color=SandyBrown><strong>技能的教程干货</strong></font>、有<font color=SandyBrown><strong>生活上的吐槽和妙招</strong></font>、有话题上的思考和想法。一般我研究什么、发现了什么都会分享在这里。</p><p>这些就是创造这个小站的本意，<font color=SandyBrown><strong>也是我分享生活的方式</strong></font>。有幸能和你相遇在这里，相信我们能共同留下一段美好<font color=blue><strong>记忆</strong></font>。<br><img src="https://iainixzy-image-1304973859.cos.ap-shanghai.myqcloud.com/%E4%BA%8C%E5%88%BA%E7%8C%BF/%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90/%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90-%E9%9D%99%E6%80%81%E5%A3%81%E7%BA%B8%EF%BC%88%E6%88%AA%E5%9B%BE%EF%BC%89/%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90%E5%A3%81%E7%BA%B83.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 心路历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心路历程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运动健身</title>
      <link href="/2022/11/22/%E5%81%A5%E8%BA%AB/"/>
      <url>/2022/11/22/%E5%81%A5%E8%BA%AB/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>如何高效休息</strong></p><ol><li>大脑疲惫是，更愿意认知低的东西，比如耍手机，这样子只会更累，不如看会天花板，或者瑜伽休息法，放空自己冥想10分钟效果也不错</li><li>补觉30分钟以内，或者一个睡眠周期，最好不午休熬到晚上</li><li>蛋白质分解的色氨酸会转换成褪黑素，加上碳水加速了这个反应，所以中午最好别吃碳水，晚上吃点碳水更好入睡</li><li>调整，光源，温度帮助睡眠黑暗环境 25舒适体感温度醒来冲冲冷水澡睡觉一小时是远离蓝光，一个热水澡，使身体放松更容易入睡</li></ol><p><strong><font color=SandyBrown>这是一篇关于冥想的外文供大家参考:<font><a href="https://www.ncbi.nlm.nih.gov/">https://www.ncbi.nlm.nih.gov/</a></strong></p></blockquote><div class="note no-icon flat"></div><div class="note blue no-icon flat"></div><div class="note pink no-icon flat"></div><div class="note red no-icon flat"></div><div class="note orange no-icon flat"></div><div class="note purple no-icon flat"></div><div class="note green no-icon flat"><p>1111</p></div><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box"><div id="gaodeMap-123.468063-41.807945" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'Amap'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"高德卫星地图":imgm,"高德卫星标注":image};var mymap=L.map('gaodeMap-123.468063-41.807945',{center:[41.807945,123.468063],zoom:16,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['41.807945','123.468063']).addTo(mymap);marker.bindPopup("别来 来了我请你吃好吃的😁！").openPopup();</script>]]></content>
      
      
      
        <tags>
            
            <tag> 健身 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>职场中 vs 体制内不成熟的六大表现对比浅析</title>
      <link href="/2022/11/22/%E8%81%8C%E5%9C%BA/"/>
      <url>/2022/11/22/%E8%81%8C%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>职场跟体制是不同的机构， 职场中不成熟的六大表现跟体制内不成熟的六大表现也是有所不同的，出发点就不一样，这东西所谓仁者见仁智者见智了，正所谓只可意会不可言传，反正就是跟武林高手，绝顶高手一样，要悟。</p><p>下面浅析一下职场中不成熟的六大表现、体制内不成熟的六大表现。</p><p>职场中不成熟的六大表现：</p><p>一、职场人不成熟的第六个特征：远离领导，远离一切有本事的人</p><p>　　有些人不想跟领导接触！不仅是领导，甚至是刻意远离一切有本事的人。</p><p>　　原因无非是三个：</p><p>  一是在交际场合别人都围着他们转，都对他们毕恭毕敬，自己则被当作可有可无的陪衬，伤自尊！不想热脸贴冷屁股！<br>　 二是不屑于对方成功的手段和处世伎俩。<br>　 三是感觉到压力山大，再加上笨嘴拙舌，怕得罪人，怕冷场。<br>　　你将自己封闭在尺蠖可见的生活范围之内，不愿意跟领导去交往，不愿意去巴结有本事的人，别人永远不会了解你、认识你，这样很多时候在职场上的机会和你没有关系。</p><p>　　作为一个职场上积极进取的人，应该去主动地和同事与领导建立良好的沟通和交往关系。</p><p>　　当然，在此之前，你首先要把自己的“底盘”打好，让人知道你有利用价值，让人知道你扶得起来。</p><p>　　譬如你在外贸公司，你就得外语精湛！你在网络公司，就得熟练掌握各种程序的编写和开发！你在金融公司，就得熟谙资本运作和当地的政商关系。</p><p>　　其次，就是学习一些为人处世的技巧了。</p><p>二、职场人不成熟的第四个特征：不愿学习，自以为是，没有归零心态</p><p>　　其实人和动物之间有很多的相似之处，动物的自我保护意识比人更强（婴儿与小猪）。但是，人和动物最大的区别在于，人会学习，人会思考。</p><p>　　人是要不断学习的，你千万不要把你的天赋潜能给埋没了，一定要学习，一定要有一个空杯的心态。我们向谁去学习呢？就是直接向成功人士学习！</p><p>　　你要永远学习积极正面的东西，不看，不听那些消极，负面的东西。去看每一个人的优点，“三人行，必有我师焉”！</p><p>三、职场人不成熟的第五个特征：做事情不靠信念，靠人言</p><p>　　我们说相信是起点，坚持是终点。很多人做事不靠信念，喜欢听别人怎么说。对自己所做的事业，没有100%的信心，相信和信念是两个不同的概念，相信是看得见的，信念是看不见的。</p><p>　　信念是人类的一种态度，但是很多的人他们做事，不靠信念的，而是要听别人怎么说，你要登上山峰，要问那些爬到山顶的人，千万不能问没有爬过山的人。</p><p>　　这里不是说别人的建议不要去听，你可以去参考，但是你要记住，你来做这个生意是为了实现你的梦想，实现你自己的价值。</p><p>　　其他的人是不会关心你的梦想的，只有你自己关心你自己的梦想，只有你自己关心你自己能否真正的成功。这才是最重要的！</p><p>　　只要你的选择是正确的，永远不要在乎别人怎么说。以上是人不成熟的五个特征，你们自己去对照，哪一个特征是你有的，你一定要在最短的时间里改正。</p><p>　　只要你相信你自己能够战胜自己的不成熟，你就会逐渐的成长，成熟起来，你就会得到你想要的那种生活。</p><p>四、职场人不成熟的第一个特征：就是立即要回报</p><p>　　他不懂得只有春天播种，秋天才会收获。很多人在做任何事情的时候，刚刚付出一点点，马上就要得到回报。（学钢琴，学英语等等，刚开始就觉得难，发现不行，立即就要放弃。）</p><p>　　很多人做生意，开始没有什么成绩，就想着要放弃，有的人一个月放弃，有的人三个月放弃，有的人半年放弃，有的人一年放弃。</p><p>　　放弃是一种习惯，一种典型失败者的习惯。所以说你要有眼光，要看得更远一些，眼光是用来看未来的！</p><p>　　对在生活中有放弃习惯的人，有一句话一定要送给你：“成功者永不放弃，放弃者永不成功”。那为什么很多的人做事容易放弃呢？美国著名成功学大师拿破仑希尔说过：</p><p>　　穷人有两个非常典型的心态：<br>　　1、永远对机会说：“不”；2、总想“一夜暴富”。<br>　　今天你把什么机会都放到他的面前，他都会说“不”。就是今天你开饭店很成功，你把你开饭店的成功经验，发自内心的告诉你的亲朋好友，让他们也去开饭店，你能保证他们每个人都会开饭店吗？是不是照样有人不干？</p><p>　　所以这是穷人一个非常典型的心态，他会说：“你行，我可不行！”。一夜暴富的表现在于，你跟他说任何的生意，他的第一个问题就是“挣不挣钱”;</p><p>　　你说“挣钱”，他马上就问第二个问题“容易不容易”，你说“容易”，这时他跟着就问第三个问题“快不快”，你说“快”！这时他就说“好，我做！”呵呵，你看，他就是这么的幼稚！</p><p>　　大家想一想，在这个世界上有没有一种：“又挣钱，又容易，又快的”，没有的，即使有也轮不到我们，所以说在生活中，我们一定要懂得付出。那为什么你要付出呢？</p><p>　　因为你是为了追求你的梦想而付出的，人就是为了希望和梦想活着的，如果一个人没有梦想，没有追求的话，那一辈子也就没有什么意义了！</p><p>　　在生活中你想获得什么，你就得先付出什么。</p><p>　　你想获得时间，你就得先付出时间，你想获得金钱，你得先付出金钱。你想得到爱好，你得先牺牲爱好。你想和家人有更多的时间在一起，你先得和家人少在一起。</p><p>　　但是，有一点是明确的，你在这个项目中的付出，将会得到加倍的回报。就像一粒种子，你把它种下去以后，然后浇水，施肥，锄草，杀虫。最后你收获的是不是几十倍，上百倍的回报。</p><p>　　在生活中，你一定要懂得付出，你不要那么急功近利，马上想得到回报，天下没有白吃的午餐，轻轻松松是不可能成功的。</p><p>　　一定要懂得先付出！</p><p>五、职场人不成熟的第二个特征：就是不自律</p><p>　　不自律的主要表现在哪里呢？</p><p>　　1）不愿改变自己</p><p>　　你要改变自己的思考方式和行为模式。你要改变你的坏习惯。其实，人与人之间能力是没有多大区别，区别在于思考方式的不同。</p><p>　　一件事情的发生，你去问成功者和失败者，他们的回答是不一样的，甚至是相违背的。</p><p>　　我们今天的不成功是因为我们的思考方式不成功。一个好的公式是：当你种植一个思考的种子，你就会有行动的收获，当你把行动种植下去，你会有习惯的收获。</p><p>　　当你再把习惯种植下去，你就会有个性的收获，当你再把个性种植下去，就会决定你的命运。</p><p>　　但是如果你种植的是一个失败的种子，你得到的一定是失败，如果你种植的是一个成功的种子，那么你就一定会成功。</p><p>　　很多人有很多的坏习惯，如：看电视，打麻将，喝酒，泡舞厅，他们也知道这样的习惯不好，但是他们为什么不愿意改变呢？</p><p>　　因为很多人宁愿忍受那些不好的生活方式，也不愿意忍受改变带来的痛苦。</p><p>　　2）愿意背后议论别人</p><p>　　如果在生活中，你喜欢议论别人的话，有一天一定会传回去，中国有一句古话，论人是非者，定是是非人。</p><p>　　3）消极、抱怨</p><p>　　你在生活中喜欢那些人呢？是那些整天愁眉苦脸，整天抱怨这个抱怨哪个的人，还是喜欢那些整天开开心心的人。</p><p>　　如果你在生活中是那些抱怨的，消极的人的话，你一定要改变你性格中的缺陷。如果你不改变的话，你是很难适应这个社会的。你也是很难和别人合作的。</p><p>　　生活当中你要知道，你怎样对待生活，生活也会怎样对待你，你怎样对待别人，别人也会怎样对待你。</p><p>　　所以你不要消极，抱怨。你要积极，永远的积极下去，就是那句话：成功者永不抱怨，抱怨者永不成功。</p><p>六、职场人不成熟的第三个特征：经常被情绪所左右</p><p>　　一个人成功与否，取决于五个因素：</p><p>　　学会控制情绪<br>　　健康的身体<br>　　良好的人际关系<br>　　时间管理<br>　　财务管理<br>　　如果你想成功，一定要学会管理好这五个因素。为什么把情绪放在第一位呢？把健康放在第二位呢？</p><p>　　是因为如果你再强的身体，如果你情绪不好，就会影响到你的身体，现在一个人要成功20%靠的是智商，80%靠的是情商，所以你要控制好你的情绪，情绪对人的影响是非常大的。</p><p>　　人与人之间，不要为了一点点小事情，就暴跳如雷，这样是不好的。所以在生活中，你要养成什么样的心态呢？你要养成“三不”，“三多”：不批评、不抱怨、不指责；多鼓励、多表扬、多赞美。你就会成为一个受社会大众欢迎的人。如果你想让你的伙伴更加的优秀，很简单，永远的激励和赞美他们。</p><p>　　即使他们的确有毛病，那应该怎么办呢？</p><p>　　这时是不是应该给他们建议，在生活中你会发现有这样一个现象，有些人给别人建议的时候，别人能够接受，但是有些人给建议的时候别人就会生气。</p><p>　　其实建议的方式是最重要的，就是“三明治”赞美，建议，再赞美！</p><p>　　想一想，你一天赞美了几个人，有的人可能以为赞美就是吹捧，就是拍马屁。赞美和吹捧是有区别的，赞美有四个特点：</p><p>　　是真诚的<br>　　是发自内心的<br>　　被大众所接受的<br>　　无私的<br>　　如果你带有很强的目的性去赞美，那就是拍马屁。当你赞美别人时候，你要大声的说出来，当你想批评别人的时候，一定要咬住你的舌头！</p><p>体制内不成熟的六大表现：</p><p>1、相信领导画的饼</p><p>每来一位新人，领导都会说：年轻人学历又高，能力又强，一定要好好干，以后前途无量，我们都老了，以后还要靠你们提携，你看那谁谁谁，年纪轻轻都提拔了，还有那谁，才多大都当了领导……一定会把你说的热血沸腾，但实际上他就是为了让你好好干活，你听听就可以了，但千万不要当真！</p><p>2、领导不理我，我也不理他</p><p>你干的好不好，和自己关系不大，而是在于领导认同不认同你，即使领导不理你，你也要主动贴过去，套套近乎，拉拉关系，远离领导对自己只有坏处，没有好处。</p><p>3、因为工作得罪同事</p><p>体制内，你又不用靠业绩挣钱，工作只是其中的一部分，混人才是关键，因为工作而去得罪同事，是非常不值得的，遇见分歧，可以商量，也可以找上级解决，完全不用因为工作把人际关系闹僵。</p><p>4、爱炫耀，表现欲太强</p><p>体制内的人都很低调，无论是领导还是一般职工，那些高调的，爱炫耀的基本都没有好果子吃。日常要以低调为主，工作上也不要过度表现，有时候表现过度会被别人嫉妒，也会被领导认为不够成熟，不能委以大任。</p><p>5、对工作过度热情</p><p>既然选择在体制内工作，就要认识到体制内的特性，工作稳定，收入固定！所以关键是干好自己的本职工作，其他的工作轻易不要插手，不要对工作过度热情，也不要随意揽活，把多余的时间留给家人和生活，这才是你进体制的初衷。</p><p>6、对同事掏心掏肺</p><p>同事只是同事，很难成为朋友，说话一定不要掏心掏肺，说的越多，越被别人了解，越容易被人拿捏，所以逢人只说三分话，未可全抛一片心才是真理！</p><p>最后</p><p>虽然它们是不同的主体，目标，需求也不一样，但是通过上面的比对还是有一定相同相似之处的，</p><p>希望通过上面的对比自己权衡出一个对自己有用的为人处世解决方案！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 励志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个8岁学编程的老外，入行近40年，总结的15条程序员经验宝典</title>
      <link href="/2022/11/22/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E5%A4%A7%E5%B8%88/"/>
      <url>/2022/11/22/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86%E5%A4%A7%E5%B8%88/</url>
      
        <content type="html"><![CDATA[<p>一个8岁学编程的老外，入行近40年，总结的15条程序员经验宝典<br>Noah Gibbs是一名长期的专业软件开发人员，到2024年，他的程序员生涯就要满40年了。</p><p>近日，他发表了一篇长文来分享自己的编程之路，无关编码技巧，无关如何赚钱（尽管他赚到了很多），那么他会分享些什么呢？</p><p>笔者以第一人称的视角，对原文进行了编译整理，以飨读者。</p><p>到2024年，我就将成为一名有40年经验的程序员。这与开发软件赚最多的钱，或者创办一家软件公司不同。我确实赚了很多钱，但这并不是这一切的意义所在。</p><p>我认为你可能想长期做一个软件开发人员，就像有些人长期做音乐家、艺术家或者屋顶工人一样。</p><p>如果不是，你可以在你的浏览器中点击 “返回”。这很酷，无伤大雅。但如果你想成为一个二十年、四十年或者更长时间的程序员，那就听我继续讲下去吧！</p><p>我不会告诉你要学什么语言或框架。如果你擅长基础知识，你可以学习任何你想要的东西。</p><p>在那之前，你可以什么都做不好，反正我就是这么做的。</p><p>相反，我想讨论刚开始时对我没有意义，而现在成为我天空中启明星的那些事，这意味着它不是关于具体的技术。因为技术日新月异，语言来来往往，它们不可能成为你的天空。</p><p>下面，让我们开始第一个话题：</p><p>软件开发很年轻</p><p>计算机语言Fortran的历史可以追溯到1957年。还有其他一些语言也差不多是在同一时期出现的</p><p>（LISP和Algol：1958年，COBOL语言：1959年）和一些奇怪的年老竞争者（Konrad Zuse的Plankalkül，1942年左右。）</p><p>假设从1957年开始就有程序员了，那一共有65年历史。</p><p>我从1998年（24年经验）开始成为一名全职程序员，从1984年（38年经验）开始做一名程序员，可以说非常有经验了。此外，Smalltalk编程语言的发明者Alan Kay，从1963年左右开始成为程序员（59年经验），他是我发现的活跃时间最长的人之一。</p><p>相比之下，天才大提琴家马友友今年66岁，他从4岁半开始就一直在拉大提琴，但他远不是世界上演奏时间最长的音乐大师。《吉尼斯世界纪录大全》记载，Kasper “Stranger”Malone连续80年都有专业的音乐作品发布。因此，一个真正有经验的音乐家的工作时间，甚至比我们整个学科存在的时间还要长15年。所以，我们的领域还很年轻。</p><p>年龄不是问题</p><p>所以，如果我从8岁开始，马友友从4岁半开始，对你来说太晚了吗？并不。</p><p>大约一年前，45岁的我开始认真弹钢琴。我认为自己真的在进步，如果我能够坚持下去，当我60岁的时候，我就会变得非常出色。现在，我已经可以像样地演奏一些歌曲了，所以，当你已经有一些背景和观点时，你会更快地变好。更何况，你已经练习掌握了几十年或者更长时间的技能。</p><p>假设你50岁了，你可能还有30年左右的大好时光成为一名软件开发人员。</p><p>如果你从50岁开始，你在10年后的60岁可能会比我在10年后的18岁要好得多。</p><p>我遇到过的优秀程序员很多都是从20岁、30岁甚至40岁开始工作，你没有什么理由不能从50或60岁开始。虽然这需要时间和努力，但并不意味着你要从小开始。不过，这也意味着你的编程可能不会那么厉害。就像我弹钢琴不会像马友友拉大提琴那样好，我在编程方面不会像Alan Kay那样出色，尽管我很小就开始编程。实际上，几乎所有其他拉大提琴的人都比不上马友友，但这并没有阻止他们投入到大提琴事业中。就像我喜欢弹钢琴，即使我从来没有进入到世界前十名。</p><p>我仍然喜欢编写软件，但我成为下一个Alan Kay的几率基本为零，因为他在我这个年龄已经写出了Smalltalk。如果你从事软件工作，“不做Alan Kay也没关系 ”的想法是必要的。</p><p>顺序不是决定性的</p><p>如果你刚刚开始编程生涯并且想长期做下去，我经常说“只要写一些软件，任何软件都可以”。</p><p>你需要学习很多不同的东西，以什么顺序学习它们并不是什么大问题。</p><p>40年来，很多趋势来来去去。桌面应用、移动应用、操作系统和系统、网络编程，我都学习过。</p><p>当然，你所学的列表会有所不同，但它将涵盖多种编程。只要你尝试不同的东西，你做它们的顺序并不重要。当然，“尝试不同的东西”是关键。你在四个不同的领域各花十年的时间，会比你花40年的时间写网络套接字服务器要好得多。并不是说40年的深度没有价值。深度绝对有价值，所以你也不应该在四十个不同的领域各做一年。</p><p>但你要注意别太刻板。事实证明，几乎任何学科都可以教给你一些东西。如果你不知变通学不来，那你就失去了机会。尝试不同类型的编程，用任何顺序都可以，但同时你应该在某些方面下功夫并变得更好。</p><p>现在还为时过早</p><p>很多人会觉得自己学的东西没用，但我认为，没用是相对的。</p><p>我把多年的业余时间投入到一种叫做DGD的旧MUD编程语言中，几乎所有关于它的东西都是奇怪的和不标准的，而且很少有真正实用的东西。然而，正是因为它很奇怪，所以它教会了我很多东西。</p><p>它教会了我Ruby on Rails后来使用的东西，它还教会了我有关数据库编程的知识，尽管它没有使用数据库！我从中学到的这些东西，在我后来学习的五六种编程语言中都起了很大的作用。</p><p>有趣的是，许多年后我得到了一份DGD的咨询工作。</p><p>要知道，世界上没有多少DGD工作，但我有一个！这比我学过的很多 “实用 “语言更实用。</p><p>我经常对自己说 “现在还早”。虽然我已经46岁了，但我还没到96岁，我至少还有20年甚至50年的时间。所以，如果我做一些奇怪的事，但它教给我有趣的东西，那真的很好。如果我做一些实际的事，让我在短期内度过难关，那也是好事。</p><p>但重要的是：</p><p>一定要继续工作。作为一个程序员，要想做到二十年、四十年或者七十年，需要大量的工作。</p><p>如果两件工作难以取舍，可能它们都很好，任何一件都会是一个好的选择。</p><p>否则只能说明它们都很糟糕，你应该找一些有价值的东西来代替。</p><p>现在还早，学习一些有趣或有用的东西，给予它时间来收获好处。</p><p>但你需要期待的是十年、二十年或三十年后的回报，不要总是选择十八个月后最好的东西，因为你真的看不到未来会发生什么。</p><p>确保工作是好的</p><p>你开始编写软件一定是因为它吸引到了你。它的某些部分是好的，否则你也不会费心费力了。</p><p>试着弄清楚那是什么。你喜欢什么？是什么吸引了你？它有什么好的地方？这对每个人来说都是不一样的。</p><p>我喜欢有成就感和聪明的感觉。这不是我工作中最好的做法，但我在家里经常这样做。</p><p>我不需要每个人都看到它，我可以只靠自己的聪明才智做好工作。我也喜欢做一些和自己工作不同的事情，即使我在两个地方都写代码。我还喜欢写一些其他程序员可以使用和欣赏的东西。</p><p>你的理由也许和我不一样，但我想说的是，工作很好，如果它不好你也做不下去。</p><p>如果它不再好，那就是紧急情况：你需要休假，或重新找到你喜欢的东西等。</p><p>因为如果你的工作不再让你感觉良好，你会很快精疲力竭。工作是好的，如果不是，那就改变工作。</p><p>这些都不一定意味着这份工作是好的，或者换工作，但是你需要在你的工作中获得足够的好处让自己继续下去。不管怎样，坚持下去是一种要求，所以这可能也会影响你的工作。</p><p>别把计划看得太重</p><p>你很容易下定决心“成为一名计算机程序员”，甚至为此制定一个包含56个要点的八部分计划来说明自己将如何去做。我不会告诉你不要激动，因为如果你不能兴奋起来，那又何必费力呢？</p><p>但我想说：不要把计划看得太重。</p><p>当我在卡内基梅隆大学读书时，我经常在计算机实验室闲逛。</p><p>因为计算机很棒，而我没有任何社交技能，所以我早早就开始编写软件并且一直在工作。</p><p>但我渐渐发现，自己的生活中不能只有工作，最终我联系朋友，娶妻生子。</p><p>我领悟到，即使有一份好工作，情感上的僵化和压抑也不会让你走得太远。</p><p>在某些时候，你会停止打算，因为你不可能通过打算和计划来做所有事情。</p><p>在某些时候，你并没有“脱离任务”，你只是在“生活”。</p><p>学习编写软件不是计划好的任务，因为你不是在短跑或跑马拉松。</p><p>相反，你正在写日记。也许十年后，你会翻开它说，“哇，我做了一些很酷的事情？</p><p>”或者“我对Java语法很在行。”</p><p>不要混淆工作和职业</p><p>虽然我也期待着能够退休，但我不会停止工作，我也不会为了钱去做我不喜欢的工作，特别是如果它不能教给我什么了不起的东西。我目前在YJIT（用于Ruby的JIT编译器）上的工作充满了我愿意免费写的代码，但如果我没有得到报酬，我就永远不会碰费用报告，也很少写状态更新。他们会少做很多系统管理员的工作或Git历史修剪。所以，不要把工作和你的事业混为一谈。它们不是一回事。</p><p>编写软件是一项了不起的工作，它也是一个不错的职业。就像我经常谈论的音乐家，有些人通过写作和演奏音乐获得报酬，但很多音乐家从来没得到报酬还一直在坚持。</p><p>如果你能得到报酬，那你可能会在工作上花更多时间。但工作就是工作，而职业则是为你的工作扫清道路。对我来说，编写软件就是我的职业。不过，最重要的是，要分辨出你在任何时间得到的是哪种建议。你会得到关于工作的建议、你也会得到关于职业的建议。如果你把两者混淆，那么这些建议就没有什么意义了。</p><p>没有明确的级别</p><p>如果你学习的顺序并不重要，那么就没有所谓的“第一级”或“第二级”等级别，你会得到关于先学什么语言或技术不同的不同建议。</p><p>但是，如果你开辟了自己的道路，这并不意味着你没有做好基础工作，你就很糟糕。</p><p>最终，如果有些东西是重要的，你会发现你需要它，还会重新回到它身上。</p><p>可怕的是，有人会年复一年地忽略一些基本的东西，那就会变得很糟糕。</p><p>比如，你可以写15年可怕的意大利面条代码，其中每个模块都可以进入其他模块并直接设置对方的变量。如果你继续尝试，你要么会弄清楚为什么这样不好，要么会发明一种新的方法来解决问题，并在一些奇怪的事情上表现出色。通常，一个程序员的“新范例”，在其他程序员眼里总是“奇怪的东西”。</p><p>问题是当你不再努力变得更好时。如果你不断地犯新的错误，你就会学到有用的、美丽的或奇异的东西。如果你继续做同样的事情而不尝试改进，那么当然，你会一直很糟糕。</p><p>即使你按部就班地通过某人预设的关卡，结果也是如此。</p><p>李小龙说：“我不害怕练过一万种脚法的人，但那个将一种脚法练了一万次的人，我怕他。”由此可见，诀窍在于关心和改进。如果你坚持足够长的时间，你可以专注于一件事、十件事，甚至一百件事。如果你真的足够努力，你甚至可以管理一万件事。</p><p>你变得越好，你就越与众不同</p><p>职业生涯早期的培训（代码学校、博客文章、大学课程、书籍）往往感觉有点像一条流水线。</p><p>有一堆真正的基本技能，例如写函数、调试、估算、与团队交谈，他们试图确保你在每一个方面都具备基本的能力。这让人们很容易以为，比如对于一个首席工程师来说，有一个你需要的技能清单，但清单上有更多的技能而且水平必须更高。但事实并非如此。这不仅仅是工作水平，它也是开源中的“水平”，尊重的水平。</p><p>你可以通过把一段相当简单的代码，写出（用英语，给人类）大量的细节而备受尊重，就像Patrick McKenzie写的Bingo Card Creator一样；你可以通过写一些真正有利可图的东西来获得尊重，就像一个公司的创始人；或者写一些深奥复杂的东西，比如一种晦涩的语言（Haskell）。除了基本能力之外，这些途径几乎没有任何共同之处。</p><p>你需要真正擅长某件事，而这件事需要受欢迎或有利可图，或者以其他方式“成功”。</p><p>这听起来应该很模糊，因为事实就是如此，这也是主观的。如果你打算赚比尔·盖茨级别的软件钱，</p><p>结果你写了Haskell（复杂、深刻、广受好评，但没那么赚钱），那你就太失败了，反之亦然。</p><p>这就是为什么问“我是一个有15年经验的软件工程师，通常工资是多少？” </p><p>这样的问题很愚蠢。15年的经验太多，所以你应该完全不同于其他同样有15年经验的工程师。</p><p>你写书了吗？有做一个赚钱的大项目吗？还是创建了一个有趣的开源项目？你用这15年做了什么？这就像说“我是一个有二十年经验的音乐家，我每小时应该收费多少？” </p><p>这个问题没有简单的答案，也不应该有。</p><p>这也不仅仅是薪水的问题。你可以问：“我是一个有15年经验的软件工程师，这意味着我有能力领导这个项目，对吗？”答案当然是“也许”，接下来的问题是“在那十五年里你做了什么？”</p><p>通过基础工作来学习深层原理</p><p>我不建议大家一开始就去学习软件设计的深层原理。因为如果你试图把它们作为理论来学习而没有实践经验，你肯定会做错。我建议首先要学会用某种实际的语言构建一个可用的软件，哪种都可以。只有经历过一些真正的错误，然后我们才能讨论有什么理论可以解决你个人遇到的问题。</p><p>如果事实证明你在模块化方面很出色，那就太好了！我们可以讨论你其他方面的问题。</p><p>如果你没有关心的问题，那就意味着你可以暂时构建相同级别的软件。</p><p>这一切都由你决定，当你开始觉得工作变得乏味时，那么你确实遇到了问题，所以你可以寻找一个解决方案。在那之前，做对你有用的事。 </p><p>接着，在20多年的时间里做同样的循环：</p><p>构建、犯错、学习理论，修正错误。我并不在意你做这一切的顺序。而这是否意味着如果你先学习理论，你就会一直做不好？这倒不至于，但在你能正确使用你所学的东西之前，那还需要一段时间。所以，这不是构建好软件的最快方法。</p><p>了解相关技术很重要</p><p>我已经说过很多遍，以什么顺序学习什么技术并不重要。重要的是，你要学习一些不同的东西。</p><p>如果你总是做一件事，你不知道自己会养成什么坏习惯。</p><p>如果你总是在一台机器上编码，你就不知道自己有多少网络知识没有学到，而最终网络可能是重要的。</p><p>如果你只在web服务器上工作，而从不在手机或应用程序代码上工作，你永远不会知道为什么“在我的机器上工作”是如此糟糕。</p><p>你可以做一件事很长一段时间，五年？十年？但如果你想做到40年，你就需要了解自己软件所涉及的许多其他技术，要有一点洞察力。</p><p>洞察力就像其他深层原理一样，你通过工作和看到现实世界的问题来获得它。</p><p>而你通过各种工作来获得它，这样你就能看到不止一个观点。</p><p>当你说 “好吧，我的部分起作用了”，但整个系统因为其他人的部分不起作用而失败时，你会意识到自己的观点有问题。你学会关心比自己的代码更重要的事情，这就变成了软件架构，但也变成了观点和同理心。一个真正有用的软件系统有很多软件，同样也有很多人参与，你不能忽视这些人。</p><p>这意味着你要学习各种技术，以及各种非技术技能。你使用什么技术很重要的另一个原因是，一些语言或库会让你在特定的技能方面做得更好。</p><p>如果你想在编程领域工作40年，你将需要扎实的基础技能。</p><p>关注其他领域，向其他领域学习</p><p>如果我们的行业很年轻，这意味着我们仍在摸索基本的东西。</p><p>当我在大学的时候，从1993年到1998年，测试优先和测试驱动开发还不是真正的东西。敏捷也不是一个真正的东西。这些方法是存在的，但并不流行，也不为人所知，更没有很好的发展。源码控制存在，但不是很好，没有被广泛使用。开放源码是存在的，但人们普遍认为开放源码意味着粗糙的软件。</p><p>认为Linux是或可能是最好的服务器操作系统的想法是一件奇怪的事情，但一些狂热者可能会相信。</p><p>对于速度密集型应用来说，C语言是否足够快以取代汇编语言还没有定论。最终，“GOTO”被认为是不好的，我们应该避免它。网络刚刚起步，在我上学期间它开始支持网页上的图片。</p><p>我们这个行业的变化相当快。换句话说，我们在基础方面仍然无能为力。</p><p>你可以从其他领域学到很多东西，比如我写了一本关于如何窃取艺术家实践方法的书。</p><p>所以我在这里一直在谈论音乐家。艺术和音乐是古老的学科，他们有几千年的领先优势。</p><p>所以，如果你遇到一个问题，不要局限于学习计算机程序员处理它的最佳方式，最好想想其他任何人会如何处理这个问题。这也意味着，如果你有一些其他的兴趣爱好，你或许应该考虑一下它们会给你带来哪些实用技能。</p><p>程序员是逆反的</p><p>如果你从其他领域学习，它会让你变得很奇怪。虽然大多数情况下这是好事，但有时也会引起摩擦。</p><p>例如，艺术家、音乐家和作家都知道，如果你一遍又一遍地重复同样的活动，你会变得很擅长。我们在软件中也为它取了一个名字：“重新发明轮子”。这被视为一件坏事，我们羞于启齿，私下行事。我们想办法让计算机做所有的重复工作，这样我们就可以只做新的工作。</p><p>事实上，在公共场合说你一遍又一遍地做同样的事情非常尴尬，甚至还会损害你的名誉。</p><p>这就是为什么我们大多数人都不擅长开始新项目、不能谈论何时使用一种或另一种句法结构，以及为什么我们表现得好像机器应该强制执行关于缩进的一目了然的规则，好像有一个简单、正确的方式来做到这一点。因为你建立这些技能的方式是重复，随着时间的推移变得更好，相信表达能力，并与其他人交流。作为一个行业，这些都是我们鄙视的东西。</p><p>这是否意味着你个人需要在这些事情上做的不好？</p><p>答案是否定的。你没法让所有人都变得更好，但你个人可以做一些“不好的做法”，但实际上会让自己变得更好的事。你可以重新发明轮子，可以重复写同样的东西，也可以用“不好”的方式编写代码，看看会发生什么。要注意的是，小心最佳实践。它们意味着别人做了工作来思考它，并变得更聪明，而你只是在使用他们想出的最简单的东西。这在开始时很好，但作为一种改进的方式，这很糟糕。</p><p>你要明白，如果你向艺术家、图书馆员和厨师学习，你就不能轻易地把软件世界的其他人也拉进来。</p><p>仅仅因为你是对的，并不意味着你能说服他们。你的正确方法甚至可能需要他们不具备的技能。 </p><p>但是如果你不在乎周围人的想法，你会变得更好，你不必告诉别人自己是怎么做到的。</p><p>出于同样的原因，要小心使用工具和执行。它们的设计是为了保持最低水平的能力，而不是为了让你真正擅长一些不寻常的事情而设计的，而你想在一些不寻常的事情上变得真正优秀。</p><p>谨慎对待生产力技巧</p><p>人们会告诉你，变得更好的诀窍是不断地工作。他们会说，诀窍是每天进步一点，然后成倍增长。</p><p>但我认为，这个建议的陷阱就在这里：</p><p>大多数时候，练习并不会让你变得更好。每隔一段时间，它就会使你的成绩有一个巨大的飞跃。</p><p>但一些巨大的跳跃会使你在其他几件事上变得更糟。如果你期望每年都有20%的持续改善，每月复利，这会让人感觉很糟糕。</p><p>效率只会让你走到这一步，许多这样的过程效率极低，而且完全不可靠。</p><p>虽然有时它们会带来巨大的收益，但往往是什么都没有，甚至它们偶尔对你造成的伤害比帮助更大。</p><p>漂亮整洁的生产力和效率建议，通常是针对你很了解，结构良好的任务，40年的编程生涯并不是那种任务。</p><p>再次强调：想想日记，而不是马拉松或短跑。试图为自己保留一个进度条会很糟糕。</p><p>随着时间的推移，你会学会小心任何过于整洁的东西。</p><p>效率总是某种特定类型的效率，省时的方法可能不省钱，效率是指你如何完善一个已经到位并运作良好的策略。我很少谈论效率技巧，也并不是在告诉你做这些事情的最快方法，因为基本上最精心优化的方法也是最脆弱的。效率没问题，优化是好的。一旦你有了基本的工作，它可以提供额外的一点帮助。</p><p>最困难的部分是让基础发挥作用，这也是我要告诉你的大部分内容，事后保持高效就不那么重要，也更容易。</p><p>坚持才是最重要的 </p><p>以上这些都是对我来说都是非常好的事情，大部分是为了让你消除疑虑，而不是改变你的方法。</p><p>如果你编写程序，你就是程序员，或者编码员，或者软件工程师，或者任何你喜欢的称呼。</p><p>如果你坚持写程序，你可以成为一名多年的程序员。无论如何，只要你坚持不懈，管理自己的期望；</p><p>当你犯错误时，你会注意到并纠正它们；你要注意别太刻板，试着享受这份工作。</p><p>剩下的就是时间，也许还有一点保持成熟。</p><p>在你意识到之前，40年不知不觉就过去了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 励志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于unipush中配置iOS推送证书的三言两语</title>
      <link href="/2022/05/26/test/"/>
      <url>/2022/05/26/test/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于 IOS 的推送证书，本来想并到 <a href="https://tzy1997.com/articles/io0411sc/">iOS证书(.p12)和描述文件(.mobileprovision)申请</a>一文中，但由于后面会讲到如何在<code>uni-app</code>中用<code>unipush</code>实现苹果端的推送功能，这一步十分关键，所以还是单独拎出来说明如何制作推送证书，以及要注意的几个地方。</p><h2 id="生成请求文件"><a href="#生成请求文件" class="headerlink" title="生成请求文件"></a>生成请求文件</h2><h2 id="申请苹果-App-ID-（App的唯一标识）"><a href="#申请苹果-App-ID-（App的唯一标识）" class="headerlink" title="申请苹果 App ID （App的唯一标识）"></a>申请苹果 App ID （App的唯一标识）</h2>]]></content>
      
      
      <categories>
          
          <category> 🎁江湖丛谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识python</title>
      <link href="/2021/07/02/01.%E5%88%9D%E8%AF%86Python/"/>
      <url>/2021/07/02/01.%E5%88%9D%E8%AF%86Python/</url>
      
        <content type="html"><![CDATA[<h2 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识<strong>Python</strong></h2><h3 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h3><h4 id="Python的历史"><a href="#Python的历史" class="headerlink" title="Python的历史"></a>Python的历史</h4><ol><li>1989年圣诞节：Guido von Rossum开始写Python语言的编译器。</li><li>1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，还有对列表、字典等核心数据类型，同时支持以模块为基础来构造应用程序。</li><li>1994年1月：Python 1.0正式发布。</li><li>2000年10月16日：Python 2.0发布，增加了完整的<a href="https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8">垃圾回收</a>)，提供了对<a href="https://zh.wikipedia.org/wiki/Unicode">Unicode</a>的支持。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。</li><li>2008年12月3日：Python 3.0发布，它并不完全兼容之前的Python代码，不过因为目前还有不少公司在项目和运维中使用Python 2.x版本，所以Python 3.x的很多新特性后来也被移植到Python 2.6/2.7版本中。</li></ol><p>目前我使用的Python 3.7.x的版本是在2018年发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（例如：修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以阅读名为<a href="http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html">《Python简史》</a>的网络文章。</p><h4 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a>Python的优缺点</h4><p>Python的优点很多，简单的可以总结为以下几点。</p><ol><li>简单明了，学习曲线低，比很多编程语言都容易上手。</li><li>开放源代码，拥有强大的社区和生态圈，尤其是在数据分析和机器学习领域。</li><li>解释型语言，天生具有平台可移植性，代码可以工作于不同的操作系统。</li><li>对两种主流的编程范式（面向对象编程和函数式编程）都提供了支持。</li><li>代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。</li></ol><p>Python的缺点主要集中在以下几点。</p><ol><li>执行效率稍低，对执行效率要求高的部分可以由其他语言（如：C、C++）编写。</li><li>代码无法加密，但是现在很多公司都不销售卖软件而是销售服务，这个问题会被弱化。</li><li>在开发时可以选择的框架太多（如Web框架就有100多个），有选择的地方就有错误。</li></ol><h4 id="Python的应用领域"><a href="#Python的应用领域" class="headerlink" title="Python的应用领域"></a>Python的应用领域</h4><p>目前Python在Web应用后端开发、云基础设施建设、DevOps、网络数据采集（爬虫）、自动化测试、数据分析、机器学习等领域都有着广泛的应用。</p><h3 id="安装Python解释器"><a href="#安装Python解释器" class="headerlink" title="安装Python解释器"></a>安装Python解释器</h3><p>想要开始Python编程之旅，首先得在自己使用的计算机上安装Python解释器环境，下面将以安装官方的Python解释器为例，讲解如何在不同的操作系统上安装Python环境。官方的Python解释器是用C语言实现的，也是使用最为广泛的Python解释器，通常称之为CPython。除此之外，Python解释器还有Java语言实现的Jython、C#语言实现的IronPython以及PyPy、Brython、Pyston等版本，有兴趣的读者可以自行了解。</p><h4 id="Windows环境"><a href="#Windows环境" class="headerlink" title="Windows环境"></a>Windows环境</h4><p>可以在<a href="https://www.python.org">Python官方网站</a>下载到Python的Windows安装程序（exe文件），需要注意的是如果在Windows 7环境下安装Python 3.x，需要先安装Service Pack 1补丁包（可以通过一些工具软件自动安装系统补丁的功能来安装），安装过程建议勾选“Add Python 3.x to PATH”（将Python 3.x添加到PATH环境变量）并选择自定义安装，在设置“Optional Features”界面最好将“pip”、“tcl/tk”、“Python test suite”等项全部勾选上。强烈建议选择自定义的安装路径并保证路径中没有中文。安装完成会看到“Setup was successful”的提示。如果稍后运行Python程序时，出现因为缺失一些动态链接库文件而导致Python解释器无法工作的问题，可以按照下面的方法加以解决。</p><p>如果系统显示api-ms-win-crt*.dll文件缺失，可以参照<a href="https://zhuanlan.zhihu.com/p/32087135">《api-ms-win-crt*.dll缺失原因分析和解决方法》</a>一文讲解的方法进行处理或者直接在<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=48145">微软官网</a>下载Visual C++ Redistributable for Visual Studio 2015文件进行修复；如果是因为更新Windows的DirectX之后导致某些动态链接库文件缺失问题，可以下载一个<a href="https://dl.pconline.com.cn/download/360074-1.html">DirectX修复工具</a>进行修复。</p><h4 id="Linux环境"><a href="#Linux环境" class="headerlink" title="Linux环境"></a>Linux环境</h4><p>Linux环境自带了Python 2.x版本，但是如果要更新到3.x的版本，可以在<a href="https://www.python.org">Python的官方网站</a>下载Python的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示（以CentOS为例）。</p><ol><li>安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</span><br></pre></td></tr></table></figure><ol><li>下载Python源代码并解压缩到指定目录。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz</span><br><span class="line">xz -d Python-3.7.6.tar.xz</span><br><span class="line">tar -xvf Python-3.7.6.tar</span><br></pre></td></tr></table></figure><ol><li>切换至Python源代码目录并执行下面的命令进行配置和安装。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.7.6</span><br><span class="line">./configure --prefix=/usr/local/python37 --enable-optimizations</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol><li>修改用户主目录下名为.bash_profile的文件，配置PATH环境变量并使其生效。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">vim .bash_profile</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">... 此处省略上面的代码 ...</span></span><br><span class="line"></span><br><span class="line">export PATH=$PATH:/usr/local/python37/bin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">... 此处省略下面的代码 ...</span></span><br></pre></td></tr></table></figure><ol><li>激活环境变量。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure><h4 id="macOS环境"><a href="#macOS环境" class="headerlink" title="macOS环境"></a>macOS环境</h4><p>macOS也自带了Python 2.x版本，可以通过<a href="https://www.python.org">Python的官方网站</a>提供的安装文件（pkg文件）安装Python 3.x的版本。默认安装完成后，可以通过在终端执行<code>python</code>命令来启动2.x版本的Python解释器，启动3.x版本的Python解释器需要执行<code>python3</code>命令。</p><h3 id="运行Python程序"><a href="#运行Python程序" class="headerlink" title="运行Python程序"></a>运行Python程序</h3><h4 id="确认Python的版本"><a href="#确认Python的版本" class="headerlink" title="确认Python的版本"></a>确认Python的版本</h4><p>可以Windows的命令行提示符中键入下面的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure><p>在Linux或macOS系统的终端中键入下面的命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure><p>当然也可以先输入<code>python</code>或<code>python3</code>进入交互式环境，再执行以下的代码检查Python的版本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sys.version_info)</span><br><span class="line"><span class="built_in">print</span>(sys.version)</span><br></pre></td></tr></table></figure><h4 id="编写Python源代码"><a href="#编写Python源代码" class="headerlink" title="编写Python源代码"></a>编写Python源代码</h4><p>可以用文本编辑工具（推荐使用<a href="https://www.sublimetext.com/">Sublime</a>、<a href="https://code.visualstudio.com/">Visual Studio Code</a>等高级文本编辑工具）编写Python源代码并用py作为后缀名保存该文件，代码内容如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><p>切换到源代码所在的目录并执行下面的命令，看看屏幕上是否输出了”hello, world!”。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python hello.py</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 hello.py</span><br></pre></td></tr></table></figure><h4 id="代码中的注释"><a href="#代码中的注释" class="headerlink" title="代码中的注释"></a>代码中的注释</h4><p>注释是编程语言的一个重要组成部分，用于在源代码中解释代码的作用从而增强程序的可读性和可维护性，当然也可以将源代码中不需要参与运行的代码段通过注释来去掉，这一点在调试程序的时候经常用到。注释在随源代码进入预处理器或编译时会被移除，不会在目标代码中保留也不会影响程序的执行结果。</p><ol><li>单行注释 - 以#和空格开头的部分</li><li>多行注释 - 三个引号开头，三个引号结尾</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">第一个Python程序 - hello, world!</span></span><br><span class="line"><span class="string">向伟大的Dennis M. Ritchie先生致敬</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br><span class="line"><span class="comment"># print(&quot;你好, 世界！&quot;)</span></span><br></pre></td></tr></table></figure><h3 id="Python开发工具"><a href="#Python开发工具" class="headerlink" title="Python开发工具"></a>Python开发工具</h3><h4 id="IDLE-自带的集成开发工具"><a href="#IDLE-自带的集成开发工具" class="headerlink" title="IDLE - 自带的集成开发工具"></a>IDLE - 自带的集成开发工具</h4><p>IDLE是安装Python环境时自带的集成开发工具，如下图所示。但是由于IDLE的用户体验并不是那么好所以很少在实际开发中被采用。</p><p><img src="./res/python-idle.png" alt=""></p><h4 id="IPython-更好的交互式编程工具"><a href="#IPython-更好的交互式编程工具" class="headerlink" title="IPython - 更好的交互式编程工具"></a>IPython - 更好的交互式编程工具</h4><p>IPython是一种基于Python的交互式解释器。相较于原生的Python交互式环境，IPython提供了更为强大的编辑和交互功能。可以通过Python的包管理工具pip安装IPython，具体的操作如下所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install ipython</span><br></pre></td></tr></table></figure><p>安装成功后，可以通过下面的ipython命令启动IPython，如下图所示。</p><p><img src="./res/python-ipython.png" alt=""></p><h4 id="Sublime-Text-高级文本编辑器"><a href="#Sublime-Text-高级文本编辑器" class="headerlink" title="Sublime Text - 高级文本编辑器"></a>Sublime Text - 高级文本编辑器</h4><p><img src="./res/python-sublime.png" alt=""></p><ul><li><p>首先可以通过<a href="https://www.sublimetext.com/">官方网站</a>下载安装程序安装Sublime Text 3或Sublime Text 2。</p></li><li><p>安装包管理工具。</p><ol><li>通过快捷键Ctrl+`或者在View菜单中选择Show Console打开控制台，输入下面的代码。</li></ol><ul><li>Sublime 3</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  urllib.request,os;pf=<span class="string">&#x27;Package Control.sublime-package&#x27;</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));<span class="built_in">open</span>(os.path.join(ipp,pf),<span class="string">&#x27;wb&#x27;</span>).write(urllib.request.urlopen(<span class="string">&#x27;http://sublime.wbond.net/&#x27;</span>+pf.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;%20&#x27;</span>)).read())</span><br></pre></td></tr></table></figure><ul><li>Sublime 2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  urllib2,os;pf=<span class="string">&#x27;Package Control.sublime-package&#x27;</span>;ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));<span class="built_in">open</span>(os.path.join(ipp,pf),<span class="string">&#x27;wb&#x27;</span>).write(urllib2.urlopen(<span class="string">&#x27;http://sublime.wbond.net/&#x27;</span>+pf.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;%20&#x27;</span>)).read());<span class="built_in">print</span>(<span class="string">&#x27;Please restart Sublime Text to finish installation&#x27;</span>)</span><br></pre></td></tr></table></figure><ol><li>在浏览器中输入  <a href="https://sublime.wbond.net/Package%20Control.sublime-package">https://sublime.wbond.net/Package%20Control.sublime-package</a> 下载包管理工具的安装包，并找到安装Sublime目录下名为&quot;Installed Packages&quot;的目录，把刚才下载的文件放到这个文件加下，然后重启Sublime Text就搞定了。</li></ol></li></ul><ul><li><p>安装插件。通过Preference菜单的Package Control或快捷键Ctrl+Shift+P打开命令面板，在面板中输入Install Package就可以找到安装插件的工具，然后再查找需要的插件。我们推荐大家安装以下几个插件：</p><ul><li>SublimeCodeIntel - 代码自动补全工具插件。</li><li>Emmet - 前端开发代码模板插件。</li><li>Git - 版本控制工具插件。</li><li>Python PEP8 Autoformat - PEP8规范自动格式化插件。</li><li>ConvertToUTF8 - 将本地编码转换为UTF-8。</li></ul></li></ul><blockquote><p><strong>说明</strong>：事实上<a href="https://code.visualstudio.com/">Visual Studio Code</a>可能是更好的选择，它不用花钱并提供了更为完整和强大的功能，有兴趣的读者可以自行研究。</p></blockquote><h4 id="PyCharm-Python开发神器"><a href="#PyCharm-Python开发神器" class="headerlink" title="PyCharm - Python开发神器"></a>PyCharm - Python开发神器</h4><p>PyCharm的安装、配置和使用在<a href="../番外篇/玩转PyCharm.md">《玩转PyCharm》</a>进行了介绍，有兴趣的读者可以选择阅读。</p><p><img src="./res/python-pycharm.png" alt=""></p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ol><li><p>在Python交互式环境中输入下面的代码并查看结果，请尝试将看到的内容翻译成中文。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> this</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：输入上面的代码，在Python的交互式环境中可以看到Tim Peter撰写的<a href="../Python之禅.md">“Python之禅”</a>，里面讲述的道理不仅仅适用于Python，也适用于其他编程语言。</p></blockquote></li><li><p>学习使用turtle在屏幕上绘制图形。</p><blockquote><p><strong>说明</strong>：turtle是Python内置的一个非常有趣的模块，特别适合对计算机程序设计进行初体验的小伙伴，它最早是Logo语言的一部分，Logo语言是Wally Feurzig和Seymour Papert在1966发明的编程语言。</p></blockquote> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line">turtle.pensize(<span class="number">4</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line"></span><br><span class="line">turtle.forward(<span class="number">100</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.forward(<span class="number">100</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.forward(<span class="number">100</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.forward(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示</strong>：本章提供的代码中还有画国旗和画小猪佩奇的代码，有兴趣的读者请自行研究。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语言元素</title>
      <link href="/2021/07/02/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/"/>
      <url>/2021/07/02/02.%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="语言元素"><a href="#语言元素" class="headerlink" title="语言元素"></a>语言元素</h2><h4 id="指令和程序"><a href="#指令和程序" class="headerlink" title="指令和程序"></a>指令和程序</h4><p>计算机的硬件系统通常由五大部件构成，包括：运算器、控制器、存储器、输入设备和输出设备。其中，运算器和控制器放在一起就是我们通常所说的中央处理器，它的功能是执行各种运算和控制指令以及处理计算机软件中的数据。我们通常所说的程序实际上就是指令的集合，我们程序就是将一系列的指令按照某种方式组织到一起，然后通过这些指令去控制计算机做我们想让它做的事情。今天我们大多数时候使用的计算机，虽然它们的元器件做工越来越精密，处理能力越来越强大，但究其本质来说仍然属于<a href="https://zh.wikipedia.org/wiki/%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC%E7%BB%93%E6%9E%84">“冯·诺依曼结构”</a>的计算机。“冯·诺依曼结构”有两个关键点，一是指出要将存储设备与中央处理器分开，二是提出了将数据以二进制方式编码。二进制是一种“逢二进一”的计数法，跟我们人类使用的“逢十进一”的计数法没有实质性的区别，人类因为有十根手指所以使用了十进制（因为在数数时十根手指用完之后就只能进位了，当然凡事都有例外，玛雅人可能是因为长年光着脚的原因把脚趾头也算上了，于是他们使用了二十进制的计数法，在这种计数法的指导下玛雅人的历法就与我们平常使用的历法不一样，而按照玛雅人的历法，2012年是上一个所谓的“太阳纪”的最后一年，而2013年则是新的“太阳纪”的开始，后来这件事情被以讹传讹的方式误传为”2012年是玛雅人预言的世界末日“这种荒诞的说法，今天我们可以大胆的猜测，玛雅文明之所以发展缓慢估计也与使用了二十进制有关）。对于计算机来说，二进制在物理器件上来说是最容易实现的（高电压表示1，低电压表示0），于是在“冯·诺依曼结构”的计算机都使用了二进制。虽然我们并不需要每个程序员都能够使用二进制的思维方式来工作，但是了解二进制以及它与我们生活中的十进制之间的转换关系，以及二进制与八进制和十六进制的转换关系还是有必要的。如果你对这一点不熟悉，可以自行使用<a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E8%BF%9B%E5%88%B6">维基百科</a>或者<a href="https://baike.baidu.com">百度百科</a>科普一下。</p><blockquote><p><strong>说明</strong>：近期关于<strong>量子计算机</strong>的研究已经被推倒了风口浪尖，量子计算机基于量子力学进行运算，使用量子瞬移的方式来传递信息。2018年6月，Intel宣布开发出新款量子芯片并通过了在接近绝对零度环境下的测试；2019年，IBM和Google都推出了自己的量子计算机。</p></blockquote><h3 id="变量和类型"><a href="#变量和类型" class="headerlink" title="变量和类型"></a>变量和类型</h3><p>在程序设计中，变量是一种存储数据的载体。计算机中的变量是实际存在的数据或者说是存储器中存储数据的一块内存空间，变量的值可以被读取和修改，这是所有计算和控制的基础。计算机能处理的数据有很多种类型，除了数值之外还可以处理文本、图形、音频、视频等各种各样的数据，那么不同的数据就需要定义不同的存储类型。Python中的数据类型很多，而且也允许我们自定义新的数据类型（这一点在后面会讲到），我们先介绍几种常用的数据类型。</p><ul><li>整型：Python中可以处理任意大小的整数（Python 2.x中有<code>int</code>和<code>long</code>两种类型的整数，但这种区分对Python来说意义不大，因此在Python 3.x中整数只有int这一种了），而且支持二进制（如<code>0b100</code>，换算成十进制是4）、八进制（如<code>0o100</code>，换算成十进制是64）、十进制（<code>100</code>）和十六进制（<code>0x100</code>，换算成十进制是256）的表示法。</li><li>浮点型：浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如<code>123.456</code>）之外还支持科学计数法（如<code>1.23456e2</code>）。</li><li>字符串型：字符串是以单引号或双引号括起来的任意文本，比如<code>&#39;hello&#39;</code>和<code>&quot;hello&quot;</code>,字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。</li><li>布尔型：布尔值只有<code>True</code>、<code>False</code>两种值，要么是<code>True</code>，要么是<code>False</code>，在Python中，可以直接用<code>True</code>、<code>False</code>表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如<code>3 &lt; 5</code>会产生布尔值<code>True</code>，而<code>2 == 1</code>会产生布尔值<code>False</code>）。</li><li>复数型：形如<code>3+5j</code>，跟数学上的复数表示一样，唯一不同的是虚部的<code>i</code>换成了<code>j</code>。实际上，这个类型并不常用，大家了解一下就可以了。</li></ul><h4 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h4><p>对于每个变量我们需要给它取一个名字，就如同我们每个人都有属于自己的响亮的名字一样。在Python中，变量命名需要遵循以下这些必须遵守硬性规则和强烈建议遵守的非硬性规则。</p><ul><li>硬性规则：<ul><li>变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。</li><li>大小写敏感（大写的<code>a</code>和小写的<code>A</code>是两个不同的变量）。</li><li>不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。</li></ul></li><li>PEP 8要求：<ul><li>用小写字母拼写，多个单词用下划线连接。</li><li>受保护的实例属性用单个下划线开头（后面会讲到）。</li><li>私有的实例属性用两个下划线开头（后面会讲到）。</li></ul></li></ul><p>当然，作为一个专业的程序员，给变量（事实上应该是所有的标识符）命名时做到见名知意也是非常重要的。</p><h4 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h4><p>下面通过几个例子来说明变量的类型和变量使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用变量保存数据并进行加减乘除运算</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">a = <span class="number">321</span></span><br><span class="line">b = <span class="number">12</span></span><br><span class="line"><span class="built_in">print</span>(a + b)    <span class="comment"># 333</span></span><br><span class="line"><span class="built_in">print</span>(a - b)    <span class="comment"># 309</span></span><br><span class="line"><span class="built_in">print</span>(a * b)    <span class="comment"># 3852</span></span><br><span class="line"><span class="built_in">print</span>(a / b)    <span class="comment"># 26.75</span></span><br></pre></td></tr></table></figure><p>在Python中可以使用<code>type</code>函数对变量的类型进行检查。程序设计中函数的概念跟数学上函数的概念是一致的，数学上的函数相信大家并不陌生，它包括了函数名、自变量和因变量。如果暂时不理解这个概念也不要紧，我们会在后续的章节中专门讲解函数的定义和使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用type()检查变量的类型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">a = <span class="number">100</span></span><br><span class="line">b = <span class="number">12.345</span></span><br><span class="line">c = <span class="number">1</span> + <span class="number">5j</span></span><br><span class="line">d = <span class="string">&#x27;hello, world&#x27;</span></span><br><span class="line">e = <span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))    <span class="comment"># &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))    <span class="comment"># &lt;class &#x27;float&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(c))    <span class="comment"># &lt;class &#x27;complex&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(d))    <span class="comment"># &lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(e))    <span class="comment"># &lt;class &#x27;bool&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用Python中内置的函数对变量类型进行转换。</p><ul><li><code>int()</code>：将一个数值或字符串转换成整数，可以指定进制。</li><li><code>float()</code>：将一个字符串转换成浮点数。</li><li><code>str()</code>：将指定的对象转换成字符串形式，可以指定编码。</li><li><code>chr()</code>：将整数转换成该编码对应的字符串（一个字符）。</li><li><code>ord()</code>：将字符串（一个字符）转换成对应的编码（整数）。</li></ul><p>下面的代码通过键盘输入两个整数来实现对两个整数的算术运算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用input()函数获取键盘输入(字符串)</span></span><br><span class="line"><span class="string">使用int()函数将输入的字符串转换成整数</span></span><br><span class="line"><span class="string">使用print()函数输出带占位符的字符串</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;a = &#x27;</span>))</span><br><span class="line">b = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;b = &#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d + %d = %d&#x27;</span> % (a, b, a + b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d - %d = %d&#x27;</span> % (a, b, a - b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d * %d = %d&#x27;</span> % (a, b, a * b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d / %d = %f&#x27;</span> % (a, b, a / b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d // %d = %d&#x27;</span> % (a, b, a // b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d %% %d = %d&#x27;</span> % (a, b, a % b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d ** %d = %d&#x27;</span> % (a, b, a ** b))</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：上面的print函数中输出的字符串使用了占位符语法，其中<code>%d</code>是整数的占位符，<code>%f</code>是小数的占位符，<code>%%</code>表示百分号（因为百分号代表了占位符，所以带占位符的字符串中要表示百分号必须写成<code>%%</code>），字符串之后的<code>%</code>后面跟的变量值会替换掉占位符然后输出到终端中，运行上面的程序，看看程序执行结果就明白啦。</p></blockquote><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>Python支持多种运算符，下表大致按照优先级从高到低的顺序列出了所有的运算符，运算符的优先级指的是多个运算符同时出现时，先做什么运算然后再做什么运算。除了我们之前已经用过的赋值运算符和算术运算符，我们稍后会陆续讲到其他运算符的使用。</p><div class="table-container"><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td><code>[]</code> <code>[:]</code></td><td>下标，切片</td></tr><tr><td><code>**</code></td><td>指数</td></tr><tr><td><code>~</code> <code>+</code> <code>-</code></td><td>按位取反, 正负号</td></tr><tr><td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td><td>乘，除，模，整除</td></tr><tr><td><code>+</code> <code>-</code></td><td>加，减</td></tr><tr><td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td><td>右移，左移</td></tr><tr><td><code>&amp;</code></td><td>按位与</td></tr><tr><td><code>^</code> `\</td><td>`</td><td>按位异或，按位或</td></tr><tr><td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td><td>小于等于，小于，大于，大于等于</td></tr><tr><td><code>==</code> <code>!=</code></td><td>等于，不等于</td></tr><tr><td><code>is</code>  <code>is not</code></td><td>身份运算符</td></tr><tr><td><code>in</code> <code>not in</code></td><td>成员运算符</td></tr><tr><td><code>not</code> <code>or</code> <code>and</code></td><td>逻辑运算符</td></tr><tr><td><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> `</td><td>=<code>`^=</code> <code>&gt;&gt;=</code> <code>&lt;&lt;=</code></td><td>（复合）赋值运算符</td></tr></tbody></table></div><blockquote><p><strong>说明：</strong> 在实际开发中，如果搞不清楚运算符的优先级，可以使用括号来确保运算的执行顺序。</p></blockquote><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>赋值运算符应该是最为常见的运算符，它的作用是将右边的值赋给左边的变量。下面的例子演示了赋值运算符和复合赋值运算符的使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">赋值运算符和复合赋值运算符</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">3</span></span><br><span class="line">a += b        <span class="comment"># 相当于：a = a + b</span></span><br><span class="line">a *= a + <span class="number">2</span>    <span class="comment"># 相当于：a = a * (a + 2)</span></span><br><span class="line"><span class="built_in">print</span>(a)      <span class="comment"># 算一下这里会输出什么</span></span><br></pre></td></tr></table></figure><h3 id="比较运算符和逻辑运算符"><a href="#比较运算符和逻辑运算符" class="headerlink" title="比较运算符和逻辑运算符"></a>比较运算符和逻辑运算符</h3><p>比较运算符有的地方也称为关系运算符，包括<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&gt;</code>、<code>&lt;=</code>、<code>&gt;=</code>，我相信没有什么好解释的，大家一看就能懂，唯一需要提醒的是比较相等用的是<code>==</code>，请注意这个地方是两个等号，因为<code>=</code>是赋值运算符，我们在上面刚刚讲到过，<code>==</code>才是比较相等的比较运算符。比较运算符会产生布尔值，要么是<code>True</code>要么是<code>False</code>。</p><p>逻辑运算符有三个，分别是<code>and</code>、<code>or</code>和<code>not</code>。<code>and</code>字面意思是“而且”，所以<code>and</code>运算符会连接两个布尔值，如果两个布尔值都是<code>True</code>，那么运算的结果就是<code>True</code>；左右两边的布尔值有一个是<code>False</code>，最终的运算结果就是<code>False</code>。相信大家已经想到了，如果<code>and</code>左边的布尔值是<code>False</code>，不管右边的布尔值是什么，最终的结果都是<code>False</code>，所以在做运算的时候右边的值会被跳过（短路处理），这也就意味着在<code>and</code>运算符左边为<code>False</code>的情况下，右边的表达式根本不会执行。<code>or</code>字面意思是“或者”，所以<code>or</code>运算符也会连接两个布尔值，如果两个布尔值有任意一个是<code>True</code>，那么最终的结果就是<code>True</code>。当然，<code>or</code>运算符也是有短路功能的，在它左边的布尔值为<code>True</code>的情况下，右边的表达式根本不会执行。<code>not</code>运算符的后面会跟上一个布尔值，它的作用是得到与该布尔值相反的值，也就是说，后面的布尔值如果是<code>True</code>运算结果就是<code>False</code>，而后面的布尔值如果是<code>False</code>则运算结果就是<code>True</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">比较运算符和逻辑运算符的使用</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">flag0 = <span class="number">1</span> == <span class="number">1</span></span><br><span class="line">flag1 = <span class="number">3</span> &gt; <span class="number">2</span></span><br><span class="line">flag2 = <span class="number">2</span> &lt; <span class="number">1</span></span><br><span class="line">flag3 = flag1 <span class="keyword">and</span> flag2</span><br><span class="line">flag4 = flag1 <span class="keyword">or</span> flag2</span><br><span class="line">flag5 = <span class="keyword">not</span> (<span class="number">1</span> != <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag0 =&#x27;</span>, flag0)    <span class="comment"># flag0 = True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag1 =&#x27;</span>, flag1)    <span class="comment"># flag1 = True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag2 =&#x27;</span>, flag2)    <span class="comment"># flag2 = False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag3 =&#x27;</span>, flag3)    <span class="comment"># flag3 = False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag4 =&#x27;</span>, flag4)    <span class="comment"># flag4 = True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag5 =&#x27;</span>, flag5)    <span class="comment"># flag5 = False</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：比较运算符的优先级高于赋值运算符，所以<code>flag0 = 1 == 1</code>先做<code>1 == 1</code>产生布尔值<code>True</code>，再将这个值赋值给变量<code>flag0</code>。<code>print</code>函数可以输出多个值，多个值之间可以用<code>,</code>进行分隔，输出的内容之间默认以空格分开。</p></blockquote><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：华氏温度转换为摄氏温度。"><a href="#练习1：华氏温度转换为摄氏温度。" class="headerlink" title="练习1：华氏温度转换为摄氏温度。"></a>练习1：华氏温度转换为摄氏温度。</h4><blockquote><p>提示：华氏温度到摄氏温度的转换公式为：$C=(F - 32) \div 1.8$。</p></blockquote><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">将华氏温度转换为摄氏温度</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">f = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入华氏温度: &#x27;</span>))</span><br><span class="line">c = (f - <span class="number">32</span>) / <span class="number">1.8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%.1f华氏度 = %.1f摄氏度&#x27;</span> % (f, c))</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：在使用<code>print</code>函数输出时，也可以对字符串内容进行格式化处理，上面<code>print</code>函数中的字符串<code>%.1f</code>是一个占位符，稍后会由一个<code>float</code>类型的变量值替换掉它。同理，如果字符串中有<code>%d</code>，后面可以用一个<code>int</code>类型的变量值替换掉它，而<code>%s</code>会被字符串的值替换掉。除了这种格式化字符串的方式外，还可以用下面的方式来格式化字符串，其中<code>&#123;f:.1f&#125;</code>和<code>&#123;c:.1f&#125;</code>可以先看成是<code>&#123;f&#125;</code>和<code>&#123;c&#125;</code>，表示输出时会用变量<code>f</code>和变量<code>c</code>的值替换掉这两个占位符，后面的<code>:.1f</code>表示这是一个浮点数，小数点后保留1位有效数字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;f:<span class="number">.1</span>f&#125;</span>华氏度 = <span class="subst">&#123;c:<span class="number">.1</span>f&#125;</span>摄氏度&#x27;</span>)</span><br></pre></td></tr></table></figure></blockquote><h4 id="练习2：输入圆的半径计算计算周长和面积。"><a href="#练习2：输入圆的半径计算计算周长和面积。" class="headerlink" title="练习2：输入圆的半径计算计算周长和面积。"></a>练习2：输入圆的半径计算计算周长和面积。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输入半径计算圆的周长和面积</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">radius = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入圆的半径: &#x27;</span>))</span><br><span class="line">perimeter = <span class="number">2</span> * <span class="number">3.1416</span> * radius</span><br><span class="line">area = <span class="number">3.1416</span> * radius * radius</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;周长: %.2f&#x27;</span> % perimeter)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;面积: %.2f&#x27;</span> % area)</span><br></pre></td></tr></table></figure><h4 id="练习3：输入年份判断是不是闰年。"><a href="#练习3：输入年份判断是不是闰年。" class="headerlink" title="练习3：输入年份判断是不是闰年。"></a>练习3：输入年份判断是不是闰年。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输入年份 如果是闰年输出True 否则输出False</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">year = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入年份: &#x27;</span>))</span><br><span class="line"><span class="comment"># 如果代码太长写成一行不便于阅读 可以使用\对代码进行折行</span></span><br><span class="line">is_leap = year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> \</span><br><span class="line">          year % <span class="number">400</span> == <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(is_leap)</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：比较运算符会产生布尔值，而逻辑运算符<code>and</code>和<code>or</code>会对这些布尔值进行组合，最终也是得到一个布尔值，闰年输出<code>True</code>，平年输出<code>False</code>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分支结构</title>
      <link href="/2021/07/02/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/"/>
      <url>/2021/07/02/03.%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>迄今为止，我们写的Python代码都是一条一条语句顺序执行，这种代码结构通常称之为顺序结构。然而仅有顺序结构并不能解决所有的问题，比如我们设计一个游戏，游戏第一关的通关条件是玩家获得1000分，那么在完成本局游戏后，我们要根据玩家得到分数来决定究竟是进入第二关，还是告诉玩家“Game Over”，这里就会产生两个分支，而且这两个分支只有一个会被执行。类似的场景还有很多，我们将这种结构称之为“分支结构”或“选择结构”。给大家一分钟的时间，你应该可以想到至少5个以上这样的例子，赶紧试一试。</p><h3 id="if语句的使用"><a href="#if语句的使用" class="headerlink" title="if语句的使用"></a>if语句的使用</h3><p>在Python中，要构造分支结构可以使用<code>if</code>、<code>elif</code>和<code>else</code>关键字。所谓<strong>关键字</strong>就是有特殊含义的单词，像<code>if</code>和<code>else</code>就是专门用于构造分支结构的关键字，很显然你不能够使用它作为变量名（事实上，用作其他的标识符也是不可以）。下面的例子中演示了如何构造一个分支结构。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">用户身份验证</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">username = <span class="built_in">input</span>(<span class="string">&#x27;请输入用户名: &#x27;</span>)</span><br><span class="line">password = <span class="built_in">input</span>(<span class="string">&#x27;请输入口令: &#x27;</span>)</span><br><span class="line"><span class="comment"># 用户名是admin且密码是123456则身份验证成功否则身份验证失败</span></span><br><span class="line"><span class="keyword">if</span> username == <span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;123456&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;身份验证成功!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;身份验证失败!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>需要说明的是和C/C++、Java等语言不同，Python中没有用花括号来构造代码块而是<strong>使用了缩进的方式来表示代码的层次结构</strong>，如果<code>if</code>条件成立的情况下需要执行多条语句，只要保持多条语句具有相同的缩进就可以了。换句话说<strong>连续的代码如果又保持了相同的缩进那么它们属于同一个代码块</strong>，相当于是一个执行的整体。<strong>缩进</strong>可以使用任意数量的空格，但<strong>通常使用4个空格</strong>，建议大家<strong>不要使用制表键</strong>或者<strong>设置你的代码编辑工具自动将制表键变成4个空格</strong>。</p><p>当然如果要构造出更多的分支，可以使用<code>if...elif...else...</code>结构或者嵌套的<code>if...else...</code>结构，下面的代码演示了如何利用多分支结构实现分段函数求值。</p><p><img src="./res/formula_1.png" alt="$$f(x)=\begin{cases} 3x-5&amp;\text{(x&gt;1)}\\x+2&amp;\text{(-1}\leq\text{x}\leq\text{1)}\\5x+3&amp;\text {(x&lt;-1)}\end{cases}$$"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">分段函数求值</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        3x - 5  (x &gt; 1)</span></span><br><span class="line"><span class="string">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span></span><br><span class="line"><span class="string">        5x + 3  (x &lt; -1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">x = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;x = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</span><br><span class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></span><br><span class="line"><span class="keyword">elif</span> x &gt;= -<span class="number">1</span>:</span><br><span class="line">    y = x + <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    y = <span class="number">5</span> * x + <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f(%.2f) = %.2f&#x27;</span> % (x, y))</span><br></pre></td></tr></table></figure><p>当然根据实际开发的需要，分支结构是可以嵌套的，例如判断是否通关以后还要根据你获得的宝物或者道具的数量对你的表现给出等级（比如点亮两颗或三颗星星），那么我们就需要在<code>if</code>的内部构造出一个新的分支结构，同理<code>elif</code>和<code>else</code>中也可以再构造新的分支，我们称之为嵌套的分支结构，也就是说上面的代码也可以写成下面的样子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">分段函数求值</span></span><br><span class="line"><span class="string">3x - 5(x &gt; 1)</span></span><br><span class="line"><span class="string">f(x) =x + 2(-1 &lt;= x &lt;= 1)</span></span><br><span class="line"><span class="string">5x + 3(x &lt; -1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">x = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;x = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</span><br><span class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> x &gt;= -<span class="number">1</span>:</span><br><span class="line">        y = x + <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        y = <span class="number">5</span> * x + <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f(%.2f) = %.2f&#x27;</span> % (x, y))</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 大家可以自己感受一下这两种写法到底是哪一种更好。在之前我们提到的Python之禅中有这么一句话“Flat is better than nested.”，之所以提倡代码“扁平化”是因为嵌套结构的嵌套层次多了之后会严重的影响代码的可读性，所以能使用扁平化的结构时就不要使用嵌套。</p></blockquote><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：英制单位英寸与公制单位厘米互换。"><a href="#练习1：英制单位英寸与公制单位厘米互换。" class="headerlink" title="练习1：英制单位英寸与公制单位厘米互换。"></a>练习1：英制单位英寸与公制单位厘米互换。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">英制单位英寸和公制单位厘米互换</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">value = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入长度: &#x27;</span>))</span><br><span class="line">unit = <span class="built_in">input</span>(<span class="string">&#x27;请输入单位: &#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> unit == <span class="string">&#x27;in&#x27;</span> <span class="keyword">or</span> unit == <span class="string">&#x27;英寸&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%f英寸 = %f厘米&#x27;</span> % (value, value * <span class="number">2.54</span>))</span><br><span class="line"><span class="keyword">elif</span> unit == <span class="string">&#x27;cm&#x27;</span> <span class="keyword">or</span> unit == <span class="string">&#x27;厘米&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%f厘米 = %f英寸&#x27;</span> % (value, value / <span class="number">2.54</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请输入有效的单位&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="练习2：百分制成绩转换为等级制成绩。"><a href="#练习2：百分制成绩转换为等级制成绩。" class="headerlink" title="练习2：百分制成绩转换为等级制成绩。"></a>练习2：百分制成绩转换为等级制成绩。</h4><blockquote><p><strong>要求</strong>：如果输入的成绩在90分以上（含90分）输出A；80分-90分（不含90分）输出B；70分-80分（不含80分）输出C；60分-70分（不含70分）输出D；60分以下输出E。</p></blockquote><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">百分制成绩转换为等级制成绩</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">score = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入成绩: &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</span><br><span class="line">    grade = <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</span><br><span class="line">    grade = <span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">70</span>:</span><br><span class="line">    grade = <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    grade = <span class="string">&#x27;D&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    grade = <span class="string">&#x27;E&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;对应的等级是:&#x27;</span>, grade)</span><br></pre></td></tr></table></figure><h4 id="练习3：输入三条边长，如果能构成三角形就计算周长和面积。"><a href="#练习3：输入三条边长，如果能构成三角形就计算周长和面积。" class="headerlink" title="练习3：输入三条边长，如果能构成三角形就计算周长和面积。"></a>练习3：输入三条边长，如果能构成三角形就计算周长和面积。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">a = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;a = &#x27;</span>))</span><br><span class="line">b = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;b = &#x27;</span>))</span><br><span class="line">c = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;c = &#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a + b &gt; c <span class="keyword">and</span> a + c &gt; b <span class="keyword">and</span> b + c &gt; a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;周长: %f&#x27;</span> % (a + b + c))</span><br><span class="line">    p = (a + b + c) / <span class="number">2</span></span><br><span class="line">    area = (p * (p - a) * (p - b) * (p - c)) ** <span class="number">0.5</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;面积: %f&#x27;</span> % (area))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不能构成三角形&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 上面使用的通过边长计算三角形面积的公式叫做<a href="https://zh.wikipedia.org/zh-hans/海伦公式">海伦公式</a>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/07/02/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
      <url>/2021/07/02/04.%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>我们在写程序的时候，一定会遇到需要重复执行某条或某些指令的场景。例如用程序控制机器人踢足球，如果机器人持球而且还没有进入射门范围，那么我们就要一直发出让机器人向球门方向移动的指令。在这个场景中，让机器人向球门方向移动就是一个需要重复的动作，当然这里还会用到上一课讲的分支结构来判断机器人是否持球以及是否进入射门范围。再举一个简单的例子，如果要实现每隔1秒中在屏幕上打印一次“hello, world”并持续打印一个小时，我们肯定不能够直接把<code>print(&#39;hello, world&#39;)</code>这句代码写3600遍，这里同样需要循环结构。</p><p>循环结构就是程序中控制某条或某些指令重复执行的结构。在Python中构造循环结构有两种做法，一种是<code>for-in</code>循环，一种是<code>while</code>循环。</p><h3 id="for-in循环"><a href="#for-in循环" class="headerlink" title="for-in循环"></a>for-in循环</h3><p>如果明确的知道循环执行的次数或者要对一个容器进行迭代（后面会讲到），那么我们推荐使用<code>for-in</code>循环，例如下面代码中计算1~100求和的结果（$\displaystyle \sum \limits_{n=1}^{100}n$）。 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">用for循环实现1~100求和</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">sum</span> += x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>需要说明的是上面代码中的<code>range(1, 101)</code>可以用来构造一个从1到100的范围，当我们把这样一个范围放到<code>for-in</code>循环中，就可以通过前面的循环变量<code>x</code>依次取出从1到100的整数。当然，<code>range</code>的用法非常灵活，下面给出了一个例子：</p><ul><li><code>range(101)</code>：可以用来产生0到100范围的整数，需要注意的是取不到101。</li><li><code>range(1, 101)</code>：可以用来产生1到100范围的整数，相当于前面是闭区间后面是开区间。</li><li><code>range(1, 101, 2)</code>：可以用来产生1到100的奇数，其中2是步长，即每次数值递增的值。</li><li><code>range(100, 0, -2)</code>：可以用来产生100到1的偶数，其中-2是步长，即每次数字递减的值。</li></ul><p>知道了这一点，我们可以用下面的代码来实现1~100之间的偶数求和。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">用for循环实现1~100之间的偶数求和</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">101</span>, <span class="number">2</span>):</span><br><span class="line">    <span class="built_in">sum</span> += x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>当然，也可以通过在循环中使用分支结构的方式来实现相同的功能，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">用for循环实现1~100之间的偶数求和</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">sum</span> += x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明</strong>：相较于上面直接跳过奇数的做法，下面这种做法很明显并不是很好的选择。</p></blockquote><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>如果要构造不知道具体循环次数的循环结构，我们推荐使用<code>while</code>循环。<code>while</code>循环通过一个能够产生或转换出<code>bool</code>值的表达式来控制循环，表达式的值为<code>True</code>则继续循环；表达式的值为<code>False</code>则结束循环。</p><p>下面我们通过一个“猜数字”的小游戏来看看如何使用<code>while</code>循环。猜数字游戏的规则是：计算机出一个1到100之间的随机数，玩家输入自己猜的数字，计算机给出对应的提示信息（大一点、小一点或猜对了），如果玩家猜中了数字，计算机提示用户一共猜了多少次，游戏结束，否则游戏继续。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">猜数字游戏</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">answer = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    counter += <span class="number">1</span></span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入: &#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> number &lt; answer:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;大一点&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> number &gt; answer:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小一点&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;恭喜你猜对了!&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你总共猜了%d次&#x27;</span> % counter)</span><br><span class="line"><span class="keyword">if</span> counter &gt; <span class="number">7</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你的智商余额明显不足&#x27;</span>)</span><br></pre></td></tr></table></figure><p>上面的代码中使用了<code>break</code>关键字来提前终止循环，需要注意的是<code>break</code>只能终止它所在的那个循环，这一点在使用嵌套的循环结构（下面会讲到）需要引起注意。除了<code>break</code>之外，还有另一个关键字是<code>continue</code>，它可以用来放弃本次循环后续的代码直接让循环进入下一轮。</p><p>和分支结构一样，循环结构也是可以嵌套的，也就是说在循环中还可以构造循环结构。下面的例子演示了如何通过嵌套的循环来输出一个九九乘法表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输出乘法口诀表(九九表)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d*%d=%d&#x27;</span> % (i, j, i * j), end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：输入一个正整数判断是不是素数。"><a href="#练习1：输入一个正整数判断是不是素数。" class="headerlink" title="练习1：输入一个正整数判断是不是素数。"></a>练习1：输入一个正整数判断是不是素数。</h4><blockquote><p><strong>提示</strong>：素数指的是只能被1和自身整除的大于1的整数。</p></blockquote><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输入一个正整数判断它是不是素数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">Date: 2018-03-01</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个正整数: &#x27;</span>))</span><br><span class="line">end = <span class="built_in">int</span>(sqrt(num))</span><br><span class="line">is_prime = <span class="literal">True</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, end + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> num % x == <span class="number">0</span>:</span><br><span class="line">        is_prime = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> is_prime <span class="keyword">and</span> num != <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d是素数&#x27;</span> % num)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%d不是素数&#x27;</span> % num)</span><br></pre></td></tr></table></figure><h4 id="练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。"><a href="#练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。" class="headerlink" title="练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。"></a>练习2：输入两个正整数，计算它们的最大公约数和最小公倍数。</h4><blockquote><p><strong>提示</strong>：两个数的最大公约数是两个数的公共因子中最大的那个数；两个数的最小公倍数则是能够同时被两个数整除的最小的那个数。</p></blockquote><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输入两个正整数计算它们的最大公约数和最小公倍数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">Date: 2018-03-01</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;x = &#x27;</span>))</span><br><span class="line">y = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;y = &#x27;</span>))</span><br><span class="line"><span class="comment"># 如果x大于y就交换x和y的值</span></span><br><span class="line"><span class="keyword">if</span> x &gt; y:</span><br><span class="line">    <span class="comment"># 通过下面的操作将y的值赋给x, 将x的值赋给y</span></span><br><span class="line">    x, y = y, x</span><br><span class="line"><span class="comment"># 从两个数中较小的数开始做递减的循环</span></span><br><span class="line"><span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(x, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d和%d的最大公约数是%d&#x27;</span> % (x, y, factor))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d和%d的最小公倍数是%d&#x27;</span> % (x, y, x * y // factor))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="练习3：打印如下所示的三角形图案。"><a href="#练习3：打印如下所示的三角形图案。" class="headerlink" title="练习3：打印如下所示的三角形图案。"></a>练习3：打印如下所示的三角形图案。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    *</span><br><span class="line">   **</span><br><span class="line">  ***</span><br><span class="line"> ****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    *</span><br><span class="line">   ***</span><br><span class="line">  *****</span><br><span class="line"> *******</span><br><span class="line">*********</span><br></pre></td></tr></table></figure><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">打印三角形图案</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">row = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入行数: &#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">        <span class="keyword">if</span> j &lt; row - i - <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(row - i - <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span> * i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数和模块的使用</title>
      <link href="/2021/07/02/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/07/02/06.%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="函数和模块的使用"><a href="#函数和模块的使用" class="headerlink" title="函数和模块的使用"></a>函数和模块的使用</h2><p>在讲解本章节的内容之前，我们先来研究一道数学题，请说出下面的方程有多少组正整数解。</p><p><img src="./res/formula_3.png" alt="$$x_1 + x_2 + x_3 + x_4 = 8$$"></p><p>事实上，上面的问题等同于将8个苹果分成四组每组至少一个苹果有多少种方案。想到这一点问题的答案就呼之欲出了。</p><p><img src="./res/formula_4.png" alt="$$C_M^N =\frac{M!}{N!(M-N)!}, \text{(M=7, N=3)} $$"></p><p>可以用Python的程序来计算出这个值，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输入M和N计算C(M,N)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">m = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;m = &#x27;</span>))</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;n = &#x27;</span>))</span><br><span class="line">fm = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, m + <span class="number">1</span>):</span><br><span class="line">    fm *= num</span><br><span class="line">fn = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">    fn *= num</span><br><span class="line">fm_n = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, m - n + <span class="number">1</span>):</span><br><span class="line">    fm_n *= num</span><br><span class="line"><span class="built_in">print</span>(fm // fn // fm_n)</span><br></pre></td></tr></table></figure><h3 id="函数的作用"><a href="#函数的作用" class="headerlink" title="函数的作用"></a>函数的作用</h3><p>不知道大家是否注意到，在上面的代码中，我们做了3次求阶乘，这样的代码实际上就是重复代码。编程大师<em>Martin Fowler</em>先生曾经说过：“<strong>代码有很多种坏味道，重复是最坏的一种！</strong>”，要写出高质量的代码首先要解决的就是重复代码的问题。对于上面的代码来说，我们可以将计算阶乘的功能封装到一个称之为“函数”的功能模块中，在需要计算阶乘的地方，我们只需要“调用”这个“函数”就可以了。</p><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>在Python中可以使用<code>def</code>关键字来定义函数，和变量一样每个函数也有一个响亮的名字，而且命名规则跟变量的命名规则是一致的。在函数名后面的圆括号中可以放置传递给函数的参数，这一点和数学上的函数非常相似，程序中函数的参数就相当于是数学上说的函数的自变量，而函数执行完成后我们可以通过<code>return</code>关键字来返回一个值，这相当于数学上说的函数的因变量。</p><p>在了解了如何定义函数后，我们可以对上面的代码进行重构，所谓重构就是在不影响代码执行结果的前提下对代码的结构进行调整，重构之后的代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输入M和N计算C(M,N)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fac</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;求阶乘&quot;&quot;&quot;</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, num + <span class="number">1</span>):</span><br><span class="line">        result *= n</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;m = &#x27;</span>))</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;n = &#x27;</span>))</span><br><span class="line"><span class="comment"># 当需要计算阶乘的时候不用再写循环求阶乘而是直接调用已经定义好的函数</span></span><br><span class="line"><span class="built_in">print</span>(fac(m) // fac(n) // fac(m - n))</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> Python的<code>math</code>模块中其实已经有一个名为<code>factorial</code>函数实现了阶乘运算，事实上求阶乘并不用自己定义函数。下面的例子中，我们讲的函数在Python标准库已经实现过了，我们这里是为了讲解函数的定义和使用才把它们又实现了一遍，<strong>实际开发中并不建议做这种低级的重复劳动</strong>。</p></blockquote><h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><p>函数是绝大多数编程语言中都支持的一个代码的&quot;构建块&quot;，但是Python中的函数与其他语言中的函数还是有很多不太相同的地方，其中一个显著的区别就是Python对函数参数的处理。在Python中，函数的参数可以有默认值，也支持使用可变参数，所以Python并不需要像其他语言一样支持<a href="https://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD">函数的重载</a>，因为我们在定义一个函数的时候可以让它有多种不同的使用方式，下面是两个小例子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">roll_dice</span>(<span class="params">n=<span class="number">2</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;摇色子&quot;&quot;&quot;</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        total += randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a=<span class="number">0</span>, b=<span class="number">0</span>, c=<span class="number">0</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;三个数相加&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> a + b + c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有指定参数那么使用默认值摇两颗色子</span></span><br><span class="line"><span class="built_in">print</span>(roll_dice())</span><br><span class="line"><span class="comment"># 摇三颗色子</span></span><br><span class="line"><span class="built_in">print</span>(roll_dice(<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(add())</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="comment"># 传递参数时可以不按照设定的顺序进行传递</span></span><br><span class="line"><span class="built_in">print</span>(add(c=<span class="number">50</span>, a=<span class="number">100</span>, b=<span class="number">200</span>))</span><br></pre></td></tr></table></figure><p>我们给上面两个函数的参数都设定了默认值，这也就意味着如果在调用函数的时候如果没有传入对应参数的值时将使用该参数的默认值，所以在上面的代码中我们可以用各种不同的方式去调用<code>add</code>函数，这跟其他很多语言中函数重载的效果是一致的。</p><p>其实上面的<code>add</code>函数还有更好的实现方案，因为我们可能会对0个或多个参数进行加法运算，而具体有多少个参数是由调用者来决定，我们作为函数的设计者对这一点是一无所知的，因此在不确定参数个数的时候，我们可以使用可变参数，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在参数名前面的*表示args是一个可变参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">*args</span>):</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> args:</span><br><span class="line">        total += val</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在调用add函数时可以传入0个或多个参数</span></span><br><span class="line"><span class="built_in">print</span>(add())</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>))</span><br></pre></td></tr></table></figure><h3 id="用模块管理函数"><a href="#用模块管理函数" class="headerlink" title="用模块管理函数"></a>用模块管理函数</h3><p>对于任何一种编程语言来说，给变量、函数这样的标识符起名字都是一个让人头疼的问题，因为我们会遇到命名冲突这种尴尬的情况。最简单的场景就是在同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义，也就意味着两个函数同名函数实际上只有一个是存在的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;goodbye, world!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面的代码会输出什么呢？</span></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure><p>当然上面的这种情况我们很容易就能避免，但是如果项目是由多人协作进行团队开发的时候，团队中可能有多个程序员都定义了名为<code>foo</code>的函数，那么怎么解决这种命名冲突呢？答案其实很简单，Python中每个文件就代表了一个模块（module），我们在不同的模块中可以有同名的函数，在使用函数的时候我们通过<code>import</code>关键字导入指定的模块就可以区分到底要使用的是哪个模块中的<code>foo</code>函数，代码如下所示。</p><p><code>module1.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello, world!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>module2.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;goodbye, world!&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出hello, world!</span></span><br><span class="line">foo()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出goodbye, world!</span></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure><p>也可以按照如下所示的方式来区分到底要使用哪一个<code>foo</code>函数。</p><p><code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module1 <span class="keyword">as</span> m1</span><br><span class="line"><span class="keyword">import</span> module2 <span class="keyword">as</span> m2</span><br><span class="line"></span><br><span class="line">m1.foo()</span><br><span class="line">m2.foo()</span><br></pre></td></tr></table></figure><p>但是如果将代码写成了下面的样子，那么程序中调用的是最后导入的那个<code>foo</code>，因为后导入的foo覆盖了之前导入的<code>foo</code>。</p><p><code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</span><br><span class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出goodbye, world!</span></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure><p><code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</span><br><span class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出hello, world!</span></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure><p>需要说明的是，如果我们导入的模块除了定义函数之外还有可以执行代码，那么Python解释器在导入这个模块时就会执行这些代码，事实上我们可能并不希望如此，因此如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中，这样的话除非直接运行该模块，if条件下的这些代码是不会执行的，因为只有直接执行的模块的名字才是&quot;__main__&quot;。</p><p><code>module3.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bar</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># __name__是Python中一个隐含的变量它代表了模块的名字</span></span><br><span class="line"><span class="comment"># 只有被Python解释器直接执行的模块的名字才是__main__</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;call foo()&#x27;</span>)</span><br><span class="line">    foo()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;call bar()&#x27;</span>)</span><br><span class="line">    bar()</span><br></pre></td></tr></table></figure><p><code>test.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入module3时 不会执行模块中if条件成立时的代码 因为模块的名字是module3而不是__main__</span></span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：实现计算求最大公约数和最小公倍数的函数。"><a href="#练习1：实现计算求最大公约数和最小公倍数的函数。" class="headerlink" title="练习1：实现计算求最大公约数和最小公倍数的函数。"></a>练习1：实现计算求最大公约数和最小公倍数的函数。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gcd</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;求最大公约数&quot;&quot;&quot;</span></span><br><span class="line">    (x, y) = (y, x) <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> (x, y)</span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(x, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> factor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lcm</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;求最小公倍数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> x * y // gcd(x, y)</span><br></pre></td></tr></table></figure><h4 id="练习2：实现判断一个数是不是回文数的函数。"><a href="#练习2：实现判断一个数是不是回文数的函数。" class="headerlink" title="练习2：实现判断一个数是不是回文数的函数。"></a>练习2：实现判断一个数是不是回文数的函数。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_palindrome</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;判断一个数是不是回文数&quot;&quot;&quot;</span></span><br><span class="line">    temp = num</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> temp &gt; <span class="number">0</span>:</span><br><span class="line">        total = total * <span class="number">10</span> + temp % <span class="number">10</span></span><br><span class="line">        temp //= <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> total == num</span><br></pre></td></tr></table></figure><h4 id="练习3：实现判断一个数是不是素数的函数。"><a href="#练习3：实现判断一个数是不是素数的函数。" class="headerlink" title="练习3：实现判断一个数是不是素数的函数。"></a>练习3：实现判断一个数是不是素数的函数。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_prime</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;判断一个数是不是素数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(num ** <span class="number">0.5</span>) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span> <span class="keyword">if</span> num != <span class="number">1</span> <span class="keyword">else</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h4 id="练习4：写一个程序判断输入的正整数是不是回文素数。"><a href="#练习4：写一个程序判断输入的正整数是不是回文素数。" class="headerlink" title="练习4：写一个程序判断输入的正整数是不是回文素数。"></a>练习4：写一个程序判断输入的正整数是不是回文素数。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入正整数: &#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> is_palindrome(num) <span class="keyword">and</span> is_prime(num):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%d是回文素数&#x27;</span> % num)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：通过上面的程序可以看出，当我们<strong>将代码中重复出现的和相对独立的功能抽取成函数</strong>后，我们可以<strong>组合使用这些函数</strong>来解决更为复杂的问题，这也是我们为什么要定义和使用函数的一个非常重要的原因。</p></blockquote><h3 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h3><p>最后，我们来讨论一下Python中有关变量作用域的问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    b = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Python中可以在函数内部再定义函数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bar</span>():</span><br><span class="line">        c = <span class="literal">True</span></span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line">        <span class="built_in">print</span>(b)</span><br><span class="line">        <span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">    bar()</span><br><span class="line">    <span class="comment"># print(c)  # NameError: name &#x27;c&#x27; is not defined</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = <span class="number">100</span></span><br><span class="line">    <span class="comment"># print(b)  # NameError: name &#x27;b&#x27; is not defined</span></span><br><span class="line">    foo()</span><br></pre></td></tr></table></figure><p>上面的代码能够顺利的执行并且打印出100、hello和True，但我们注意到了，在<code>bar</code>函数的内部并没有定义<code>a</code>和<code>b</code>两个变量，那么<code>a</code>和<code>b</code>是从哪里来的。我们在上面代码的<code>if</code>分支中定义了一个变量<code>a</code>，这是一个全局变量（global variable），属于全局作用域，因为它没有定义在任何一个函数中。在上面的<code>foo</code>函数中我们定义了变量<code>b</code>，这是一个定义在函数中的局部变量（local variable），属于局部作用域，在<code>foo</code>函数的外部并不能访问到它；但对于<code>foo</code>函数内部的<code>bar</code>函数来说，变量<code>b</code>属于嵌套作用域，在<code>bar</code>函数中我们是可以访问到它的。<code>bar</code>函数中的变量<code>c</code>属于局部作用域，在<code>bar</code>函数之外是无法访问的。事实上，Python查找一个变量时会按照“局部作用域”、“嵌套作用域”、“全局作用域”和“内置作用域”的顺序进行搜索，前三者我们在上面的代码中已经看到了，所谓的“内置作用域”就是Python内置的那些标识符，我们之前用过的<code>input</code>、<code>print</code>、<code>int</code>等都属于内置作用域。</p><p>再看看下面这段代码，我们希望通过函数调用修改全局变量<code>a</code>的值，但实际上下面的代码是做不到的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    a = <span class="number">200</span></span><br><span class="line">    <span class="built_in">print</span>(a)  <span class="comment"># 200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = <span class="number">100</span></span><br><span class="line">    foo()</span><br><span class="line">    <span class="built_in">print</span>(a)  <span class="comment"># 100</span></span><br></pre></td></tr></table></figure><p>在调用<code>foo</code>函数后，我们发现<code>a</code>的值仍然是100，这是因为当我们在函数<code>foo</code>中写<code>a = 200</code>的时候，是重新定义了一个名字为<code>a</code>的局部变量，它跟全局作用域的<code>a</code>并不是同一个变量，因为局部作用域中有了自己的变量<code>a</code>，因此<code>foo</code>函数不再搜索全局作用域中的<code>a</code>。如果我们希望在<code>foo</code>函数中修改全局作用域中的<code>a</code>，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="keyword">global</span> a</span><br><span class="line">    a = <span class="number">200</span></span><br><span class="line">    <span class="built_in">print</span>(a)  <span class="comment"># 200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    a = <span class="number">100</span></span><br><span class="line">    foo()</span><br><span class="line">    <span class="built_in">print</span>(a)  <span class="comment"># 200</span></span><br></pre></td></tr></table></figure><p>我们可以使用<code>global</code>关键字来指示<code>foo</code>函数中的变量<code>a</code>来自于全局作用域，如果全局作用域中没有<code>a</code>，那么下面一行的代码就会定义变量<code>a</code>并将其置于全局作用域。同理，如果我们希望函数内部的函数能够修改嵌套作用域中的变量，可以使用<code>nonlocal</code>关键字来指示变量来自于嵌套作用域，请大家自行试验。</p><p>在实际开发中，我们应该尽量减少对全局变量的使用，因为全局变量的作用域和影响过于广泛，可能会发生意料之外的修改和使用，除此之外全局变量比局部变量拥有更长的生命周期，可能导致对象占用的内存长时间无法被<a href="https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8">垃圾回收</a>)。事实上，减少对全局变量的使用，也是降低代码之间耦合度的一个重要举措，同时也是对<a href="https://zh.wikipedia.org/zh-hans/%E5%BE%97%E5%A2%A8%E5%BF%92%E8%80%B3%E5%AE%9A%E5%BE%8B">迪米特法则</a>的践行。减少全局变量的使用就意味着我们应该尽量让变量的作用域在函数的内部，但是如果我们希望将一个局部变量的生命周期延长，使其在定义它的函数调用结束后依然可以使用它的值，这时候就需要使用<a href="https://zh.wikipedia.org/wiki/%E9%97%AD%E5%8C%85_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6">闭包</a>)，这个我们在后续的内容中进行讲解。</p><blockquote><p><strong>说明：</strong> 很多人经常会将“闭包”和<a href="https://zh.wikipedia.org/wiki/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0">“匿名函数”</a>混为一谈，但实际上它们并不是一回事，如果想了解这个概念，可以看看<a href="https://zh.wikipedia.org/wiki/">维基百科</a>的解释或者<a href="https://www.zhihu.com/">知乎</a>上对这个概念的讨论。</p></blockquote><p>说了那么多，其实结论很简单，从现在开始我们可以将Python代码按照下面的格式进行书写，这一点点的改进其实就是在我们理解了函数和作用域的基础上跨出的巨大的一步。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># Todo: Add your code here</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构造程序逻辑</title>
      <link href="/2021/07/02/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/"/>
      <url>/2021/07/02/05.%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h2 id="构造程序逻辑"><a href="#构造程序逻辑" class="headerlink" title="构造程序逻辑"></a>构造程序逻辑</h2><p>学完前面的几个章节后，我觉得有必要在这里带大家做一些练习来巩固之前所学的知识，虽然迄今为止我们学习的内容只是Python的冰山一角，但是这些内容已经足够我们来构建程序中的逻辑。对于编程语言的初学者来说，在学习了Python的核心语言元素（变量、类型、运算符、表达式、分支结构、循环结构等）之后，必须做的一件事情就是尝试用所学知识去解决现实中的问题，换句话说就是锻炼自己把用人类自然语言描述的算法（解决问题的方法和步骤）翻译成Python代码的能力，而这件事情必须通过大量的练习才能达成。</p><p>我们在本章为大家整理了一些经典的案例和习题，希望通过这些例子，一方面帮助大家巩固之前所学的Python知识，另一方面帮助大家了解如何建立程序中的逻辑以及如何运用一些简单的算法解决现实中的问题。</p><h3 id="经典的例子"><a href="#经典的例子" class="headerlink" title="经典的例子"></a>经典的例子</h3><ol><li><p>寻找<strong>水仙花数</strong>。</p><blockquote><p><strong>说明</strong>：水仙花数也被称为超完全数字不变数、自恋数、自幂数、阿姆斯特朗数，它是一个3位数，该数字每个位上数字的立方之和正好等于它本身，例如：$1^3 + 5^3+ 3^3=153$。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">找出所有水仙花数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>, <span class="number">1000</span>):</span><br><span class="line">    low = num % <span class="number">10</span></span><br><span class="line">    mid = num // <span class="number">10</span> % <span class="number">10</span></span><br><span class="line">    high = num // <span class="number">100</span></span><br><span class="line">    <span class="keyword">if</span> num == low ** <span class="number">3</span> + mid ** <span class="number">3</span> + high ** <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure><p>在上面的代码中，我们通过整除和求模运算分别找出了一个三位数的个位、十位和百位，这种小技巧在实际开发中还是常用的。用类似的方法，我们还可以实现将一个正整数反转，例如：将12345变成54321，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">正整数的反转</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;num = &#x27;</span>))</span><br><span class="line">reversed_num = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> num &gt; <span class="number">0</span>:</span><br><span class="line">    reversed_num = reversed_num * <span class="number">10</span> + num % <span class="number">10</span></span><br><span class="line">    num //= <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(reversed_num)</span><br></pre></td></tr></table></figure></li><li><p><strong>百钱百鸡</strong>问题。</p><blockquote><p><strong>说明</strong>：百钱百鸡是我国古代数学家<a href="https://baike.baidu.com/item/%E5%BC%A0%E4%B8%98%E5%BB%BA/10246238">张丘建</a>在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？翻译成现代文是：公鸡5元一只，母鸡3元一只，小鸡1元三只，用100块钱买一百只鸡，问公鸡、母鸡、小鸡各有多少只？</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">《百钱百鸡》问题</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">33</span>):</span><br><span class="line">        z = <span class="number">100</span> - x - y</span><br><span class="line">        <span class="keyword">if</span> <span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> == <span class="number">100</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;公鸡: %d只, 母鸡: %d只, 小鸡: %d只&#x27;</span> % (x, y, z))</span><br></pre></td></tr></table></figure><p>上面使用的方法叫做<strong>穷举法</strong>，也称为<strong>暴力搜索法</strong>，这种方法通过一项一项的列举备选解决方案中所有可能的候选项并检查每个候选项是否符合问题的描述，最终得到问题的解。这种方法看起来比较笨拙，但对于运算能力非常强大的计算机来说，通常都是一个可行的甚至是不错的选择，而且问题的解如果存在，这种方法一定能够找到它。</p></li><li><p><strong>CRAPS赌博游戏</strong>。</p><blockquote><p><strong>说明</strong>：CRAPS又称花旗骰，是美国拉斯维加斯非常受欢迎的一种的桌上赌博游戏。该游戏使用两粒骰子，玩家通过摇两粒骰子获得点数进行游戏。简单的规则是：玩家第一次摇骰子如果摇出了7点或11点，玩家胜；玩家第一次如果摇出2点、3点或12点，庄家胜；其他点数玩家继续摇骰子，如果玩家摇出了7点，庄家胜；如果玩家摇出了第一次摇的点数，玩家胜；其他点数，玩家继续要骰子，直到分出胜负。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Craps赌博游戏</span></span><br><span class="line"><span class="string">我们设定玩家开始游戏时有1000元的赌注</span></span><br><span class="line"><span class="string">游戏结束的条件是玩家输光所有的赌注</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Mr.z</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line">money = <span class="number">1000</span></span><br><span class="line"><span class="keyword">while</span> money &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你的总资产为:&#x27;</span>, money)</span><br><span class="line">    needs_go_on = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        debt = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请下注: &#x27;</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt; debt &lt;= money:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    first = randint(<span class="number">1</span>, <span class="number">6</span>) + randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;玩家摇出了%d点&#x27;</span> % first)</span><br><span class="line">    <span class="keyword">if</span> first == <span class="number">7</span> <span class="keyword">or</span> first == <span class="number">11</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;玩家胜!&#x27;</span>)</span><br><span class="line">        money += debt</span><br><span class="line">    <span class="keyword">elif</span> first == <span class="number">2</span> <span class="keyword">or</span> first == <span class="number">3</span> <span class="keyword">or</span> first == <span class="number">12</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;庄家胜!&#x27;</span>)</span><br><span class="line">        money -= debt</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        needs_go_on = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> needs_go_on:</span><br><span class="line">        needs_go_on = <span class="literal">False</span></span><br><span class="line">        current = randint(<span class="number">1</span>, <span class="number">6</span>) + randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;玩家摇出了%d点&#x27;</span> % current)</span><br><span class="line">        <span class="keyword">if</span> current == <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;庄家胜&#x27;</span>)</span><br><span class="line">            money -= debt</span><br><span class="line">        <span class="keyword">elif</span> current == first:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;玩家胜&#x27;</span>)</span><br><span class="line">            money += debt</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            needs_go_on = <span class="literal">True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你破产了, 游戏结束!&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="有用的练习"><a href="#有用的练习" class="headerlink" title="有用的练习"></a>有用的练习</h3><ol><li><p>生成<strong>斐波那契数列</strong>的前20个数。</p><blockquote><p><strong>说明</strong>：斐波那契数列（Fibonacci sequence），又称黄金分割数列，是意大利数学家莱昂纳多·斐波那契（Leonardoda Fibonacci）在《计算之书》中提出一个在理想假设条件下兔子成长率的问题而引入的数列，所以这个数列也被戏称为&quot;兔子数列&quot;。斐波那契数列的特点是数列的前两个数都是1，从第三个数开始，每个数都是它前面两个数的和，形如：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …。斐波那契数列在现代物理、准晶体结构、化学等领域都有直接的应用。</p></blockquote></li><li><p>找出10000以内的<strong>完美数</strong>。</p><blockquote><p><strong>说明</strong>：完美数又称为完全数或完备数，它的所有的真因子（即除了自身以外的因子）的和（即因子函数）恰好等于它本身。例如：6（$6=1+2+3$）和28（$28=1+2+4+7+14$）就是完美数。完美数有很多神奇的特性，有兴趣的可以自行了解。</p></blockquote></li><li><p>输出<strong>100以内所有的素数</strong>。</p><blockquote><p><strong>说明</strong>：素数指的是只能被1和自身整除的正整数（不包括1）。</p></blockquote></li></ol><p>上面练习的参考答案在本章对应的代码目录中，如果需要帮助请读者自行查看参考答案。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象编程基础</title>
      <link href="/2021/07/02/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/07/02/08.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="面向对象编程基础"><a href="#面向对象编程基础" class="headerlink" title="面向对象编程基础"></a>面向对象编程基础</h2><p>活在当下的程序员应该都听过&quot;面向对象编程&quot;一词，也经常有人问能不能用一句话解释下什么是&quot;面向对象编程&quot;，我们先来看看比较正式的说法。</p><p>&quot;把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（encapsulation）隐藏内部细节，通过继承（inheritance）实现类的特化（specialization）和泛化（generalization），通过多态（polymorphism）实现基于对象类型的动态分派。&quot;</p><p>这样一说是不是更不明白了。所以我们还是看看更通俗易懂的说法，下面这段内容来自于<a href="https://www.zhihu.com/">知乎</a>。</p><p><img src="./res/oop-zhihu.png" alt=""></p><blockquote><p><strong>说明：</strong> 以上的内容来自于网络，不代表作者本人的观点和看法，与作者本人立场无关，相关责任不由作者承担。</p></blockquote><p>之前我们说过&quot;<strong>程序是指令的集合</strong>&quot;，我们在程序中书写的语句在执行时会变成一条或多条指令然后由CPU去执行。当然为了简化程序的设计，我们引入了函数的概念，把相对独立且经常重复使用的代码放置到函数中，在需要使用这些功能的时候只要调用函数即可；如果一个函数的功能过于复杂和臃肿，我们又可以进一步将函数继续切分为子函数来降低系统的复杂性。但是说了这么多，不知道大家是否发现，所谓编程就是程序员按照计算机的工作方式控制计算机完成各种任务。但是，计算机的工作方式与正常人类的思维模式是不同的，如果编程就必须得抛弃人类正常的思维方式去迎合计算机，编程的乐趣就少了很多，&quot;每个人都应该学习编程&quot;这样的豪言壮语就只能说说而已。当然，这些还不是最重要的，最重要的是当我们需要开发一个复杂的系统时，代码的复杂性会让开发和维护工作都变得举步维艰，所以在上世纪60年代末期，&quot;<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA">软件危机</a>&quot;、&quot;<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B">软件工程</a>&quot;等一系列的概念开始在行业中出现。</p><p>当然，程序员圈子内的人都知道，现实中并没有解决上面所说的这些问题的&quot;<a href="https://zh.wikipedia.org/wiki/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9">银弹</a>&quot;，真正让软件开发者看到希望的是上世纪70年代诞生的<a href="https://zh.wikipedia.org/wiki/Smalltalk">Smalltalk</a>编程语言中引入的面向对象的编程思想（面向对象编程的雏形可以追溯到更早期的<a href="https://zh.wikipedia.org/wiki/Simula">Simula</a>语言）。按照这种编程理念，程序中的数据和操作数据的函数是一个逻辑上的整体，我们称之为“对象”，而我们解决问题的方式就是创建出需要的对象并向对象发出各种各样的消息，多个对象的协同工作最终可以让我们构造出复杂的系统来解决现实中的问题。</p><blockquote><p><strong>说明：</strong> 当然面向对象也不是解决软件开发中所有问题的最后的“银弹”，所以今天的高级程序设计语言几乎都提供了对多种编程范式的支持，Python也不例外。</p></blockquote><h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><p>简单的说，类是对象的蓝图和模板，而对象是类的实例。这个解释虽然有点像用概念在解释概念，但是从这句话我们至少可以看出，类是抽象的概念，而对象是具体的东西。在面向对象编程的世界中，一切皆为对象，对象都有属性和行为，每个对象都是独一无二的，而且对象一定属于某个类（型）。当我们把一大堆拥有共同特征的对象的静态特征（属性）和动态特征（行为）都抽取出来后，就可以定义出一个叫做“类”的东西。</p><p><img src="./res/object-feature.png" alt=""></p><h3 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h3><p>在Python中可以使用<code>class</code>关键字定义类，然后在类中通过之前学习过的函数来定义方法，这样就可以将对象的动态特征描述出来，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># __init__是一个特殊方法用于在创建对象时进行初始化操作</span></span><br><span class="line">    <span class="comment"># 通过这个方法我们可以为学生对象绑定name和age两个属性</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self, course_name</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s正在学习%s.&#x27;</span> % (self.name, course_name))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># PEP 8要求标识符的名字用全小写多个单词用下划线连接</span></span><br><span class="line">    <span class="comment"># 但是部分程序员和公司更倾向于使用驼峰命名法(驼峰标识)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">watch_movie</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.age &lt; <span class="number">18</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s只能观看《熊出没》.&#x27;</span> % self.name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在观看岛国爱情大电影.&#x27;</span> % self.name)</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 写在类中的函数，我们通常称之为（对象的）方法，这些方法就是对象可以接收的消息。</p></blockquote><h3 id="创建和使用对象"><a href="#创建和使用对象" class="headerlink" title="创建和使用对象"></a>创建和使用对象</h3><p>当我们定义好一个类之后，可以通过下面的方式来创建对象并给对象发消息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 创建学生对象并指定姓名和年龄</span></span><br><span class="line">    stu1 = Student(<span class="string">&#x27;Mr.z&#x27;</span>, <span class="number">38</span>)</span><br><span class="line">    <span class="comment"># 给对象发study消息</span></span><br><span class="line">    stu1.study(<span class="string">&#x27;Python程序设计&#x27;</span>)</span><br><span class="line">    <span class="comment"># 给对象发watch_av消息</span></span><br><span class="line">    stu1.watch_movie()</span><br><span class="line">    stu2 = Student(<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">15</span>)</span><br><span class="line">    stu2.study(<span class="string">&#x27;思想品德&#x27;</span>)</span><br><span class="line">    stu2.watch_movie()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="访问可见性问题"><a href="#访问可见性问题" class="headerlink" title="访问可见性问题"></a>访问可见性问题</h3><p>对于上面的代码，有C++、Java、C#等编程经验的程序员可能会问，我们给<code>Student</code>对象绑定的<code>name</code>和<code>age</code>属性到底具有怎样的访问权限（也称为可见性）。因为在很多面向对象编程语言中，我们通常会将对象的属性设置为私有的（private）或受保护的（protected），简单的说就是不允许外界访问，而对象的方法通常都是公开的（public），因为公开的方法就是对象能够接受的消息。在Python中，属性和方法的访问权限只有两种，也就是公开的和私有的，如果希望属性是私有的，在给属性命名时可以用两个下划线作为开头，下面的代码可以验证这一点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, foo</span>):</span><br><span class="line">        self.__foo = foo</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__bar</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.__foo)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__bar&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    test = Test(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    <span class="comment"># AttributeError: &#x27;Test&#x27; object has no attribute &#x27;__bar&#x27;</span></span><br><span class="line">    test.__bar()</span><br><span class="line">    <span class="comment"># AttributeError: &#x27;Test&#x27; object has no attribute &#x27;__foo&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(test.__foo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>但是，Python并没有从语法上严格保证私有属性或方法的私密性，它只是给私有的属性和方法换了一个名字来妨碍对它们的访问，事实上如果你知道更换名字的规则仍然可以访问到它们，下面的代码就可以验证这一点。之所以这样设定，可以用这样一句名言加以解释，就是&quot;<strong>We are all consenting adults here</strong>&quot;。因为绝大多数程序员都认为开放比封闭要好，而且程序员要自己为自己的行为负责。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, foo</span>):</span><br><span class="line">        self.__foo = foo</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__bar</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.__foo)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;__bar&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    test = Test(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    test._Test__bar()</span><br><span class="line">    <span class="built_in">print</span>(test._Test__foo)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在实际开发中，我们并不建议将属性设置为私有的，因为这会导致子类无法访问（后面会讲到）。所以大多数Python程序员会遵循一种命名惯例就是让属性名以单下划线开头来表示属性是受保护的，本类之外的代码在访问这样的属性时应该要保持慎重。这种做法并不是语法上的规则，单下划线开头的属性和方法外界仍然是可以访问的，所以更多的时候它是一种暗示或隐喻，关于这一点可以看看我的<a href="http://blog.csdn.net/jackfrued/article/details/79521404">《Python - 那些年我们踩过的那些坑》</a>文章中的讲解。</p><h3 id="面向对象的支柱"><a href="#面向对象的支柱" class="headerlink" title="面向对象的支柱"></a>面向对象的支柱</h3><p>面向对象有三大支柱：封装、继承和多态。后面两个概念在下一个章节中进行详细的说明，这里我们先说一下什么是封装。我自己对封装的理解是&quot;隐藏一切可以隐藏的实现细节，只向外界暴露（提供）简单的编程接口&quot;。我们在类中定义的方法其实就是把数据和对数据的操作封装起来了，在我们创建了对象之后，只需要给对象发送一个消息（调用方法）就可以执行方法中的代码，也就是说我们只需要知道方法的名字和传入的参数（方法的外部视图），而不需要知道方法内部的实现细节（方法的内部视图）。</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：定义一个类描述数字时钟。"><a href="#练习1：定义一个类描述数字时钟。" class="headerlink" title="练习1：定义一个类描述数字时钟。"></a>练习1：定义一个类描述数字时钟。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;数字时钟&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param hour: 时</span></span><br><span class="line"><span class="string">        :param minute: 分</span></span><br><span class="line"><span class="string">        :param second: 秒</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self._hour = hour</span><br><span class="line">        self._minute = minute</span><br><span class="line">        self._second = second</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;走字&quot;&quot;&quot;</span></span><br><span class="line">        self._second += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</span><br><span class="line">            self._second = <span class="number">0</span></span><br><span class="line">            self._minute += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</span><br><span class="line">                self._minute = <span class="number">0</span></span><br><span class="line">                self._hour += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</span><br><span class="line">                    self._hour = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;显示时间&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;%02d:%02d:%02d&#x27;</span> % \</span><br><span class="line">               (self._hour, self._minute, self._second)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    clock = Clock(<span class="number">23</span>, <span class="number">59</span>, <span class="number">58</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(clock.show())</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        clock.run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"><a href="#练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。" class="headerlink" title="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"></a>练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x=<span class="number">0</span>, y=<span class="number">0</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param x: 横坐标</span></span><br><span class="line"><span class="string">        :param y: 纵坐标</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_to</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;移动到指定位置</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param x: 新的横坐标</span></span><br><span class="line"><span class="string">        &quot;param y: 新的纵坐标</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_by</span>(<span class="params">self, dx, dy</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;移动指定的增量</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param dx: 横坐标的增量</span></span><br><span class="line"><span class="string">        &quot;param dy: 纵坐标的增量</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.x += dx</span><br><span class="line">        self.y += dy</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">distance_to</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算与另一个点的距离</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param other: 另一个点</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = self.x - other.x</span><br><span class="line">        dy = self.y - other.y</span><br><span class="line">        <span class="keyword">return</span> sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;(%s, %s)&#x27;</span> % (<span class="built_in">str</span>(self.x), <span class="built_in">str</span>(self.y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    p1 = Point(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">    p2 = Point()</span><br><span class="line">    <span class="built_in">print</span>(p1)</span><br><span class="line">    <span class="built_in">print</span>(p2)</span><br><span class="line">    p2.move_by(-<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(p2)</span><br><span class="line">    <span class="built_in">print</span>(p1.distance_to(p2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 本章中的插图来自于Grady Booch等著作的<a href="https://item.jd.com/20476561918.html">《面向对象分析与设计》</a>一书，该书是讲解面向对象编程的经典著作，有兴趣的读者可以购买和阅读这本书来了解更多的面向对象的相关知识。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图形界面和游戏开发</title>
      <link href="/2021/07/02/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
      <url>/2021/07/02/10.%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="图形用户界面和游戏开发"><a href="#图形用户界面和游戏开发" class="headerlink" title="图形用户界面和游戏开发"></a>图形用户界面和游戏开发</h2><h3 id="基于tkinter模块的GUI"><a href="#基于tkinter模块的GUI" class="headerlink" title="基于tkinter模块的GUI"></a>基于tkinter模块的GUI</h3><p>GUI是图形用户界面的缩写，图形化的用户界面对使用过计算机的人来说应该都不陌生，在此也无需进行赘述。Python默认的GUI开发模块是tkinter（在Python 3以前的版本中名为Tkinter），从这个名字就可以看出它是基于Tk的，Tk是一个工具包，最初是为Tcl设计的，后来被移植到很多其他的脚本语言中，它提供了跨平台的GUI控件。当然Tk并不是最新和最好的选择，也没有功能特别强大的GUI控件，事实上，开发GUI应用并不是Python最擅长的工作，如果真的需要使用Python开发GUI应用，wxPython、PyQt、PyGTK等模块都是不错的选择。</p><p>基本上使用tkinter来开发GUI应用需要以下5个步骤：</p><ol><li>导入tkinter模块中我们需要的东西。</li><li>创建一个顶层窗口对象并用它来承载整个GUI应用。</li><li>在顶层窗口对象上添加GUI组件。</li><li>通过代码将这些GUI组件的功能组织起来。</li><li>进入主事件循环(main loop)。</li></ol><p>下面的代码演示了如何使用tkinter做一个简单的GUI应用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修改标签上的文字</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">change_label_text</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> flag</span><br><span class="line">        flag = <span class="keyword">not</span> flag</span><br><span class="line">        color, msg = (<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;Hello, world!&#x27;</span>)\</span><br><span class="line">            <span class="keyword">if</span> flag <span class="keyword">else</span> (<span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;Goodbye, world!&#x27;</span>)</span><br><span class="line">        label.config(text=msg, fg=color)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 确认退出</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">confirm_to_quit</span>():</span><br><span class="line">        <span class="keyword">if</span> tkinter.messagebox.askokcancel(<span class="string">&#x27;温馨提示&#x27;</span>, <span class="string">&#x27;确定要退出吗?&#x27;</span>):</span><br><span class="line">            top.quit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建顶层窗口</span></span><br><span class="line">    top = tkinter.Tk()</span><br><span class="line">    <span class="comment"># 设置窗口大小</span></span><br><span class="line">    top.geometry(<span class="string">&#x27;240x160&#x27;</span>)</span><br><span class="line">    <span class="comment"># 设置窗口标题</span></span><br><span class="line">    top.title(<span class="string">&#x27;小游戏&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建标签对象并添加到顶层窗口</span></span><br><span class="line">    label = tkinter.Label(top, text=<span class="string">&#x27;Hello, world!&#x27;</span>, font=<span class="string">&#x27;Arial -32&#x27;</span>, fg=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    label.pack(expand=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 创建一个装按钮的容器</span></span><br><span class="line">    panel = tkinter.Frame(top)</span><br><span class="line">    <span class="comment"># 创建按钮对象 指定添加到哪个容器中 通过command参数绑定事件回调函数</span></span><br><span class="line">    button1 = tkinter.Button(panel, text=<span class="string">&#x27;修改&#x27;</span>, command=change_label_text)</span><br><span class="line">    button1.pack(side=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">    button2 = tkinter.Button(panel, text=<span class="string">&#x27;退出&#x27;</span>, command=confirm_to_quit)</span><br><span class="line">    button2.pack(side=<span class="string">&#x27;right&#x27;</span>)</span><br><span class="line">    panel.pack(side=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    <span class="comment"># 开启主事件循环</span></span><br><span class="line">    tkinter.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>需要说明的是，GUI应用通常是事件驱动式的，之所以要进入主事件循环就是要监听鼠标、键盘等各种事件的发生并执行对应的代码对事件进行处理，因为事件会持续的发生，所以需要这样的一个循环一直运行着等待下一个事件的发生。另一方面，Tk为控件的摆放提供了三种布局管理器，通过布局管理器可以对控件进行定位，这三种布局管理器分别是：Placer（开发者提供控件的大小和摆放位置）、Packer（自动将控件填充到合适的位置）和Grid（基于网格坐标来摆放控件），此处不进行赘述。</p><h3 id="使用Pygame进行游戏开发"><a href="#使用Pygame进行游戏开发" class="headerlink" title="使用Pygame进行游戏开发"></a>使用Pygame进行游戏开发</h3><p>Pygame是一个开源的Python模块，专门用于多媒体应用（如电子游戏）的开发，其中包含对图像、声音、视频、事件、碰撞等的支持。Pygame建立在<a href="https://zh.wikipedia.org/wiki/SDL">SDL</a>的基础上，SDL是一套跨平台的多媒体开发库，用C语言实现，被广泛的应用于游戏、模拟器、播放器等的开发。而Pygame让游戏开发者不再被底层语言束缚，可以更多的关注游戏的功能和逻辑。</p><p>下面我们来完成一个简单的小游戏，游戏的名字叫“大球吃小球”，当然完成这个游戏并不是重点，学会使用Pygame也不是重点，最重要的我们要在这个过程中体会如何使用前面讲解的面向对象程序设计，学会用这种编程思想去解决现实中的问题。</p><h4 id="制作游戏窗口"><a href="#制作游戏窗口" class="headerlink" title="制作游戏窗口"></a>制作游戏窗口</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</span><br><span class="line">    <span class="comment"># 设置当前窗口的标题</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;大球吃小球&#x27;</span>)</span><br><span class="line">    running = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></span><br><span class="line">    <span class="keyword">while</span> running:</span><br><span class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="在窗口中绘图"><a href="#在窗口中绘图" class="headerlink" title="在窗口中绘图"></a>在窗口中绘图</h4><p>可以通过pygame中draw模块的函数在窗口上绘图，可以绘制的图形包括：线条、矩形、多边形、圆、椭圆、圆弧等。需要说明的是，屏幕坐标系是将屏幕左上角设置为坐标原点<code>(0, 0)</code>，向右是x轴的正向，向下是y轴的正向，在表示位置或者设置尺寸的时候，我们默认的单位都是<a href="https://zh.wikipedia.org/wiki/%E5%83%8F%E7%B4%A0">像素</a>。所谓像素就是屏幕上的一个点，你可以用浏览图片的软件试着将一张图片放大若干倍，就可以看到这些点。pygame中表示颜色用的是色光<a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E8%89%B2">三原色</a>表示法，即通过一个元组或列表来指定颜色的RGB值，每个值都在0~255之间，因为是每种原色都用一个8位（bit）的值来表示，三种颜色相当于一共由24位构成，这也就是常说的“24位颜色表示法”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</span><br><span class="line">    <span class="comment"># 设置当前窗口的标题</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;大球吃小球&#x27;</span>)</span><br><span class="line">    <span class="comment"># 设置窗口的背景色(颜色是由红绿蓝三原色构成的元组)</span></span><br><span class="line">    screen.fill((<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>))</span><br><span class="line">    <span class="comment"># 绘制一个圆(参数分别是: 屏幕, 颜色, 圆心位置, 半径, 0表示填充圆)</span></span><br><span class="line">    pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>,), (<span class="number">100</span>, <span class="number">100</span>), <span class="number">30</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 刷新当前窗口(渲染窗口将绘制的图像呈现出来)</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line">    running = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></span><br><span class="line">    <span class="keyword">while</span> running:</span><br><span class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="加载图像"><a href="#加载图像" class="headerlink" title="加载图像"></a>加载图像</h4><p>如果需要直接加载图像到窗口上，可以使用pygame中image模块的函数来加载图像，再通过之前获得的窗口对象的<code>blit</code>方法渲染图像，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</span><br><span class="line">    <span class="comment"># 设置当前窗口的标题</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;大球吃小球&#x27;</span>)</span><br><span class="line">    <span class="comment"># 设置窗口的背景色(颜色是由红绿蓝三原色构成的元组)</span></span><br><span class="line">    screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="comment"># 通过指定的文件名加载图像</span></span><br><span class="line">    ball_image = pygame.image.load(<span class="string">&#x27;./res/ball.png&#x27;</span>)</span><br><span class="line">    <span class="comment"># 在窗口上渲染图像</span></span><br><span class="line">    screen.blit(ball_image, (<span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line">    <span class="comment"># 刷新当前窗口(渲染窗口将绘制的图像呈现出来)</span></span><br><span class="line">    pygame.display.flip()</span><br><span class="line">    running = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></span><br><span class="line">    <span class="keyword">while</span> running:</span><br><span class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                running = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="实现动画效果"><a href="#实现动画效果" class="headerlink" title="实现动画效果"></a>实现动画效果</h4><p>说到<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E7%94%BB">动画</a>这个词大家都不会陌生，事实上要实现动画效果，本身的原理也非常简单，就是将不连续的图片连续的播放，只要每秒钟达到了一定的帧数，那么就可以做出比较流畅的动画效果。如果要让上面代码中的小球动起来，可以将小球的位置用变量来表示，并在循环中修改小球的位置再刷新整个窗口即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</span><br><span class="line">    <span class="comment"># 设置当前窗口的标题</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;大球吃小球&#x27;</span>)</span><br><span class="line">    <span class="comment"># 定义变量来表示小球在屏幕上的位置</span></span><br><span class="line">    x, y = <span class="number">50</span>, <span class="number">50</span></span><br><span class="line">    running = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></span><br><span class="line">    <span class="keyword">while</span> running:</span><br><span class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                running = <span class="literal">False</span></span><br><span class="line">        screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>,), (x, y), <span class="number">30</span>, <span class="number">0</span>)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        <span class="comment"># 每隔50毫秒就改变小球的位置再刷新窗口</span></span><br><span class="line">        pygame.time.delay(<span class="number">50</span>)</span><br><span class="line">        x, y = x + <span class="number">5</span>, y + <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="碰撞检测"><a href="#碰撞检测" class="headerlink" title="碰撞检测"></a>碰撞检测</h4><p>通常一个游戏中会有很多对象出现，而这些对象之间的“碰撞”在所难免，比如炮弹击中了飞机、箱子撞到了地面等。碰撞检测在绝大多数的游戏中都是一个必须得处理的至关重要的问题，pygame的sprite（动画精灵）模块就提供了对碰撞检测的支持，这里我们暂时不介绍sprite模块提供的功能，因为要检测两个小球有没有碰撞其实非常简单，只需要检查球心的距离有没有小于两个球的半径之和。为了制造出更多的小球，我们可以通过对鼠标事件的处理，在点击鼠标的位置创建颜色、大小和移动速度都随机的小球，当然要做到这一点，我们可以把之前学习到的面向对象的知识应用起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Color</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;颜色&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    RED = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    GREEN = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    BLUE = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">    BLACK = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    WHITE = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">    GRAY = (<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">random_color</span>():</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获得随机颜色&quot;&quot;&quot;</span></span><br><span class="line">        r = randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">        g = randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">        b = randint(<span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">        <span class="keyword">return</span> (r, g, b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ball</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;球&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x, y, radius, sx, sy, color=Color.RED</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法&quot;&quot;&quot;</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line">        self.radius = radius</span><br><span class="line">        self.sx = sx</span><br><span class="line">        self.sy = sy</span><br><span class="line">        self.color = color</span><br><span class="line">        self.alive = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">self, screen</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;移动&quot;&quot;&quot;</span></span><br><span class="line">        self.x += self.sx</span><br><span class="line">        self.y += self.sy</span><br><span class="line">        <span class="keyword">if</span> self.x - self.radius &lt;= <span class="number">0</span> <span class="keyword">or</span> \</span><br><span class="line">                self.x + self.radius &gt;= screen.get_width():</span><br><span class="line">            self.sx = -self.sx</span><br><span class="line">        <span class="keyword">if</span> self.y - self.radius &lt;= <span class="number">0</span> <span class="keyword">or</span> \</span><br><span class="line">                self.y + self.radius &gt;= screen.get_height():</span><br><span class="line">            self.sy = -self.sy</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;吃其他球&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.alive <span class="keyword">and</span> other.alive <span class="keyword">and</span> self != other:</span><br><span class="line">            dx, dy = self.x - other.x, self.y - other.y</span><br><span class="line">            distance = sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> distance &lt; self.radius + other.radius \</span><br><span class="line">                    <span class="keyword">and</span> self.radius &gt; other.radius:</span><br><span class="line">                other.alive = <span class="literal">False</span></span><br><span class="line">                self.radius = self.radius + <span class="built_in">int</span>(other.radius * <span class="number">0.146</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">self, screen</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;在窗口上绘制球&quot;&quot;&quot;</span></span><br><span class="line">        pygame.draw.circle(screen, self.color,</span><br><span class="line">                           (self.x, self.y), self.radius, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h4><p>可以在事件循环中对鼠标事件进行处理，通过事件对象的<code>type</code>属性可以判定事件类型，再通过<code>pos</code>属性就可以获得鼠标点击的位置。如果要处理键盘事件也是在这个地方，做法与处理鼠标事件类似。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 定义用来装所有球的容器</span></span><br><span class="line">    balls = []</span><br><span class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></span><br><span class="line">    pygame.init()</span><br><span class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</span><br><span class="line">    <span class="comment"># 设置当前窗口的标题</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;大球吃小球&#x27;</span>)</span><br><span class="line">    running = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></span><br><span class="line">    <span class="keyword">while</span> running:</span><br><span class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                running = <span class="literal">False</span></span><br><span class="line">            <span class="comment"># 处理鼠标事件的代码</span></span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.MOUSEBUTTONDOWN <span class="keyword">and</span> event.button == <span class="number">1</span>:</span><br><span class="line">                <span class="comment"># 获得点击鼠标的位置</span></span><br><span class="line">                x, y = event.pos</span><br><span class="line">                radius = randint(<span class="number">10</span>, <span class="number">100</span>)</span><br><span class="line">                sx, sy = randint(-<span class="number">10</span>, <span class="number">10</span>), randint(-<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">                color = Color.random_color()</span><br><span class="line">                <span class="comment"># 在点击鼠标的位置创建一个球(大小、速度和颜色随机)</span></span><br><span class="line">                ball = Ball(x, y, radius, sx, sy, color)</span><br><span class="line">                <span class="comment"># 将球添加到列表容器中</span></span><br><span class="line">                balls.append(ball)</span><br><span class="line">        screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        <span class="comment"># 取出容器中的球 如果没被吃掉就绘制 被吃掉了就移除</span></span><br><span class="line">        <span class="keyword">for</span> ball <span class="keyword">in</span> balls:</span><br><span class="line">            <span class="keyword">if</span> ball.alive:</span><br><span class="line">                ball.draw(screen)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                balls.remove(ball)</span><br><span class="line">        pygame.display.flip()</span><br><span class="line">        <span class="comment"># 每隔50毫秒就改变球的位置再刷新窗口</span></span><br><span class="line">        pygame.time.delay(<span class="number">50</span>)</span><br><span class="line">        <span class="keyword">for</span> ball <span class="keyword">in</span> balls:</span><br><span class="line">            ball.move(screen)</span><br><span class="line">            <span class="comment"># 检查球有没有吃到其他的球</span></span><br><span class="line">            <span class="keyword">for</span> other <span class="keyword">in</span> balls:</span><br><span class="line">                ball.eat(other)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>上面的两段代码合在一起，我们就完成了“大球吃小球”的游戏（如下图所示），准确的说它算不上一个游戏，但是做一个小游戏的基本知识我们已经通过这个例子告诉大家了，有了这些知识已经可以开始你的小游戏开发之旅了。其实上面的代码中还有很多值得改进的地方，比如刷新窗口以及让球移动起来的代码并不应该放在事件循环中，等学习了多线程的知识后，用一个后台线程来处理这些事可能是更好的选择。如果希望获得更好的用户体验，我们还可以在游戏中加入背景音乐以及在球与球发生碰撞时播放音效，利用pygame的mixer和music模块，我们可以很容易的做到这一点，大家可以自行了解这方面的知识。事实上，想了解更多的关于pygame的知识，最好的教程是<a href="https://www.pygame.org/news">pygame的官方网站</a>，如果英语没毛病就可以赶紧去看看啦。 如果想开发<a href="https://zh.wikipedia.org/wiki/3D%E6%B8%B8%E6%88%8F">3D游戏</a>，pygame就显得力不从心了，对3D游戏开发如果有兴趣的读者不妨看看<a href="https://www.panda3d.org/">Panda3D</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件和异常</title>
      <link href="/2021/07/02/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
      <url>/2021/07/02/11.%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="文件和异常"><a href="#文件和异常" class="headerlink" title="文件和异常"></a>文件和异常</h2><p>实际开发中常常会遇到对数据进行<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96">持久化</a>操作的场景，而实现数据持久化最直接简单的方式就是将数据保存到文件中。说到“文件”这个词，可能需要先科普一下关于<a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">文件系统</a>的知识，但是这里我们并不浪费笔墨介绍这个概念，请大家自行通过维基百科进行了解。</p><p>在Python中实现文件的读写操作其实非常简单，通过Python内置的<code>open</code>函数，我们可以指定文件名、操作模式、编码信息等来获得操作文件的对象，接下来就可以对文件进行读写操作了。这里所说的操作模式是指要打开什么样的文件（字符文件还是二进制文件）以及做什么样的操作（读、写还是追加），具体的如下表所示。</p><div class="table-container"><table><thead><tr><th>操作模式</th><th>具体含义</th></tr></thead><tbody><tr><td><code>&#39;r&#39;</code></td><td>读取 （默认）</td></tr><tr><td><code>&#39;w&#39;</code></td><td>写入（会先截断之前的内容）</td></tr><tr><td><code>&#39;x&#39;</code></td><td>写入，如果文件已经存在会产生异常</td></tr><tr><td><code>&#39;a&#39;</code></td><td>追加，将内容写入到已有文件的末尾</td></tr><tr><td><code>&#39;b&#39;</code></td><td>二进制模式</td></tr><tr><td><code>&#39;t&#39;</code></td><td>文本模式（默认）</td></tr><tr><td><code>&#39;+&#39;</code></td><td>更新（既可以读又可以写）</td></tr></tbody></table></div><p>下面这张图来自于<a href="http://www.runoob.com">菜鸟教程</a>网站，它展示了如果根据应用程序的需要来设置操作模式。</p><p><img src="./res/file-open-mode.png" alt=""></p><h3 id="读写文本文件"><a href="#读写文本文件" class="headerlink" title="读写文本文件"></a>读写文本文件</h3><p>读取文本文件时，需要在使用<code>open</code>函数时指定好带路径的文件名（可以使用相对路径或绝对路径）并将文件模式设置为<code>&#39;r&#39;</code>（如果不指定，默认值也是<code>&#39;r&#39;</code>），然后通过<code>encoding</code>参数指定编码（如果不指定，默认值是None，那么在读取文件时使用的是操作系统默认的编码），如果不能保证保存文件时使用的编码方式与encoding参数指定的编码方式是一致的，那么就可能因无法解码字符而导致读取失败。下面的例子演示了如何读取一个纯文本文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;致橡树.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(f.read())</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>请注意上面的代码，如果<code>open</code>函数指定的文件并不存在或者无法打开，那么将引发异常状况导致程序崩溃。为了让代码有一定的健壮性和容错性，我们可以使用Python的异常机制对可能在运行时发生状况的代码进行适当的处理，如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    f = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = <span class="built_in">open</span>(<span class="string">&#x27;致橡树.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(f.read())</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;无法打开指定的文件!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> LookupError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;指定了未知的编码!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;读取文件时解码错误!&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> f:</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在Python中，我们可以将那些在运行时可能会出现状况的代码放在<code>try</code>代码块中，在<code>try</code>代码块的后面可以跟上一个或多个<code>except</code>来捕获可能出现的异常状况。例如在上面读取文件的过程中，文件找不到会引发<code>FileNotFoundError</code>，指定了未知的编码会引发<code>LookupError</code>，而如果读取文件时无法按指定方式解码会引发<code>UnicodeDecodeError</code>，我们在<code>try</code>后面跟上了三个<code>except</code>分别处理这三种不同的异常状况。最后我们使用<code>finally</code>代码块来关闭打开的文件，释放掉程序中获取的外部资源，由于<code>finally</code>块的代码不论程序正常还是异常都会执行到（甚至是调用了<code>sys</code>模块的<code>exit</code>函数退出Python环境，<code>finally</code>块都会被执行，因为<code>exit</code>函数实质上是引发了<code>SystemExit</code>异常），因此我们通常把<code>finally</code>块称为“总是执行代码块”，它最适合用来做释放外部资源的操作。如果不愿意在<code>finally</code>代码块中关闭文件对象释放资源，也可以使用上下文语法，通过<code>with</code>关键字指定文件对象的上下文环境并在离开上下文环境时自动释放文件资源，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;致橡树.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="built_in">print</span>(f.read())</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;无法打开指定的文件!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> LookupError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;指定了未知的编码!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;读取文件时解码错误!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>除了使用文件对象的<code>read</code>方法读取文件之外，还可以使用<code>for-in</code>循环逐行读取或者用<code>readlines</code>方法将文件按行读取到一个列表容器中，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 一次性读取整个文件内容</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;致橡树.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="built_in">print</span>(f.read())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过for-in循环逐行读取</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;致橡树.txt&#x27;</span>, mode=<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            <span class="built_in">print</span>(line, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取文件按行读取到列表中</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;致橡树.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">    <span class="built_in">print</span>(lines)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>要将文本信息写入文件文件也非常简单，在使用<code>open</code>函数时指定好文件名并将文件模式设置为<code>&#39;w&#39;</code>即可。注意如果需要对文件内容进行追加式写入，应该将模式设置为<code>&#39;a&#39;</code>。如果要写入的文件不存在会自动创建文件而不是引发异常。下面的例子演示了如何将1-9999之间的素数分别写入三个文件中（1-99之间的素数保存在a.txt中，100-999之间的素数保存在b.txt中，1000-9999之间的素数保存在c.txt中）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_prime</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;判断素数的函数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">assert</span> n &gt; <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(sqrt(n)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> n % factor == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span> <span class="keyword">if</span> n != <span class="number">1</span> <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    filenames = (<span class="string">&#x27;a.txt&#x27;</span>, <span class="string">&#x27;b.txt&#x27;</span>, <span class="string">&#x27;c.txt&#x27;</span>)</span><br><span class="line">    fs_list = []</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            fs_list.append(<span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10000</span>):</span><br><span class="line">            <span class="keyword">if</span> is_prime(number):</span><br><span class="line">                <span class="keyword">if</span> number &lt; <span class="number">100</span>:</span><br><span class="line">                    fs_list[<span class="number">0</span>].write(<span class="built_in">str</span>(number) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">elif</span> number &lt; <span class="number">1000</span>:</span><br><span class="line">                    fs_list[<span class="number">1</span>].write(<span class="built_in">str</span>(number) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fs_list[<span class="number">2</span>].write(<span class="built_in">str</span>(number) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span>(ex)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;写文件时发生错误!&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">for</span> fs <span class="keyword">in</span> fs_list:</span><br><span class="line">            fs.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;操作完成!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="读写二进制文件"><a href="#读写二进制文件" class="headerlink" title="读写二进制文件"></a>读写二进制文件</h3><p>知道了如何读写文本文件要读写二进制文件也就很简单了，下面的代码实现了复制图片文件的功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;guido.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fs1:</span><br><span class="line">            data = fs1.read()</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">type</span>(data))  <span class="comment"># &lt;class &#x27;bytes&#x27;&gt;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;吉多.jpg&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fs2:</span><br><span class="line">            fs2.write(data)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;指定的文件无法打开.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;读写文件时出现错误.&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;程序执行结束.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="读写JSON文件"><a href="#读写JSON文件" class="headerlink" title="读写JSON文件"></a>读写JSON文件</h3><p>通过上面的讲解，我们已经知道如何将文本数据和二进制数据保存到文件中，那么这里还有一个问题，如果希望把一个列表或者一个字典中的数据保存到文件中又该怎么做呢？答案是将数据以JSON格式进行保存。JSON是“JavaScript Object Notation”的缩写，它本来是JavaScript语言中创建对象的一种字面量语法，现在已经被广泛的应用于跨平台跨语言的数据交换，原因很简单，因为JSON也是纯文本，任何系统任何编程语言处理纯文本都是没有问题的。目前JSON基本上已经取代了XML作为异构系统间交换数据的事实标准。关于JSON的知识，更多的可以参考<a href="http://json.org">JSON的官方网站</a>，从这个网站也可以了解到每种语言处理JSON数据格式可以使用的工具或三方库，下面是一个JSON的简单例子。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mr.z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;qq&quot;</span><span class="punctuation">:</span> <span class="number">957658</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;friends&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;王大锤&quot;</span><span class="punctuation">,</span> <span class="string">&quot;白元芳&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cars&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;brand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BYD&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;max_speed&quot;</span><span class="punctuation">:</span> <span class="number">180</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;brand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Audi&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;max_speed&quot;</span><span class="punctuation">:</span> <span class="number">280</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;brand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Benz&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;max_speed&quot;</span><span class="punctuation">:</span> <span class="number">320</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可能大家已经注意到了，上面的JSON跟Python中的字典其实是一样一样的，事实上JSON的数据类型和Python的数据类型是很容易找到对应关系的，如下面两张表所示。</p><div class="table-container"><table><thead><tr><th>JSON</th><th>Python</th></tr></thead><tbody><tr><td>object</td><td>dict</td></tr><tr><td>array</td><td>list</td></tr><tr><td>string</td><td>str</td></tr><tr><td>number (int / real)</td><td>int / float</td></tr><tr><td>true / false</td><td>True / False</td></tr><tr><td>null</td><td>None</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>Python</th><th>JSON</th></tr></thead><tbody><tr><td>dict</td><td>object</td></tr><tr><td>list, tuple</td><td>array</td></tr><tr><td>str</td><td>string</td></tr><tr><td>int, float, int- &amp; float-derived Enums</td><td>number</td></tr><tr><td>True / False</td><td>true / false</td></tr><tr><td>None</td><td>null</td></tr></tbody></table></div><p>我们使用Python中的json模块就可以将字典或列表以JSON格式保存到文件中，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    mydict = &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Mr.z&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">38</span>,</span><br><span class="line">        <span class="string">&#x27;qq&#x27;</span>: <span class="number">957658</span>,</span><br><span class="line">        <span class="string">&#x27;friends&#x27;</span>: [<span class="string">&#x27;王大锤&#x27;</span>, <span class="string">&#x27;白元芳&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;cars&#x27;</span>: [</span><br><span class="line">            &#123;<span class="string">&#x27;brand&#x27;</span>: <span class="string">&#x27;BYD&#x27;</span>, <span class="string">&#x27;max_speed&#x27;</span>: <span class="number">180</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;brand&#x27;</span>: <span class="string">&#x27;Audi&#x27;</span>, <span class="string">&#x27;max_speed&#x27;</span>: <span class="number">280</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;brand&#x27;</span>: <span class="string">&#x27;Benz&#x27;</span>, <span class="string">&#x27;max_speed&#x27;</span>: <span class="number">320</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fs:</span><br><span class="line">            json.dump(mydict, fs)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;保存数据完成!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>json模块主要有四个比较重要的函数，分别是：</p><ul><li><code>dump</code> - 将Python对象按照JSON格式序列化到文件中</li><li><code>dumps</code> - 将Python对象处理成JSON格式的字符串</li><li><code>load</code> - 将文件中的JSON数据反序列化成对象</li><li><code>loads</code> - 将字符串的内容反序列化成Python对象</li></ul><p>这里出现了两个概念，一个叫序列化，一个叫反序列化。自由的百科全书<a href="https://zh.wikipedia.org/">维基百科</a>上对这两个概念是这样解释的：“序列化（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换为可以存储或传输的形式，这样在需要的时候能够恢复到原先的状态，而且通过序列化的数据重新获取字节时，可以利用这些字节来产生原始对象的副本（拷贝）。与这个过程相反的动作，即从一系列字节中提取数据结构的操作，就是反序列化（deserialization）”。</p><p>目前绝大多数网络数据服务（或称之为网络API）都是基于<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE">HTTP协议</a>提供JSON格式的数据，关于HTTP协议的相关知识，可以看看阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html">《HTTP协议入门》</a>，如果想了解国内的网络数据服务，可以看看<a href="https://www.juhe.cn/">聚合数据</a>和<a href="http://www.avatardata.cn/">阿凡达数据</a>等网站，国外的可以看看<a href="http://apis.io/">{API}Search</a>网站。下面的例子演示了如何使用<a href="http://docs.python-requests.org/zh_CN/latest/">requests</a>模块（封装得足够好的第三方网络访问模块）访问网络API获取国内新闻，如何通过json模块解析JSON数据并显示新闻标题，这个例子使用了<a href="https://www.tianapi.com/">天行数据</a>提供的国内新闻数据接口，其中的APIKey需要自己到该网站申请。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    resp = requests.get(<span class="string">&#x27;http://api.tianapi.com/guonei/?key=APIKey&amp;num=10&#x27;</span>)</span><br><span class="line">    data_model = json.loads(resp.text)</span><br><span class="line">    <span class="keyword">for</span> news <span class="keyword">in</span> data_model[<span class="string">&#x27;newslist&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(news[<span class="string">&#x27;title&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在Python中要实现序列化和反序列化除了使用json模块之外，还可以使用pickle和shelve模块，但是这两个模块是使用特有的序列化协议来序列化数据，因此序列化后的数据只能被Python识别。关于这两个模块的相关知识可以自己看看网络上的资料。另外，如果要了解更多的关于Python异常机制的知识，可以看看segmentfault上面的文章<a href="https://segmentfault.com/a/1190000007736783">《总结：Python中的异常处理》</a>，这篇文章不仅介绍了Python中异常机制的使用，还总结了一系列的最佳实践，很值得一读。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串和正则表达式</title>
      <link href="/2021/07/02/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2021/07/02/12.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="使用正则表达式"><a href="#使用正则表达式" class="headerlink" title="使用正则表达式"></a>使用正则表达式</h2><h3 id="正则表达式相关知识"><a href="#正则表达式相关知识" class="headerlink" title="正则表达式相关知识"></a>正则表达式相关知识</h3><p>在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要，正则表达式就是用于描述这些规则的工具，换句话说正则表达式是一种工具，它定义了字符串的匹配模式（如何检查一个字符串是否有跟某种模式匹配的部分或者从一个字符串中将与模式匹配的部分提取出来或者替换掉）。如果你在Windows操作系统中使用过文件查找并且在指定文件名时使用过通配符（*和?），那么正则表达式也是与之类似的用来进行文本匹配的工具，只不过比起通配符正则表达式更强大，它能更精确地描述你的需求（当然你付出的代价是书写一个正则表达式比打出一个通配符要复杂得多，要知道任何给你带来好处的东西都是有代价的，就如同学习一门编程语言一样），比如你可以编写一个正则表达式，用来查找所有以0开头，后面跟着2-3个数字，然后是一个连字号“-”，最后是7或8位数字的字符串（像028-12345678或0813-7654321），这不就是国内的座机号码吗。最初计算机是为了做数学运算而诞生的，处理的信息基本上都是数值，而今天我们在日常工作中处理的信息基本上都是文本数据，我们希望计算机能够识别和处理符合某些模式的文本，正则表达式就显得非常重要了。今天几乎所有的编程语言都提供了对正则表达式操作的支持，Python通过标准库中的re模块来支持正则表达式操作。</p><p>我们可以考虑下面一个问题：我们从某个地方（可能是一个文本文件，也可能是网络上的一则新闻）获得了一个字符串，希望在字符串中找出手机号和座机号。当然我们可以设定手机号是11位的数字（注意并不是随机的11位数字，因为你没有见过“25012345678”这样的手机号吧）而座机号跟上一段中描述的模式相同，如果不使用正则表达式要完成这个任务就会很麻烦。</p><p>关于正则表达式的相关知识，大家可以阅读一篇非常有名的博客叫<a href="https://deerchao.net/tutorials/regex/regex.htm">《正则表达式30分钟入门教程》</a>，读完这篇文章后你就可以看懂下面的表格，这是我们对正则表达式中的一些基本符号进行的扼要总结。</p><div class="table-container"><table><thead><tr><th>符号</th><th>解释</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>.</td><td>匹配任意字符</td><td>b.t</td><td>可以匹配bat / but / b#t / b1t等</td></tr><tr><td>\w</td><td>匹配字母/数字/下划线</td><td>b\wt</td><td>可以匹配bat / b1t / b_t等<br>但不能匹配b#t</td></tr><tr><td>\s</td><td>匹配空白字符（包括\r、\n、\t等）</td><td>love\syou</td><td>可以匹配love you</td></tr><tr><td>\d</td><td>匹配数字</td><td>\d\d</td><td>可以匹配01 / 23 / 99等</td></tr><tr><td>\b</td><td>匹配单词的边界</td><td>\bThe\b</td><td></td></tr><tr><td>^</td><td>匹配字符串的开始</td><td>^The</td><td>可以匹配The开头的字符串</td></tr><tr><td>$</td><td>匹配字符串的结束</td><td>.exe$</td><td>可以匹配.exe结尾的字符串</td></tr><tr><td>\W</td><td>匹配非字母/数字/下划线</td><td>b\Wt</td><td>可以匹配b#t / b@t等<br>但不能匹配but / b1t / b_t等</td></tr><tr><td>\S</td><td>匹配非空白字符</td><td>love\Syou</td><td>可以匹配love#you等<br>但不能匹配love you</td></tr><tr><td>\D</td><td>匹配非数字</td><td>\d\D</td><td>可以匹配9a / 3# / 0F等</td></tr><tr><td>\B</td><td>匹配非单词边界</td><td>\Bio\B</td><td></td></tr><tr><td>[]</td><td>匹配来自字符集的任意单一字符</td><td>[aeiou]</td><td>可以匹配任一元音字母字符</td></tr><tr><td><sup><a href="#fn_" id="reffn_"></a></sup></td><td>匹配不在字符集中的任意单一字符</td><td><sup><a href="#fn_aeiou" id="reffn_aeiou">aeiou</a></sup></td><td>可以匹配任一非元音字母字符</td></tr><tr><td>*</td><td>匹配0次或多次</td><td>\w*</td><td></td></tr><tr><td>+</td><td>匹配1次或多次</td><td>\w+</td><td></td></tr><tr><td>?</td><td>匹配0次或1次</td><td>\w?</td><td></td></tr><tr><td>{N}</td><td>匹配N次</td><td>\w{3}</td><td></td></tr><tr><td>{M,}</td><td>匹配至少M次</td><td>\w{3,}</td><td></td></tr><tr><td>{M,N}</td><td>匹配至少M次至多N次</td><td>\w{3,6}</td><td></td></tr><tr><td>\</td><td></td><td>分支</td><td>foo\</td><td>bar</td><td>可以匹配foo或者bar</td></tr><tr><td>(?#)</td><td>注释</td><td></td><td></td></tr><tr><td>(exp)</td><td>匹配exp并捕获到自动命名的组中</td><td></td><td></td></tr><tr><td>(?&lt;name&gt;exp)</td><td>匹配exp并捕获到名为name的组中</td><td></td><td></td></tr><tr><td>(?:exp)</td><td>匹配exp但是不捕获匹配的文本</td><td></td><td></td></tr><tr><td>(?=exp)</td><td>匹配exp前面的位置</td><td>\b\w+(?=ing)</td><td>可以匹配I’m dancing中的danc</td></tr><tr><td>(?&lt;=exp)</td><td>匹配exp后面的位置</td><td>(?&lt;=\bdanc)\w+\b</td><td>可以匹配I love dancing and reading中的第一个ing</td></tr><tr><td>(?!exp)</td><td>匹配后面不是exp的位置</td><td></td><td></td></tr><tr><td>(?&lt;!exp)</td><td>匹配前面不是exp的位置</td><td></td><td></td></tr><tr><td>*?</td><td>重复任意次，但尽可能少重复</td><td>a.*b<br>a.*?b</td><td>将正则表达式应用于aabab，前者会匹配整个字符串aabab，后者会匹配aab和ab两个字符串</td></tr><tr><td>+?</td><td>重复1次或多次，但尽可能少重复</td><td></td><td></td></tr><tr><td>??</td><td>重复0次或1次，但尽可能少重复</td><td></td><td></td></tr><tr><td>{M,N}?</td><td>重复M到N次，但尽可能少重复</td><td></td><td></td></tr><tr><td>{M,}?</td><td>重复M次以上，但尽可能少重复</td><td></td></tr></tbody></table></div><blockquote><p><strong>说明：</strong> 如果需要匹配的字符是正则表达式中的特殊字符，那么可以使用\进行转义处理，例如想匹配小数点可以写成\.就可以了，因为直接写.会匹配任意字符；同理，想匹配圆括号必须写成\(和\)，否则圆括号被视为正则表达式中的分组。</p></blockquote><h3 id="Python对正则表达式的支持"><a href="#Python对正则表达式的支持" class="headerlink" title="Python对正则表达式的支持"></a>Python对正则表达式的支持</h3><p>Python提供了re模块来支持正则表达式相关操作，下面是re模块中的核心函数。</p><div class="table-container"><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>compile(pattern, flags=0)</td><td>编译正则表达式返回正则表达式对象</td></tr><tr><td>match(pattern, string, flags=0)</td><td>用正则表达式匹配字符串 成功返回匹配对象 否则返回None</td></tr><tr><td>search(pattern, string, flags=0)</td><td>搜索字符串中第一次出现正则表达式的模式 成功返回匹配对象 否则返回None</td></tr><tr><td>split(pattern, string, maxsplit=0, flags=0)</td><td>用正则表达式指定的模式分隔符拆分字符串 返回列表</td></tr><tr><td>sub(pattern, repl, string, count=0, flags=0)</td><td>用指定的字符串替换原字符串中与正则表达式匹配的模式 可以用count指定替换的次数</td></tr><tr><td>fullmatch(pattern, string, flags=0)</td><td>match函数的完全匹配（从字符串开头到结尾）版本</td></tr><tr><td>findall(pattern, string, flags=0)</td><td>查找字符串所有与正则表达式匹配的模式 返回字符串的列表</td></tr><tr><td>finditer(pattern, string, flags=0)</td><td>查找字符串所有与正则表达式匹配的模式 返回一个迭代器</td></tr><tr><td>purge()</td><td>清除隐式编译的正则表达式的缓存</td></tr><tr><td>re.I / re.IGNORECASE</td><td>忽略大小写匹配标记</td></tr><tr><td>re.M / re.MULTILINE</td><td>多行匹配标记</td></tr></tbody></table></div><blockquote><p><strong>说明：</strong> 上面提到的re模块中的这些函数，实际开发中也可以用正则表达式对象的方法替代对这些函数的使用，如果一个正则表达式需要重复的使用，那么先通过compile函数编译正则表达式并创建出正则表达式对象无疑是更为明智的选择。</p></blockquote><p>下面我们通过一系列的例子来告诉大家在Python中如何使用正则表达式。</p><h4 id="例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。"><a href="#例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。" class="headerlink" title="例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。"></a>例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">验证输入用户名和QQ号是否有效并给出对应的提示信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">要求：用户名必须由字母、数字或下划线构成且长度在6~20个字符之间，QQ号是5~12的数字且首位不能为0</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    username = <span class="built_in">input</span>(<span class="string">&#x27;请输入用户名: &#x27;</span>)</span><br><span class="line">    qq = <span class="built_in">input</span>(<span class="string">&#x27;请输入QQ号: &#x27;</span>)</span><br><span class="line">    <span class="comment"># match函数的第一个参数是正则表达式字符串或正则表达式对象</span></span><br><span class="line">    <span class="comment"># 第二个参数是要跟正则表达式做匹配的字符串对象</span></span><br><span class="line">    m1 = re.<span class="keyword">match</span>(<span class="string">r&#x27;^[0-9a-zA-Z_]&#123;6,20&#125;$&#x27;</span>, username)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> m1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;请输入有效的用户名.&#x27;</span>)</span><br><span class="line">    m2 = re.<span class="keyword">match</span>(<span class="string">r&#x27;^[1-9]\d&#123;4,11&#125;$&#x27;</span>, qq)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> m2:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;请输入有效的QQ号.&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> m1 <span class="keyword">and</span> m2:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你输入的信息是有效的!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示：</strong> 上面在书写正则表达式时使用了“原始字符串”的写法（在字符串前面加上了r），所谓“原始字符串”就是字符串中的每个字符都是它原始的意义，说得更直接一点就是字符串中没有所谓的转义字符啦。因为正则表达式中有很多元字符和需要进行转义的地方，如果不使用原始字符串就需要将反斜杠写作\\，例如表示数字的\d得书写成\\d，这样不仅写起来不方便，阅读的时候也会很吃力。</p></blockquote><h4 id="例子2：从一段文字中提取出国内手机号码。"><a href="#例子2：从一段文字中提取出国内手机号码。" class="headerlink" title="例子2：从一段文字中提取出国内手机号码。"></a>例子2：从一段文字中提取出国内手机号码。</h4><p>下面这张图是截止到2017年底，国内三家运营商推出的手机号段。</p><p><img src="./res/tel-start-number.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 创建正则表达式对象 使用了前瞻和回顾来保证手机号前后不应该出现数字</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(?&lt;=\D)1[34578]\d&#123;9&#125;(?=\D)&#x27;</span>)</span><br><span class="line">    sentence = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    重要的事情说8130123456789遍，我的手机号是13512346789这个靓号，</span></span><br><span class="line"><span class="string">    不是15600998765，也是110或119，王大锤的手机号才是15600998765。</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 查找所有匹配并保存到一个列表中</span></span><br><span class="line">    mylist = re.findall(pattern, sentence)</span><br><span class="line">    <span class="built_in">print</span>(mylist)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;--------华丽的分隔线--------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 通过迭代器取出匹配对象并获得匹配的内容</span></span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> pattern.finditer(sentence):</span><br><span class="line">        <span class="built_in">print</span>(temp.group())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;--------华丽的分隔线--------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 通过search函数指定搜索位置找出所有匹配</span></span><br><span class="line">    m = pattern.search(sentence)</span><br><span class="line">    <span class="keyword">while</span> m:</span><br><span class="line">        <span class="built_in">print</span>(m.group())</span><br><span class="line">        m = pattern.search(sentence, m.end())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 上面匹配国内手机号的正则表达式并不够好，因为像14开头的号码只有145或147，而上面的正则表达式并没有考虑这种情况，要匹配国内手机号，更好的正则表达式的写法是：<code>(?&lt;=\D)(1[38]\d&#123;9&#125;|14[57]\d&#123;8&#125;|15[0-35-9]\d&#123;8&#125;|17[678]\d&#123;8&#125;)(?=\D)</code>，国内最近好像有19和16开头的手机号了，但是这个暂时不在我们考虑之列。</p></blockquote><h4 id="例子3：替换字符串中的不良内容"><a href="#例子3：替换字符串中的不良内容" class="headerlink" title="例子3：替换字符串中的不良内容"></a>例子3：替换字符串中的不良内容</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    sentence = <span class="string">&#x27;你丫是傻叉吗? 我操你大爷的. Fuck you.&#x27;</span></span><br><span class="line">    purified = re.sub(<span class="string">&#x27;[操肏艹]|fuck|shit|傻[比屄逼叉缺吊屌]|煞笔&#x27;</span>,</span><br><span class="line">                      <span class="string">&#x27;*&#x27;</span>, sentence, flags=re.IGNORECASE)</span><br><span class="line">    <span class="built_in">print</span>(purified)  <span class="comment"># 你丫是*吗? 我*你大爷的. * you.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> re模块的正则表达式相关函数中都有一个flags参数，它代表了正则表达式的匹配标记，可以通过该标记来指定匹配时是否忽略大小写、是否进行多行匹配、是否显示调试信息等。如果需要为flags参数指定多个值，可以使用<a href="http://www.runoob.com/python/python-operators.html#ysf5">按位或运算符</a>进行叠加，如<code>flags=re.I | re.M</code>。</p></blockquote><h4 id="例子4：拆分长字符串"><a href="#例子4：拆分长字符串" class="headerlink" title="例子4：拆分长字符串"></a>例子4：拆分长字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    poem = <span class="string">&#x27;窗前明月光，疑是地上霜。举头望明月，低头思故乡。&#x27;</span></span><br><span class="line">    sentence_list = re.split(<span class="string">r&#x27;[，。, .]&#x27;</span>, poem)</span><br><span class="line">    <span class="keyword">while</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">in</span> sentence_list:</span><br><span class="line">        sentence_list.remove(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sentence_list)  <span class="comment"># [&#x27;窗前明月光&#x27;, &#x27;疑是地上霜&#x27;, &#x27;举头望明月&#x27;, &#x27;低头思故乡&#x27;]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h3><p>如果要从事爬虫类应用的开发，那么正则表达式一定是一个非常好的助手，因为它可以帮助我们迅速的从网页代码中发现某种我们指定的模式并提取出我们需要的信息，当然对于初学者来收，要编写一个正确的适当的正则表达式可能并不是一件容易的事情（当然有些常用的正则表达式可以直接在网上找找），所以实际开发爬虫应用的时候，有很多人会选择<a href="https://www.crummy.com/software/BeautifulSoup/">Beautiful Soup</a>或<a href="http://lxml.de/">Lxml</a>来进行匹配和信息的提取，前者简单方便但是性能较差，后者既好用性能也好，但是安装稍嫌麻烦，这些内容我们会在后期的爬虫专题中为大家介绍。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像和办公文档处理</title>
      <link href="/2021/07/02/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/"/>
      <url>/2021/07/02/15.%E5%9B%BE%E5%83%8F%E5%92%8C%E5%8A%9E%E5%85%AC%E6%96%87%E6%A1%A3%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="图像和办公文档处理"><a href="#图像和办公文档处理" class="headerlink" title="图像和办公文档处理"></a>图像和办公文档处理</h2><p>用程序来处理图像和办公文档经常出现在实际开发中，Python的标准库中虽然没有直接支持这些操作的模块，但我们可以通过Python生态圈中的第三方模块来完成这些操作。</p><h3 id="操作图像"><a href="#操作图像" class="headerlink" title="操作图像"></a>操作图像</h3><h4 id="计算机图像相关知识"><a href="#计算机图像相关知识" class="headerlink" title="计算机图像相关知识"></a>计算机图像相关知识</h4><ol><li><p>颜色。如果你有使用颜料画画的经历，那么一定知道混合红、黄、蓝三种颜料可以得到其他的颜色，事实上这三种颜色就是被我们称为美术三原色的东西，它们是不能再分解的基本颜色。在计算机中，我们可以将红、绿、蓝三种色光以不同的比例叠加来组合成其他的颜色，因此这三种颜色就是色光三原色，所以我们通常会将一个颜色表示为一个RGB值或RGBA值（其中的A表示Alpha通道，它决定了透过这个图像的像素，也就是透明度）。</p><p>| 名称  |        RGBA值        |  名称  |       RGBA值       |<br>| :—-: | :—————————: | :——: | :————————: |<br>| White | (255, 255, 255, 255) |  Red   |  (255, 0, 0, 255)  |<br>| Green |   (0, 255, 0, 255)   |  Blue  |  (0, 0, 255, 255)  |<br>| Gray  | (128, 128, 128, 255) | Yellow | (255, 255, 0, 255) |<br>| Black |    (0, 0, 0, 255)    | Purple | (128, 0, 128, 255) |</p></li><li><p>像素。对于一个由数字序列表示的图像来说，最小的单位就是图像上单一颜色的小方格，这些小方块都有一个明确的位置和被分配的色彩数值，而这些一小方格的颜色和位置决定了该图像最终呈现出来的样子，它们是不可分割的单位，我们通常称之为像素（pixel）。每一个图像都包含了一定量的像素，这些像素决定图像在屏幕上所呈现的大小。</p></li></ol><h4 id="用Pillow操作图像"><a href="#用Pillow操作图像" class="headerlink" title="用Pillow操作图像"></a>用Pillow操作图像</h4><p>Pillow是由从著名的Python图像处理库PIL发展出来的一个分支，通过Pillow可以实现图像压缩和图像处理等各种操作。可以使用下面的命令来安装Pillow。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><p>Pillow中最为重要的是Image类，读取和处理图像都要通过这个类来完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.jpg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.<span class="built_in">format</span>, image.size, image.mode</span><br><span class="line">(<span class="string">&#x27;JPEG&#x27;</span>, (<span class="number">500</span>, <span class="number">750</span>), <span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.show()</span><br></pre></td></tr></table></figure><p><img src="./res/image-show.png" alt=""></p><ol><li><p>剪裁图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>image = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.jpg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>rect = <span class="number">80</span>, <span class="number">20</span>, <span class="number">310</span>, <span class="number">360</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.crop(rect).show()</span><br></pre></td></tr></table></figure><p><img src="./res/image-crop.png" alt=""></p></li><li><p>生成缩略图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>image = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.jpg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>size = <span class="number">128</span>, <span class="number">128</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.thumbnail(size)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.show()</span><br></pre></td></tr></table></figure><p><img src="./res/image-thumbnail.png" alt=""></p></li><li><p>缩放和黏贴图像</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>image1 = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/luohao.png&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image2 = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.jpg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>rect = <span class="number">80</span>, <span class="number">20</span>, <span class="number">310</span>, <span class="number">360</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>guido_head = image2.crop(rect)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>width, height = guido_head.size</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image1.paste(guido_head.resize((<span class="built_in">int</span>(width / <span class="number">1.5</span>), <span class="built_in">int</span>(height / <span class="number">1.5</span>))), (<span class="number">172</span>, <span class="number">40</span>))</span><br></pre></td></tr></table></figure><p><img src="./res/image-paste.png" alt=""></p></li><li><p>旋转和翻转</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>image = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.png&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.rotate(<span class="number">180</span>).show()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.transpose(Image.FLIP_LEFT_RIGHT).show()</span><br></pre></td></tr></table></figure><p><img src="./res/image-rotate.png" alt=""></p><p><img src="./res/image-transpose.png" alt=""></p></li><li><p>操作像素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>image = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.jpg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">80</span>, <span class="number">310</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>, <span class="number">360</span>):</span><br><span class="line"><span class="meta">... </span>        image.putpixel((x, y), (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>))</span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.show()</span><br></pre></td></tr></table></figure><p><img src="./res/image-putpixel.png" alt=""></p></li><li><p>滤镜效果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageFilter</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image = Image.<span class="built_in">open</span>(<span class="string">&#x27;./res/guido.jpg&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>image.<span class="built_in">filter</span>(ImageFilter.CONTOUR).show()</span><br></pre></td></tr></table></figure><p><img src="./res/image-filter.png" alt=""></p></li></ol><h3 id="处理Excel电子表格"><a href="#处理Excel电子表格" class="headerlink" title="处理Excel电子表格"></a>处理Excel电子表格</h3><p>Python的openpyxl模块让我们可以在Python程序中读取和修改Excel电子表格，由于微软从Office 2007开始使用了新的文件格式，这使得Office Excel和LibreOffice Calc、OpenOffice Calc是完全兼容的，这就意味着openpyxl模块也能处理来自这些软件生成的电子表格。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook</span><br><span class="line"></span><br><span class="line">wb = Workbook()</span><br><span class="line">ws = wb.active</span><br><span class="line"></span><br><span class="line">ws[<span class="string">&#x27;A1&#x27;</span>] = <span class="number">42</span></span><br><span class="line">ws.append([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">ws[<span class="string">&#x27;A2&#x27;</span>] = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">wb.save(<span class="string">&quot;sample.xlsx&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="处理Word文档"><a href="#处理Word文档" class="headerlink" title="处理Word文档"></a>处理Word文档</h3><p>利用python-docx模块，Python可以创建和修改Word文档，当然这里的Word文档不仅仅是指通过微软的Office软件创建的扩展名为docx的文档，LibreOffice Writer和OpenOffice Writer都是免费的字处理软件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">from</span> docx.shared <span class="keyword">import</span> Inches</span><br><span class="line"></span><br><span class="line">document = Document()</span><br><span class="line"></span><br><span class="line">document.add_heading(<span class="string">&#x27;Document Title&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">p = document.add_paragraph(<span class="string">&#x27;A plain paragraph having some &#x27;</span>)</span><br><span class="line">p.add_run(<span class="string">&#x27;bold&#x27;</span>).bold = <span class="literal">True</span></span><br><span class="line">p.add_run(<span class="string">&#x27; and some &#x27;</span>)</span><br><span class="line">p.add_run(<span class="string">&#x27;italic.&#x27;</span>).italic = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">document.add_heading(<span class="string">&#x27;Heading, level 1&#x27;</span>, level=<span class="number">1</span>)</span><br><span class="line">document.add_paragraph(<span class="string">&#x27;Intense quote&#x27;</span>, style=<span class="string">&#x27;Intense Quote&#x27;</span>)</span><br><span class="line"></span><br><span class="line">document.add_paragraph(</span><br><span class="line">    <span class="string">&#x27;first item in unordered list&#x27;</span>, style=<span class="string">&#x27;List Bullet&#x27;</span></span><br><span class="line">)</span><br><span class="line">document.add_paragraph(</span><br><span class="line">    <span class="string">&#x27;first item in ordered list&#x27;</span>, style=<span class="string">&#x27;List Number&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">document.add_picture(<span class="string">&#x27;monty-truth.png&#x27;</span>, width=Inches(<span class="number">1.25</span>))</span><br><span class="line"></span><br><span class="line">records = (</span><br><span class="line">    (<span class="number">3</span>, <span class="string">&#x27;101&#x27;</span>, <span class="string">&#x27;Spam&#x27;</span>),</span><br><span class="line">    (<span class="number">7</span>, <span class="string">&#x27;422&#x27;</span>, <span class="string">&#x27;Eggs&#x27;</span>),</span><br><span class="line">    (<span class="number">4</span>, <span class="string">&#x27;631&#x27;</span>, <span class="string">&#x27;Spam, spam, eggs, and spam&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">table = document.add_table(rows=<span class="number">1</span>, cols=<span class="number">3</span>)</span><br><span class="line">hdr_cells = table.rows[<span class="number">0</span>].cells</span><br><span class="line">hdr_cells[<span class="number">0</span>].text = <span class="string">&#x27;Qty&#x27;</span></span><br><span class="line">hdr_cells[<span class="number">1</span>].text = <span class="string">&#x27;Id&#x27;</span></span><br><span class="line">hdr_cells[<span class="number">2</span>].text = <span class="string">&#x27;Desc&#x27;</span></span><br><span class="line"><span class="keyword">for</span> qty, <span class="built_in">id</span>, desc <span class="keyword">in</span> records:</span><br><span class="line">    row_cells = table.add_row().cells</span><br><span class="line">    row_cells[<span class="number">0</span>].text = <span class="built_in">str</span>(qty)</span><br><span class="line">    row_cells[<span class="number">1</span>].text = <span class="built_in">id</span></span><br><span class="line">    row_cells[<span class="number">2</span>].text = desc</span><br><span class="line"></span><br><span class="line">document.add_page_break()</span><br><span class="line"></span><br><span class="line">document.save(<span class="string">&#x27;demo.docx&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串和常用数据结构</title>
      <link href="/2021/07/02/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2021/07/02/07.%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="字符串和常用数据结构"><a href="#字符串和常用数据结构" class="headerlink" title="字符串和常用数据结构"></a>字符串和常用数据结构</h2><h3 id="使用字符串"><a href="#使用字符串" class="headerlink" title="使用字符串"></a>使用字符串</h3><p>第二次世界大战促使了现代电子计算机的诞生，最初计算机被应用于导弹弹道的计算，而在计算机诞生后的很多年时间里，计算机处理的信息基本上都是数值型的信息。世界上的第一台电子计算机叫ENIAC（电子数值积分计算机），诞生于美国的宾夕法尼亚大学，每秒钟能够完成约5000次浮点运算。随着时间的推移，虽然数值运算仍然是计算机日常工作中最为重要的事情之一，但是今天的计算机处理得更多的数据可能都是以文本的方式存在的，如果我们希望通过Python程序操作这些文本信息，就必须要先了解字符串类型以及与它相关的知识。</p><p>所谓<strong>字符串</strong>，就是由零个或多个字符组成的有限序列，一般记为<img src="./res/formula_5.png" alt="$${\displaystyle s=a_{1}a_{2}\dots a_{n}(0\leq n \leq \infty)}$$">。在Python程序中，如果我们把单个或多个字符用单引号或者双引号包围起来，就可以表示一个字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line">s2 = <span class="string">&quot;hello, world!&quot;</span></span><br><span class="line"><span class="comment"># 以三个双引号或单引号开头的字符串可以折行</span></span><br><span class="line">s3 = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">hello, </span></span><br><span class="line"><span class="string">world!</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(s1, s2, s3, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以在字符串中使用<code>\</code>（反斜杠）来表示转义，也就是说<code>\</code>后面的字符不再是它原来的意义，例如：<code>\n</code>不是代表反斜杠和字符n，而是表示换行；而<code>\t</code>也不是代表反斜杠和字符t，而是表示制表符。所以如果想在字符串中表示<code>&#39;</code>要写成<code>\&#39;</code>，同理想表示<code>\</code>要写成<code>\\</code>。可以运行下面的代码看看会输出什么。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;\&#x27;hello, world!\&#x27;&#x27;</span></span><br><span class="line">s2 = <span class="string">&#x27;\n\\hello, world!\\\n&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s1, s2, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在<code>\</code>后面还可以跟一个八进制或者十六进制数来表示字符，例如<code>\141</code>和<code>\x61</code>都代表小写字母<code>a</code>，前者是八进制的表示法，后者是十六进制的表示法。也可以在<code>\</code>后面跟Unicode字符编码来表示字符，例如<code>\u9a86\u660a</code>代表的是中文“Mr.z”。运行下面的代码，看看输出了什么。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;\141\142\143\x61\x62\x63&#x27;</span></span><br><span class="line">s2 = <span class="string">&#x27;\u9a86\u660a&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s1, s2)</span><br></pre></td></tr></table></figure><p>如果不希望字符串中的<code>\</code>表示转义，我们可以通过在字符串的最前面加上字母<code>r</code>来加以说明，再看看下面的代码又会输出什么。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">r&#x27;\&#x27;hello, world!\&#x27;&#x27;</span></span><br><span class="line">s2 = <span class="string">r&#x27;\n\\hello, world!\\\n&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s1, s2, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Python为字符串类型提供了非常丰富的运算符，我们可以使用<code>+</code>运算符来实现字符串的拼接，可以使用<code>*</code>运算符来重复一个字符串的内容，可以使用<code>in</code>和<code>not in</code>来判断一个字符串是否包含另外一个字符串（成员运算），我们也可以用<code>[]</code>和<code>[:]</code>运算符从字符串取出某个字符或某些字符（切片运算），代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">s1 = <span class="string">&#x27;hello &#x27;</span> * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(s1) <span class="comment"># hello hello hello </span></span><br><span class="line">s2 = <span class="string">&#x27;world&#x27;</span></span><br><span class="line">s1 += s2</span><br><span class="line"><span class="built_in">print</span>(s1) <span class="comment"># hello hello hello world</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ll&#x27;</span> <span class="keyword">in</span> s1) <span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;good&#x27;</span> <span class="keyword">in</span> s1) <span class="comment"># False</span></span><br><span class="line">str2 = <span class="string">&#x27;abc123456&#x27;</span></span><br><span class="line"><span class="comment"># 从字符串中取出指定位置的字符(下标运算)</span></span><br><span class="line"><span class="built_in">print</span>(str2[<span class="number">2</span>]) <span class="comment"># c</span></span><br><span class="line"><span class="comment"># 字符串切片(从指定的开始索引到指定的结束索引)</span></span><br><span class="line"><span class="built_in">print</span>(str2[<span class="number">2</span>:<span class="number">5</span>]) <span class="comment"># c12</span></span><br><span class="line"><span class="built_in">print</span>(str2[<span class="number">2</span>:]) <span class="comment"># c123456</span></span><br><span class="line"><span class="built_in">print</span>(str2[<span class="number">2</span>::<span class="number">2</span>]) <span class="comment"># c246</span></span><br><span class="line"><span class="built_in">print</span>(str2[::<span class="number">2</span>]) <span class="comment"># ac246</span></span><br><span class="line"><span class="built_in">print</span>(str2[::-<span class="number">1</span>]) <span class="comment"># 654321cba</span></span><br><span class="line"><span class="built_in">print</span>(str2[-<span class="number">3</span>:-<span class="number">1</span>]) <span class="comment"># 45</span></span><br></pre></td></tr></table></figure><p>在Python中，我们还可以通过一系列的方法来完成对字符串的处理，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;hello, world!&#x27;</span></span><br><span class="line"><span class="comment"># 通过内置函数len计算字符串的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(str1)) <span class="comment"># 13</span></span><br><span class="line"><span class="comment"># 获得字符串首字母大写的拷贝</span></span><br><span class="line"><span class="built_in">print</span>(str1.capitalize()) <span class="comment"># Hello, world!</span></span><br><span class="line"><span class="comment"># 获得字符串每个单词首字母大写的拷贝</span></span><br><span class="line"><span class="built_in">print</span>(str1.title()) <span class="comment"># Hello, World!</span></span><br><span class="line"><span class="comment"># 获得字符串变大写后的拷贝</span></span><br><span class="line"><span class="built_in">print</span>(str1.upper()) <span class="comment"># HELLO, WORLD!</span></span><br><span class="line"><span class="comment"># 从字符串中查找子串所在位置</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&#x27;or&#x27;</span>)) <span class="comment"># 8</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&#x27;shit&#x27;</span>)) <span class="comment"># -1</span></span><br><span class="line"><span class="comment"># 与find类似但找不到子串时会引发异常</span></span><br><span class="line"><span class="comment"># print(str1.index(&#x27;or&#x27;))</span></span><br><span class="line"><span class="comment"># print(str1.index(&#x27;shit&#x27;))</span></span><br><span class="line"><span class="comment"># 检查字符串是否以指定的字符串开头</span></span><br><span class="line"><span class="built_in">print</span>(str1.startswith(<span class="string">&#x27;He&#x27;</span>)) <span class="comment"># False</span></span><br><span class="line"><span class="built_in">print</span>(str1.startswith(<span class="string">&#x27;hel&#x27;</span>)) <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 检查字符串是否以指定的字符串结尾</span></span><br><span class="line"><span class="built_in">print</span>(str1.endswith(<span class="string">&#x27;!&#x27;</span>)) <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 将字符串以指定的宽度居中并在两侧填充指定的字符</span></span><br><span class="line"><span class="built_in">print</span>(str1.center(<span class="number">50</span>, <span class="string">&#x27;*&#x27;</span>))</span><br><span class="line"><span class="comment"># 将字符串以指定的宽度靠右放置左侧填充指定的字符</span></span><br><span class="line"><span class="built_in">print</span>(str1.rjust(<span class="number">50</span>, <span class="string">&#x27; &#x27;</span>))</span><br><span class="line">str2 = <span class="string">&#x27;abc123456&#x27;</span></span><br><span class="line"><span class="comment"># 检查字符串是否由数字构成</span></span><br><span class="line"><span class="built_in">print</span>(str2.isdigit())  <span class="comment"># False</span></span><br><span class="line"><span class="comment"># 检查字符串是否以字母构成</span></span><br><span class="line"><span class="built_in">print</span>(str2.isalpha())  <span class="comment"># False</span></span><br><span class="line"><span class="comment"># 检查字符串是否以数字和字母构成</span></span><br><span class="line"><span class="built_in">print</span>(str2.isalnum())  <span class="comment"># True</span></span><br><span class="line">str3 = <span class="string">&#x27;  jackfrued@126.com &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(str3)</span><br><span class="line"><span class="comment"># 获得字符串修剪左右两侧空格之后的拷贝</span></span><br><span class="line"><span class="built_in">print</span>(str3.strip())</span><br></pre></td></tr></table></figure><p>我们之前讲过，可以用下面的方式来格式化输出字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d * %d = %d&#x27;</span> % (a, b, a * b))</span><br></pre></td></tr></table></figure><p>当然，我们也可以用字符串提供的方法来完成字符串的格式，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; * &#123;1&#125; = &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(a, b, a * b))</span><br></pre></td></tr></table></figure><p>Python 3.6以后，格式化字符串还有更为简洁的书写方式，就是在字符串前加上字母<code>f</code>，我们可以使用下面的语法糖来简化上面的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">5</span>, <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;a&#125;</span> * <span class="subst">&#123;b&#125;</span> = <span class="subst">&#123;a * b&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>除了字符串，Python还内置了多种类型的数据结构，如果要在程序中保存和操作数据，绝大多数时候可以利用现有的数据结构来实现，最常用的包括列表、元组、集合和字典。</p><h3 id="使用列表"><a href="#使用列表" class="headerlink" title="使用列表"></a>使用列表</h3><p>不知道大家是否注意到，刚才我们讲到的字符串类型（<code>str</code>）和之前我们讲到的数值类型（<code>int</code>和<code>float</code>）有一些区别。数值类型是标量类型，也就是说这种类型的对象没有可以访问的内部结构；而字符串类型是一种结构化的、非标量类型，所以才会有一系列的属性和方法。接下来我们要介绍的列表（<code>list</code>），也是一种结构化的、非标量类型，它是值的有序序列，每个值都可以通过索引进行标识，定义列表可以将列表的元素放在<code>[]</code>中，多个元素用<code>,</code>进行分隔，可以使用<code>for</code>循环对列表元素进行遍历，也可以使用<code>[]</code>或<code>[:]</code>运算符取出列表中的一个或多个元素。</p><p>下面的代码演示了如何定义列表、如何遍历列表以及列表的下标运算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 3, 5, 7, 100]</span></span><br><span class="line"><span class="comment"># 乘号表示列表元素的重复</span></span><br><span class="line">list2 = [<span class="string">&#x27;hello&#x27;</span>] * <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(list2) <span class="comment"># [&#x27;hello&#x27;, &#x27;hello&#x27;, &#x27;hello&#x27;]</span></span><br><span class="line"><span class="comment"># 计算列表长度(元素个数)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(list1)) <span class="comment"># 5</span></span><br><span class="line"><span class="comment"># 下标(索引)运算</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">0</span>]) <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(list1[<span class="number">4</span>]) <span class="comment"># 100</span></span><br><span class="line"><span class="comment"># print(list1[5])  # IndexError: list index out of range</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>]) <span class="comment"># 100</span></span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">3</span>]) <span class="comment"># 5</span></span><br><span class="line">list1[<span class="number">2</span>] = <span class="number">300</span></span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 3, 300, 7, 100]</span></span><br><span class="line"><span class="comment"># 通过循环用下标遍历列表元素</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    <span class="built_in">print</span>(list1[index])</span><br><span class="line"><span class="comment"># 通过for循环遍历列表元素</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(elem)</span><br><span class="line"><span class="comment"># 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值</span></span><br><span class="line"><span class="keyword">for</span> index, elem <span class="keyword">in</span> <span class="built_in">enumerate</span>(list1):</span><br><span class="line">    <span class="built_in">print</span>(index, elem)</span><br></pre></td></tr></table></figure><p>下面的代码演示了如何向列表中添加元素以及如何从列表中移除元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</span><br><span class="line"><span class="comment"># 添加元素</span></span><br><span class="line">list1.append(<span class="number">200</span>)</span><br><span class="line">list1.insert(<span class="number">1</span>, <span class="number">400</span>)</span><br><span class="line"><span class="comment"># 合并两个列表</span></span><br><span class="line"><span class="comment"># list1.extend([1000, 2000])</span></span><br><span class="line">list1 += [<span class="number">1000</span>, <span class="number">2000</span>]</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 400, 3, 5, 7, 100, 200, 1000, 2000]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(list1)) <span class="comment"># 9</span></span><br><span class="line"><span class="comment"># 先通过成员运算判断元素是否在列表中，如果存在就删除该元素</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">3</span> <span class="keyword">in</span> list1:</span><br><span class="line">list1.remove(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">1234</span> <span class="keyword">in</span> list1:</span><br><span class="line">    list1.remove(<span class="number">1234</span>)</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [1, 400, 5, 7, 100, 200, 1000, 2000]</span></span><br><span class="line"><span class="comment"># 从指定的位置删除元素</span></span><br><span class="line">list1.pop(<span class="number">0</span>)</span><br><span class="line">list1.pop(<span class="built_in">len</span>(list1) - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># [400, 5, 7, 100, 200, 1000]</span></span><br><span class="line"><span class="comment"># 清空列表元素</span></span><br><span class="line">list1.clear()</span><br><span class="line"><span class="built_in">print</span>(list1) <span class="comment"># []</span></span><br></pre></td></tr></table></figure><p>和字符串一样，列表也可以做切片操作，通过切片操作我们可以实现对列表的复制或者将列表中的一部分取出来创建出新的列表，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fruits = [<span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;strawberry&#x27;</span>, <span class="string">&#x27;waxberry&#x27;</span>]</span><br><span class="line">fruits += [<span class="string">&#x27;pitaya&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;mango&#x27;</span>]</span><br><span class="line"><span class="comment"># 列表切片</span></span><br><span class="line">fruits2 = fruits[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(fruits2) <span class="comment"># apple strawberry waxberry</span></span><br><span class="line"><span class="comment"># 可以通过完整切片操作来复制列表</span></span><br><span class="line">fruits3 = fruits[:]</span><br><span class="line"><span class="built_in">print</span>(fruits3) <span class="comment"># [&#x27;grape&#x27;, &#x27;apple&#x27;, &#x27;strawberry&#x27;, &#x27;waxberry&#x27;, &#x27;pitaya&#x27;, &#x27;pear&#x27;, &#x27;mango&#x27;]</span></span><br><span class="line">fruits4 = fruits[-<span class="number">3</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(fruits4) <span class="comment"># [&#x27;pitaya&#x27;, &#x27;pear&#x27;]</span></span><br><span class="line"><span class="comment"># 可以通过反向切片操作来获得倒转后的列表的拷贝</span></span><br><span class="line">fruits5 = fruits[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(fruits5) <span class="comment"># [&#x27;mango&#x27;, &#x27;pear&#x27;, &#x27;pitaya&#x27;, &#x27;waxberry&#x27;, &#x27;strawberry&#x27;, &#x27;apple&#x27;, &#x27;grape&#x27;]</span></span><br></pre></td></tr></table></figure><p>下面的代码实现了对列表的排序操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;zoo&#x27;</span>, <span class="string">&#x27;internationalization&#x27;</span>, <span class="string">&#x27;blueberry&#x27;</span>]</span><br><span class="line">list2 = <span class="built_in">sorted</span>(list1)</span><br><span class="line"><span class="comment"># sorted函数返回列表排序后的拷贝不会修改传入的列表</span></span><br><span class="line"><span class="comment"># 函数的设计就应该像sorted函数一样尽可能不产生副作用</span></span><br><span class="line">list3 = <span class="built_in">sorted</span>(list1, reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 通过key关键字参数指定根据字符串长度进行排序而不是默认的字母表顺序</span></span><br><span class="line">list4 = <span class="built_in">sorted</span>(list1, key=<span class="built_in">len</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line"><span class="built_in">print</span>(list3)</span><br><span class="line"><span class="built_in">print</span>(list4)</span><br><span class="line"><span class="comment"># 给列表对象发出排序消息直接在列表对象上进行排序</span></span><br><span class="line">list1.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br></pre></td></tr></table></figure><h3 id="生成式和生成器"><a href="#生成式和生成器" class="headerlink" title="生成式和生成器"></a>生成式和生成器</h3><p>我们还可以使用列表的生成式语法来创建列表，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">f = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>)]</span><br><span class="line"><span class="built_in">print</span>(f)</span><br><span class="line">f = [x + y <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;ABCDE&#x27;</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="string">&#x27;1234567&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(f)</span><br><span class="line"><span class="comment"># 用列表的生成表达式语法创建列表容器</span></span><br><span class="line"><span class="comment"># 用这种语法创建列表之后元素已经准备就绪所以需要耗费较多的内存空间</span></span><br><span class="line">f = [x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1000</span>)]</span><br><span class="line"><span class="built_in">print</span>(sys.getsizeof(f))  <span class="comment"># 查看对象占用内存的字节数</span></span><br><span class="line"><span class="built_in">print</span>(f)</span><br><span class="line"><span class="comment"># 请注意下面的代码创建的不是一个列表而是一个生成器对象</span></span><br><span class="line"><span class="comment"># 通过生成器可以获取到数据但它不占用额外的空间存储数据</span></span><br><span class="line"><span class="comment"># 每次需要数据的时候就通过内部的运算得到数据(需要花费额外的时间)</span></span><br><span class="line">f = (x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1000</span>))</span><br><span class="line"><span class="built_in">print</span>(sys.getsizeof(f))  <span class="comment"># 相比生成式生成器不占用存储数据的空间</span></span><br><span class="line"><span class="built_in">print</span>(f)</span><br><span class="line"><span class="keyword">for</span> val <span class="keyword">in</span> f:</span><br><span class="line">    <span class="built_in">print</span>(val)</span><br></pre></td></tr></table></figure><p>除了上面提到的生成器语法，Python中还有另外一种定义生成器的方式，就是通过<code>yield</code>关键字将一个普通函数改造成生成器函数。下面的代码演示了如何实现一个生成<a href="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97">斐波拉切数列</a>的生成器。所谓斐波拉切数列可以通过下面<a href="https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92">递归</a>的方法来进行定义：</p><p><img src="./res/formula_6.png" alt="$${\displaystyle F_{0}=0}$$"></p><p><img src="./res/formula_7.png" alt="$${\displaystyle F_{1}=1}$$"></p><p><img src="./res/formula_8.png" alt="$${\displaystyle F_{n}=F_{n-1}+F_{n-2}}({n}\geq{2})$$"></p><p><img src="./res/fibonacci-blocks.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> fib(<span class="number">20</span>):</span><br><span class="line">        <span class="built_in">print</span>(val)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="使用元组"><a href="#使用元组" class="headerlink" title="使用元组"></a>使用元组</h3><p>Python中的元组与列表类似也是一种容器数据类型，可以用一个变量（对象）来存储多个数据，不同之处在于元组的元素不能修改，在前面的代码中我们已经不止一次使用过元组了。顾名思义，我们把多个元素组合到一起就形成了一个元组，所以它和列表一样可以保存多条数据。下面的代码演示了如何定义和使用元组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义元组</span></span><br><span class="line">t = (<span class="string">&#x27;Mr.z&#x27;</span>, <span class="number">38</span>, <span class="literal">True</span>, <span class="string">&#x27;四川成都&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"><span class="comment"># 获取元组中的元素</span></span><br><span class="line"><span class="built_in">print</span>(t[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(t[<span class="number">3</span>])</span><br><span class="line"><span class="comment"># 遍历元组中的值</span></span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> t:</span><br><span class="line">    <span class="built_in">print</span>(member)</span><br><span class="line"><span class="comment"># 重新给元组赋值</span></span><br><span class="line"><span class="comment"># t[0] = &#x27;王大锤&#x27;  # TypeError</span></span><br><span class="line"><span class="comment"># 变量t重新引用了新的元组原来的元组将被垃圾回收</span></span><br><span class="line">t = (<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">20</span>, <span class="literal">True</span>, <span class="string">&#x27;云南昆明&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"><span class="comment"># 将元组转换成列表</span></span><br><span class="line">person = <span class="built_in">list</span>(t)</span><br><span class="line"><span class="built_in">print</span>(person)</span><br><span class="line"><span class="comment"># 列表是可以修改它的元素的</span></span><br><span class="line">person[<span class="number">0</span>] = <span class="string">&#x27;李小龙&#x27;</span></span><br><span class="line">person[<span class="number">1</span>] = <span class="number">25</span></span><br><span class="line"><span class="built_in">print</span>(person)</span><br><span class="line"><span class="comment"># 将列表转换成元组</span></span><br><span class="line">fruits_list = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line">fruits_tuple = <span class="built_in">tuple</span>(fruits_list)</span><br><span class="line"><span class="built_in">print</span>(fruits_tuple)</span><br></pre></td></tr></table></figure><p>这里有一个非常值得探讨的问题，我们已经有了列表这种数据结构，为什么还需要元组这样的类型呢？</p><ol><li>元组中的元素是无法修改的，事实上我们在项目中尤其是<a href="https://zh.wikipedia.org/zh-hans/%E5%A4%9A%E7%BA%BF%E7%A8%8B">多线程</a>环境（后面会讲到）中可能更喜欢使用的是那些不变对象（一方面因为对象状态不能修改，所以可以避免由此引起的不必要的程序错误，简单的说就是一个不变的对象要比可变的对象更加容易维护；另一方面因为没有任何一个线程能够修改不变对象的内部状态，一个不变对象自动就是线程安全的，这样就可以省掉处理同步化的开销。一个不变对象可以方便的被共享访问）。所以结论就是：如果不需要对元素进行添加、删除、修改的时候，可以考虑使用元组，当然如果一个方法要返回多个值，使用元组也是不错的选择。</li><li>元组在创建时间和占用的空间上面都优于列表。我们可以使用sys模块的getsizeof函数来检查存储同样的元素的元组和列表各自占用了多少内存空间，这个很容易做到。我们也可以在ipython中使用魔法指令%timeit来分析创建同样内容的元组和列表所花费的时间，下图是我的macOS系统上测试的结果。</li></ol><p><img src="./res/ipython-timeit.png" alt=""></p><h3 id="使用集合"><a href="#使用集合" class="headerlink" title="使用集合"></a>使用集合</h3><p>Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。</p><p><img src="./res/python-set.png" alt=""></p><p>可以按照下面代码所示的方式来创建和使用集合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建集合的字面量语法</span></span><br><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Length =&#x27;</span>, <span class="built_in">len</span>(set1))</span><br><span class="line"><span class="comment"># 创建集合的构造器语法(面向对象部分会进行详细讲解)</span></span><br><span class="line">set2 = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>))</span><br><span class="line">set3 = <span class="built_in">set</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(set2, set3)</span><br><span class="line"><span class="comment"># 创建集合的推导式语法(推导式也可以用于推导集合)</span></span><br><span class="line">set4 = &#123;num <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>) <span class="keyword">if</span> num % <span class="number">3</span> == <span class="number">0</span> <span class="keyword">or</span> num % <span class="number">5</span> == <span class="number">0</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(set4)</span><br></pre></td></tr></table></figure><p>向集合添加元素和从集合删除元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">set1.add(<span class="number">4</span>)</span><br><span class="line">set1.add(<span class="number">5</span>)</span><br><span class="line">set2.update([<span class="number">11</span>, <span class="number">12</span>])</span><br><span class="line">set2.discard(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">4</span> <span class="keyword">in</span> set2:</span><br><span class="line">    set2.remove(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(set1, set2)</span><br><span class="line"><span class="built_in">print</span>(set3.pop())</span><br><span class="line"><span class="built_in">print</span>(set3)</span><br></pre></td></tr></table></figure><p>集合的成员、交集、并集、差集等运算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集合的交集、并集、差集、对称差运算</span></span><br><span class="line"><span class="built_in">print</span>(set1 &amp; set2)</span><br><span class="line"><span class="comment"># print(set1.intersection(set2))</span></span><br><span class="line"><span class="built_in">print</span>(set1 | set2)</span><br><span class="line"><span class="comment"># print(set1.union(set2))</span></span><br><span class="line"><span class="built_in">print</span>(set1 - set2)</span><br><span class="line"><span class="comment"># print(set1.difference(set2))</span></span><br><span class="line"><span class="built_in">print</span>(set1 ^ set2)</span><br><span class="line"><span class="comment"># print(set1.symmetric_difference(set2))</span></span><br><span class="line"><span class="comment"># 判断子集和超集</span></span><br><span class="line"><span class="built_in">print</span>(set2 &lt;= set1)</span><br><span class="line"><span class="comment"># print(set2.issubset(set1))</span></span><br><span class="line"><span class="built_in">print</span>(set3 &lt;= set1)</span><br><span class="line"><span class="comment"># print(set3.issubset(set1))</span></span><br><span class="line"><span class="built_in">print</span>(set1 &gt;= set2)</span><br><span class="line"><span class="comment"># print(set1.issuperset(set2))</span></span><br><span class="line"><span class="built_in">print</span>(set1 &gt;= set3)</span><br><span class="line"><span class="comment"># print(set1.issuperset(set3))</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> Python中允许通过一些特殊的方法来为某种类型或数据结构自定义运算符（后面的章节中会讲到），上面的代码中我们对集合进行运算的时候可以调用集合对象的方法，也可以直接使用对应的运算符，例如<code>&amp;</code>运算符跟intersection方法的作用就是一样的，但是使用运算符让代码更加直观。</p></blockquote><h3 id="使用字典"><a href="#使用字典" class="headerlink" title="使用字典"></a>使用字典</h3><p>字典是另一种可变容器模型，Python中的字典跟我们生活中使用的字典是一样一样的，它可以存储任意类型对象，与列表、集合不同的是，字典的每个元素都是由一个键和一个值组成的“键值对”，键和值通过冒号分开。下面的代码演示了如何定义和使用字典。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建字典的字面量语法</span></span><br><span class="line">scores = &#123;<span class="string">&#x27;Mr.z&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;白元芳&#x27;</span>: <span class="number">78</span>, <span class="string">&#x27;狄仁杰&#x27;</span>: <span class="number">82</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(scores)</span><br><span class="line"><span class="comment"># 创建字典的构造器语法</span></span><br><span class="line">items1 = <span class="built_in">dict</span>(one=<span class="number">1</span>, two=<span class="number">2</span>, three=<span class="number">3</span>, four=<span class="number">4</span>)</span><br><span class="line"><span class="comment"># 通过zip函数将两个序列压成字典</span></span><br><span class="line">items2 = <span class="built_in">dict</span>(<span class="built_in">zip</span>([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], <span class="string">&#x27;123&#x27;</span>))</span><br><span class="line"><span class="comment"># 创建字典的推导式语法</span></span><br><span class="line">items3 = &#123;num: num ** <span class="number">2</span> <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>)&#125;</span><br><span class="line"><span class="built_in">print</span>(items1, items2, items3)</span><br><span class="line"><span class="comment"># 通过键可以获取字典中对应的值</span></span><br><span class="line"><span class="built_in">print</span>(scores[<span class="string">&#x27;Mr.z&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(scores[<span class="string">&#x27;狄仁杰&#x27;</span>])</span><br><span class="line"><span class="comment"># 对字典中所有键值对进行遍历</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> scores:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;scores[key]&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 更新字典中的元素</span></span><br><span class="line">scores[<span class="string">&#x27;白元芳&#x27;</span>] = <span class="number">65</span></span><br><span class="line">scores[<span class="string">&#x27;诸葛王朗&#x27;</span>] = <span class="number">71</span></span><br><span class="line">scores.update(冷面=<span class="number">67</span>, 方启鹤=<span class="number">85</span>)</span><br><span class="line"><span class="built_in">print</span>(scores)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;武则天&#x27;</span> <span class="keyword">in</span> scores:</span><br><span class="line">    <span class="built_in">print</span>(scores[<span class="string">&#x27;武则天&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;武则天&#x27;</span>))</span><br><span class="line"><span class="comment"># get方法也是通过键获取对应的值但是可以设置默认值</span></span><br><span class="line"><span class="built_in">print</span>(scores.get(<span class="string">&#x27;武则天&#x27;</span>, <span class="number">60</span>))</span><br><span class="line"><span class="comment"># 删除字典中的元素</span></span><br><span class="line"><span class="built_in">print</span>(scores.popitem())</span><br><span class="line"><span class="built_in">print</span>(scores.popitem())</span><br><span class="line"><span class="built_in">print</span>(scores.pop(<span class="string">&#x27;Mr.z&#x27;</span>, <span class="number">100</span>))</span><br><span class="line"><span class="comment"># 清空字典</span></span><br><span class="line">scores.clear()</span><br><span class="line"><span class="built_in">print</span>(scores)</span><br></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：在屏幕上显示跑马灯文字。"><a href="#练习1：在屏幕上显示跑马灯文字。" class="headerlink" title="练习1：在屏幕上显示跑马灯文字。"></a>练习1：在屏幕上显示跑马灯文字。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    content = <span class="string">&#x27;北京欢迎你为你开天辟地…………&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 清理屏幕上的输出</span></span><br><span class="line">        os.system(<span class="string">&#x27;cls&#x27;</span>)  <span class="comment"># os.system(&#x27;clear&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">        <span class="comment"># 休眠200毫秒</span></span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        content = content[<span class="number">1</span>:] + content[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"><a href="#练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。" class="headerlink" title="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"></a>练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_code</span>(<span class="params">code_len=<span class="number">4</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    生成指定长度的验证码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param code_len: 验证码的长度(默认4个字符)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :return: 由大小写英文字母和数字构成的随机验证码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    all_chars = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">    last_pos = <span class="built_in">len</span>(all_chars) - <span class="number">1</span></span><br><span class="line">    code = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(code_len):</span><br><span class="line">        index = random.randint(<span class="number">0</span>, last_pos)</span><br><span class="line">        code += all_chars[index]</span><br><span class="line">    <span class="keyword">return</span> code</span><br></pre></td></tr></table></figure><h4 id="练习3：设计一个函数返回给定文件名的后缀名。"><a href="#练习3：设计一个函数返回给定文件名的后缀名。" class="headerlink" title="练习3：设计一个函数返回给定文件名的后缀名。"></a>练习3：设计一个函数返回给定文件名的后缀名。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_suffix</span>(<span class="params">filename, has_dot=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取文件名的后缀名</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param filename: 文件名</span></span><br><span class="line"><span class="string">    :param has_dot: 返回的后缀名是否需要带点</span></span><br><span class="line"><span class="string">    :return: 文件的后缀名</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    pos = filename.rfind(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt; pos &lt; <span class="built_in">len</span>(filename) - <span class="number">1</span>:</span><br><span class="line">        index = pos <span class="keyword">if</span> has_dot <span class="keyword">else</span> pos + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> filename[index:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"><a href="#练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。" class="headerlink" title="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"></a>练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">max2</span>(<span class="params">x</span>):</span><br><span class="line">    m1, m2 = (x[<span class="number">0</span>], x[<span class="number">1</span>]) <span class="keyword">if</span> x[<span class="number">0</span>] &gt; x[<span class="number">1</span>] <span class="keyword">else</span> (x[<span class="number">1</span>], x[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">len</span>(x)):</span><br><span class="line">        <span class="keyword">if</span> x[index] &gt; m1:</span><br><span class="line">            m2 = m1</span><br><span class="line">            m1 = x[index]</span><br><span class="line">        <span class="keyword">elif</span> x[index] &gt; m2:</span><br><span class="line">            m2 = x[index]</span><br><span class="line">    <span class="keyword">return</span> m1, m2</span><br></pre></td></tr></table></figure><h4 id="练习5：计算指定的年月日是这一年的第几天。"><a href="#练习5：计算指定的年月日是这一年的第几天。" class="headerlink" title="练习5：计算指定的年月日是这一年的第几天。"></a>练习5：计算指定的年月日是这一年的第几天。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_leap_year</span>(<span class="params">year</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    判断指定的年份是不是闰年</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param year: 年份</span></span><br><span class="line"><span class="string">    :return: 闰年返回True平年返回False</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> year % <span class="number">400</span> == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">which_day</span>(<span class="params">year, month, date</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算传入的日期是这一年的第几天</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param year: 年</span></span><br><span class="line"><span class="string">    :param month: 月</span></span><br><span class="line"><span class="string">    :param date: 日</span></span><br><span class="line"><span class="string">    :return: 第几天</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    days_of_month = [</span><br><span class="line">        [<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>],</span><br><span class="line">        [<span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</span><br><span class="line">    ][is_leap_year(year)]</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(month - <span class="number">1</span>):</span><br><span class="line">        total += days_of_month[index]</span><br><span class="line">    <span class="keyword">return</span> total + date</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">1980</span>, <span class="number">11</span>, <span class="number">28</span>))</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">1981</span>, <span class="number">12</span>, <span class="number">31</span>))</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">2018</span>, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="built_in">print</span>(which_day(<span class="number">2016</span>, <span class="number">3</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="练习6：打印杨辉三角。"><a href="#练习6：打印杨辉三角。" class="headerlink" title="练习6：打印杨辉三角。"></a>练习6：打印<a href="https://zh.wikipedia.org/wiki/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2">杨辉三角</a>。</h4><p>参考答案：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Number of rows: &#x27;</span>))</span><br><span class="line">    yh = [[]] * num</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(yh)):</span><br><span class="line">        yh[row] = [<span class="literal">None</span>] * (row + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(yh[row])):</span><br><span class="line">            <span class="keyword">if</span> col == <span class="number">0</span> <span class="keyword">or</span> col == row:</span><br><span class="line">                yh[row][col] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                yh[row][col] = yh[row - <span class="number">1</span>][col] + yh[row - <span class="number">1</span>][col - <span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(yh[row][col], end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><h4 id="案例1：双色球选号。"><a href="#案例1：双色球选号。" class="headerlink" title="案例1：双色球选号。"></a>案例1：双色球选号。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange, randint, sample</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">display</span>(<span class="params">balls</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    输出列表中的双色球号码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> index, ball <span class="keyword">in</span> <span class="built_in">enumerate</span>(balls):</span><br><span class="line">        <span class="keyword">if</span> index == <span class="built_in">len</span>(balls) - <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%02d&#x27;</span> % ball, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_select</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    随机选择一组号码</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    red_balls = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">34</span>)]</span><br><span class="line">    selected_balls = []</span><br><span class="line">    selected_balls = sample(red_balls, <span class="number">6</span>)</span><br><span class="line">    selected_balls.sort()</span><br><span class="line">    selected_balls.append(randint(<span class="number">1</span>, <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> selected_balls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;机选几注: &#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        display(random_select())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 上面使用random模块的sample函数来实现从列表中选择不重复的n个元素。</p></blockquote><h4 id="综合案例2：约瑟夫环问题。"><a href="#综合案例2：约瑟夫环问题。" class="headerlink" title="综合案例2：约瑟夫环问题。"></a>综合案例2：<a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98">约瑟夫环问题</a>。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">《幸运的基督徒》</span></span><br><span class="line"><span class="string">有15个基督徒和15个非基督徒在海上遇险，为了能让一部分人活下来不得不将其中15个人扔到海里面去，有个人想了个办法就是大家围成一个圈，由某个人开始从1报数，报到9的人就扔到海里面，他后面的人接着从1开始报数，报到9的人继续扔到海里面，直到扔掉15个人。由于上帝的保佑，15个基督徒都幸免于难，问这些人最开始是怎么站的，哪些位置是基督徒哪些位置是非基督徒。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    persons = [<span class="literal">True</span>] * <span class="number">30</span></span><br><span class="line">    counter, index, number = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> counter &lt; <span class="number">15</span>:</span><br><span class="line">        <span class="keyword">if</span> persons[index]:</span><br><span class="line">            number += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> number == <span class="number">9</span>:</span><br><span class="line">                persons[index] = <span class="literal">False</span></span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                number = <span class="number">0</span></span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">        index %= <span class="number">30</span></span><br><span class="line">    <span class="keyword">for</span> person <span class="keyword">in</span> persons:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;基&#x27;</span> <span class="keyword">if</span> person <span class="keyword">else</span> <span class="string">&#x27;非&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="综合案例3：井字棋游戏。"><a href="#综合案例3：井字棋游戏。" class="headerlink" title="综合案例3：井字棋游戏。"></a>综合案例3：<a href="https://zh.wikipedia.org/wiki/%E4%BA%95%E5%AD%97%E6%A3%8B">井字棋</a>游戏。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_board</span>(<span class="params">board</span>):</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;TL&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;TM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;TR&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-+-+-&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;ML&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;MM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;MR&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-+-+-&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(board[<span class="string">&#x27;BL&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;BM&#x27;</span>] + <span class="string">&#x27;|&#x27;</span> + board[<span class="string">&#x27;BR&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    init_board = &#123;</span><br><span class="line">        <span class="string">&#x27;TL&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;TM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;TR&#x27;</span>: <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ML&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;MM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;MR&#x27;</span>: <span class="string">&#x27; &#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;BL&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;BM&#x27;</span>: <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;BR&#x27;</span>: <span class="string">&#x27; &#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    begin = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> begin:</span><br><span class="line">        curr_board = init_board.copy()</span><br><span class="line">        begin = <span class="literal">False</span></span><br><span class="line">        turn = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">        counter = <span class="number">0</span></span><br><span class="line">        os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">        print_board(curr_board)</span><br><span class="line">        <span class="keyword">while</span> counter &lt; <span class="number">9</span>:</span><br><span class="line">            move = <span class="built_in">input</span>(<span class="string">&#x27;轮到%s走棋, 请输入位置: &#x27;</span> % turn)</span><br><span class="line">            <span class="keyword">if</span> curr_board[move] == <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                curr_board[move] = turn</span><br><span class="line">                <span class="keyword">if</span> turn == <span class="string">&#x27;x&#x27;</span>:</span><br><span class="line">                    turn = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    turn = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">            os.system(<span class="string">&#x27;clear&#x27;</span>)</span><br><span class="line">            print_board(curr_board)</span><br><span class="line">        choice = <span class="built_in">input</span>(<span class="string">&#x27;再玩一局?(yes|no)&#x27;</span>)</span><br><span class="line">        begin = choice == <span class="string">&#x27;yes&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 最后这个案例来自<a href="https://item.jd.com/11943853.html">《Python编程快速上手:让繁琐工作自动化》</a>一书（这本书对有编程基础想迅速使用Python将日常工作自动化的人来说还是不错的选择），对代码做了一点点的调整。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象进阶</title>
      <link href="/2021/07/02/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/"/>
      <url>/2021/07/02/09.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="面向对象进阶"><a href="#面向对象进阶" class="headerlink" title="面向对象进阶"></a>面向对象进阶</h2><p>在前面的章节我们已经了解了面向对象的入门知识，知道了如何定义类，如何创建对象以及如何给对象发消息。为了能够更好的使用面向对象编程思想进行程序开发，我们还需要对Python中的面向对象编程进行更为深入的了解。</p><h3 id="property装饰器"><a href="#property装饰器" class="headerlink" title="@property装饰器"></a>@property装饰器</h3><p>之前我们讨论过Python中属性和方法访问权限的问题，虽然我们不建议将属性设置为私有的，但是如果直接将属性暴露给外界也是有问题的，比如我们没有办法检查赋给属性的值是否有效。我们之前的建议是将属性命名以单下划线开头，通过这种方式来暗示属性是受保护的，不建议外界直接访问，那么如果想访问属性可以通过属性的getter（访问器）和setter（修改器）方法进行对应的操作。如果要做到这点，就可以考虑使用@property包装器来包装getter和setter方法，使得对属性的访问既安全又方便，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问器 - getter方法</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问器 - getter方法</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修改器 - setter方法</span></span><br><span class="line"><span class="meta">    @age.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self, age</span>):</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在玩飞行棋.&#x27;</span> % self._name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在玩斗地主.&#x27;</span> % self._name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    person = Person(<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">12</span>)</span><br><span class="line">    person.play()</span><br><span class="line">    person.age = <span class="number">22</span></span><br><span class="line">    person.play()</span><br><span class="line">    <span class="comment"># person.name = &#x27;白元芳&#x27;  # AttributeError: can&#x27;t set attribute</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="slots-魔法"><a href="#slots-魔法" class="headerlink" title="__slots__魔法"></a>__slots__魔法</h3><p>我们讲到这里，不知道大家是否已经意识到，Python是一门<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80">动态语言</a>。通常，动态语言允许我们在程序运行时给对象绑定新的属性或方法，当然也可以对已经绑定的属性和方法进行解绑定。但是如果我们需要限定自定义类型的对象只能绑定某些属性，可以通过在类中定义__slots__变量来进行限定。需要注意的是__slots__的限定只对当前类的对象生效，对子类并不起任何作用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 限定Person对象只能绑定_name, _age和_gender属性</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;_name&#x27;</span>, <span class="string">&#x27;_age&#x27;</span>, <span class="string">&#x27;_gender&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @age.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self, age</span>):</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在玩飞行棋.&#x27;</span> % self._name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在玩斗地主.&#x27;</span> % self._name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    person = Person(<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">22</span>)</span><br><span class="line">    person.play()</span><br><span class="line">    person._gender = <span class="string">&#x27;男&#x27;</span></span><br><span class="line">    <span class="comment"># AttributeError: &#x27;Person&#x27; object has no attribute &#x27;_is_gay&#x27;</span></span><br><span class="line">    <span class="comment"># person._is_gay = True</span></span><br></pre></td></tr></table></figure><h3 id="静态方法和类方法"><a href="#静态方法和类方法" class="headerlink" title="静态方法和类方法"></a>静态方法和类方法</h3><p>之前，我们在类中定义的方法都是对象方法，也就是说这些方法都是发送给对象的消息。实际上，我们写在类中的方法并不需要都是对象方法，例如我们定义一个“三角形”类，通过传入三条边长来构造三角形，并提供计算周长和面积的方法，但是传入的三条边长未必能构造出三角形对象，因此我们可以先写一个方法来验证三条边长是否可以构成三角形，这个方法很显然就不是对象方法，因为在调用这个方法时三角形对象尚未创建出来（因为都不知道三条边能不能构成三角形），所以这个方法是属于三角形类而并不属于三角形对象的。我们可以使用静态方法来解决这类问题，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Triangle</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, a, b, c</span>):</span><br><span class="line">        self._a = a</span><br><span class="line">        self._b = b</span><br><span class="line">        self._c = c</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_valid</span>(<span class="params">a, b, c</span>):</span><br><span class="line">        <span class="keyword">return</span> a + b &gt; c <span class="keyword">and</span> b + c &gt; a <span class="keyword">and</span> a + c &gt; b</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">perimeter</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._a + self._b + self._c</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">area</span>(<span class="params">self</span>):</span><br><span class="line">        half = self.perimeter() / <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> sqrt(half * (half - self._a) *</span><br><span class="line">                    (half - self._b) * (half - self._c))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    a, b, c = <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></span><br><span class="line">    <span class="comment"># 静态方法和类方法都是通过给类发消息来调用的</span></span><br><span class="line">    <span class="keyword">if</span> Triangle.is_valid(a, b, c):</span><br><span class="line">        t = Triangle(a, b, c)</span><br><span class="line">        <span class="built_in">print</span>(t.perimeter())</span><br><span class="line">        <span class="comment"># 也可以通过给类发消息来调用对象方法但是要传入接收消息的对象作为参数</span></span><br><span class="line">        <span class="comment"># print(Triangle.perimeter(t))</span></span><br><span class="line">        <span class="built_in">print</span>(t.area())</span><br><span class="line">        <span class="comment"># print(Triangle.area(t))</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;无法构成三角形.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>和静态方法比较类似，Python还可以在类中定义类方法，类方法的第一个参数约定名为cls，它代表的是当前类相关的信息的对象（类本身也是一个对象，有的地方也称之为类的元数据对象），通过这个参数我们可以获取和类相关的信息并且可以创建出类的对象，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, localtime, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;数字时钟&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span></span>):</span><br><span class="line">        self._hour = hour</span><br><span class="line">        self._minute = minute</span><br><span class="line">        self._second = second</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">now</span>(<span class="params">cls</span>):</span><br><span class="line">        ctime = localtime(time())</span><br><span class="line">        <span class="keyword">return</span> cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;走字&quot;&quot;&quot;</span></span><br><span class="line">        self._second += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</span><br><span class="line">            self._second = <span class="number">0</span></span><br><span class="line">            self._minute += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</span><br><span class="line">                self._minute = <span class="number">0</span></span><br><span class="line">                self._hour += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</span><br><span class="line">                    self._hour = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;显示时间&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;%02d:%02d:%02d&#x27;</span> % \</span><br><span class="line">               (self._hour, self._minute, self._second)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 通过类方法创建对象并获取系统时间</span></span><br><span class="line">    clock = Clock.now()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(clock.show())</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        clock.run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="类之间的关系"><a href="#类之间的关系" class="headerlink" title="类之间的关系"></a>类之间的关系</h3><p>简单的说，类和类之间的关系有三种：is-a、has-a和use-a关系。</p><ul><li>is-a关系也叫继承或泛化，比如学生和人的关系、手机和电子产品的关系都属于继承关系。</li><li>has-a关系通常称之为关联，比如部门和员工的关系，汽车和引擎的关系都属于关联关系；关联关系如果是整体和部分的关联，那么我们称之为聚合关系；如果整体进一步负责了部分的生命周期（整体和部分是不可分割的，同时同在也同时消亡），那么这种就是最强的关联关系，我们称之为合成关系。</li><li>use-a关系通常称之为依赖，比如司机有一个驾驶的行为（方法），其中（的参数）使用到了汽车，那么司机和汽车的关系就是依赖关系。</li></ul><p>我们可以使用一种叫做<a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80">UML</a>（统一建模语言）的东西来进行面向对象建模，其中一项重要的工作就是把类和类之间的关系用标准化的图形符号描述出来。关于UML我们在这里不做详细的介绍，有兴趣的读者可以自行阅读<a href="https://e.jd.com/30392949.html">《UML面向对象设计基础》</a>一书。</p><p><img src="./res/uml-components.png" alt=""></p><p><img src="./res/uml-example.png" alt=""></p><p>利用类之间的这些关系，我们可以在已有类的基础上来完成某些操作，也可以在已有类的基础上创建新的类，这些都是实现代码复用的重要手段。复用现有的代码不仅可以减少开发的工作量，也有利于代码的管理和维护，这是我们在日常工作中都会使用到的技术手段。</p><h3 id="继承和多态"><a href="#继承和多态" class="headerlink" title="继承和多态"></a>继承和多态</h3><p>刚才我们提到了，可以在已有类的基础上创建新类，这其中的一种做法就是让一个类从另一个类那里将属性和方法直接继承下来，从而减少重复代码的编写。提供继承信息的我们称之为父类，也叫超类或基类；得到继承信息的我们称之为子类，也叫派生类或衍生类。子类除了继承父类提供的属性和方法，还可以定义自己特有的属性和方法，所以子类比父类拥有的更多的能力，在实际开发中，我们经常会用子类对象去替换掉一个父类对象，这是面向对象编程中一个常见的行为，对应的原则称之为<a href="https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99">里氏替换原则</a>。下面我们先看一个继承的例子。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;人&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line"><span class="meta">    @age.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">age</span>(<span class="params">self, age</span>):</span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s正在愉快的玩耍.&#x27;</span> % self._name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">watch_av</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self._age &gt;= <span class="number">18</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s正在观看爱情动作片.&#x27;</span> % self._name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s只能观看《熊出没》.&#x27;</span> % self._name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;学生&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, grade</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, age)</span><br><span class="line">        self._grade = grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">grade</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._grade</span><br><span class="line"></span><br><span class="line"><span class="meta">    @grade.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">grade</span>(<span class="params">self, grade</span>):</span><br><span class="line">        self._grade = grade</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">study</span>(<span class="params">self, course</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s的%s正在学习%s.&#x27;</span> % (self._grade, self._name, course))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;老师&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, title</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, age)</span><br><span class="line">        self._title = title</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">title</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._title</span><br><span class="line"></span><br><span class="line"><span class="meta">    @title.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">title</span>(<span class="params">self, title</span>):</span><br><span class="line">        self._title = title</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">teach</span>(<span class="params">self, course</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s%s正在讲%s.&#x27;</span> % (self._name, self._title, course))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    stu = Student(<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">15</span>, <span class="string">&#x27;初三&#x27;</span>)</span><br><span class="line">    stu.study(<span class="string">&#x27;数学&#x27;</span>)</span><br><span class="line">    stu.watch_av()</span><br><span class="line">    t = Teacher(<span class="string">&#x27;Mr.z&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;砖家&#x27;</span>)</span><br><span class="line">    t.teach(<span class="string">&#x27;Python程序设计&#x27;</span>)</span><br><span class="line">    t.watch_av()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>子类在继承了父类的方法后，可以对父类已有的方法给出新的实现版本，这个动作称之为方法重写（override）。通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本，当我们调用这个经过子类重写的方法时，不同的子类对象会表现出不同的行为，这个就是多态（poly-morphism）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pet</span>(<span class="built_in">object</span>, metaclass=ABCMeta):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;宠物&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, nickname</span>):</span><br><span class="line">        self._nickname = nickname</span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">make_voice</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;发出声音&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Pet</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;狗&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">make_voice</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: 汪汪汪...&#x27;</span> % self._nickname)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Pet</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;猫&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">make_voice</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s: 喵...喵...&#x27;</span> % self._nickname)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    pets = [Dog(<span class="string">&#x27;旺财&#x27;</span>), Cat(<span class="string">&#x27;凯蒂&#x27;</span>), Dog(<span class="string">&#x27;大黄&#x27;</span>)]</span><br><span class="line">    <span class="keyword">for</span> pet <span class="keyword">in</span> pets:</span><br><span class="line">        pet.make_voice()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在上面的代码中，我们将<code>Pet</code>类处理成了一个抽象类，所谓抽象类就是不能够创建对象的类，这种类的存在就是专门为了让其他类去继承它。Python从语法层面并没有像Java或C#那样提供对抽象类的支持，但是我们可以通过<code>abc</code>模块的<code>ABCMeta</code>元类和<code>abstractmethod</code>包装器来达到抽象类的效果，如果一个类中存在抽象方法那么这个类就不能够实例化（创建对象）。上面的代码中，<code>Dog</code>和<code>Cat</code>两个子类分别对<code>Pet</code>类中的<code>make_voice</code>抽象方法进行了重写并给出了不同的实现版本，当我们在<code>main</code>函数中调用该方法时，这个方法就表现出了多态行为（同样的方法做了不同的事情）。</p><h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><h4 id="案例1：奥特曼打小怪兽。"><a href="#案例1：奥特曼打小怪兽。" class="headerlink" title="案例1：奥特曼打小怪兽。"></a>案例1：奥特曼打小怪兽。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint, randrange</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fighter</span>(<span class="built_in">object</span>, metaclass=ABCMeta):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;战斗者&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过__slots__魔法限定对象可以绑定的成员变量</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;_name&#x27;</span>, <span class="string">&#x27;_hp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, hp</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param name: 名字</span></span><br><span class="line"><span class="string">        :param hp: 生命值</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self._name = name</span><br><span class="line">        self._hp = hp</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hp</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._hp</span><br><span class="line"></span><br><span class="line"><span class="meta">    @hp.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hp</span>(<span class="params">self, hp</span>):</span><br><span class="line">        self._hp = hp <span class="keyword">if</span> hp &gt;= <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">alive</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._hp &gt; <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;攻击</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param other: 被攻击的对象</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ultraman</span>(<span class="title class_ inherited__">Fighter</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;奥特曼&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    __slots__ = (<span class="string">&#x27;_name&#x27;</span>, <span class="string">&#x27;_hp&#x27;</span>, <span class="string">&#x27;_mp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, hp, mp</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化方法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param name: 名字</span></span><br><span class="line"><span class="string">        :param hp: 生命值</span></span><br><span class="line"><span class="string">        :param mp: 魔法值</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(name, hp)</span><br><span class="line">        self._mp = mp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">self, other</span>):</span><br><span class="line">        other.hp -= randint(<span class="number">15</span>, <span class="number">25</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">huge_attack</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;究极必杀技(打掉对方至少50点或四分之三的血)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param other: 被攻击的对象</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return: 使用成功返回True否则返回False</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self._mp &gt;= <span class="number">50</span>:</span><br><span class="line">            self._mp -= <span class="number">50</span></span><br><span class="line">            injury = other.hp * <span class="number">3</span> // <span class="number">4</span></span><br><span class="line">            injury = injury <span class="keyword">if</span> injury &gt;= <span class="number">50</span> <span class="keyword">else</span> <span class="number">50</span></span><br><span class="line">            other.hp -= injury</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.attack(other)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">magic_attack</span>(<span class="params">self, others</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;魔法攻击</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param others: 被攻击的群体</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return: 使用魔法成功返回True否则返回False</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self._mp &gt;= <span class="number">20</span>:</span><br><span class="line">            self._mp -= <span class="number">20</span></span><br><span class="line">            <span class="keyword">for</span> temp <span class="keyword">in</span> others:</span><br><span class="line">                <span class="keyword">if</span> temp.alive:</span><br><span class="line">                    temp.hp -= randint(<span class="number">10</span>, <span class="number">15</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">resume</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;恢复魔法值&quot;&quot;&quot;</span></span><br><span class="line">        incr_point = randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">        self._mp += incr_point</span><br><span class="line">        <span class="keyword">return</span> incr_point</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;~~~%s奥特曼~~~\n&#x27;</span> % self._name + \</span><br><span class="line">            <span class="string">&#x27;生命值: %d\n&#x27;</span> % self._hp + \</span><br><span class="line">            <span class="string">&#x27;魔法值: %d\n&#x27;</span> % self._mp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Monster</span>(<span class="title class_ inherited__">Fighter</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;小怪兽&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    __slots__ = (<span class="string">&#x27;_name&#x27;</span>, <span class="string">&#x27;_hp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">self, other</span>):</span><br><span class="line">        other.hp -= randint(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;~~~%s小怪兽~~~\n&#x27;</span> % self._name + \</span><br><span class="line">            <span class="string">&#x27;生命值: %d\n&#x27;</span> % self._hp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_any_alive</span>(<span class="params">monsters</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;判断有没有小怪兽是活着的&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> monster <span class="keyword">in</span> monsters:</span><br><span class="line">        <span class="keyword">if</span> monster.alive &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">select_alive_one</span>(<span class="params">monsters</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;选中一只活着的小怪兽&quot;&quot;&quot;</span></span><br><span class="line">    monsters_len = <span class="built_in">len</span>(monsters)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        index = randrange(monsters_len)</span><br><span class="line">        monster = monsters[index]</span><br><span class="line">        <span class="keyword">if</span> monster.alive &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> monster</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">display_info</span>(<span class="params">ultraman, monsters</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;显示奥特曼和小怪兽的信息&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(ultraman)</span><br><span class="line">    <span class="keyword">for</span> monster <span class="keyword">in</span> monsters:</span><br><span class="line">        <span class="built_in">print</span>(monster, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    u = Ultraman(<span class="string">&#x27;Mr.z&#x27;</span>, <span class="number">1000</span>, <span class="number">120</span>)</span><br><span class="line">    m1 = Monster(<span class="string">&#x27;狄仁杰&#x27;</span>, <span class="number">250</span>)</span><br><span class="line">    m2 = Monster(<span class="string">&#x27;白元芳&#x27;</span>, <span class="number">500</span>)</span><br><span class="line">    m3 = Monster(<span class="string">&#x27;王大锤&#x27;</span>, <span class="number">750</span>)</span><br><span class="line">    ms = [m1, m2, m3]</span><br><span class="line">    fight_round = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> u.alive <span class="keyword">and</span> is_any_alive(ms):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;========第%02d回合========&#x27;</span> % fight_round)</span><br><span class="line">        m = select_alive_one(ms)  <span class="comment"># 选中一只小怪兽</span></span><br><span class="line">        skill = randint(<span class="number">1</span>, <span class="number">10</span>)   <span class="comment"># 通过随机数选择使用哪种技能</span></span><br><span class="line">        <span class="keyword">if</span> skill &lt;= <span class="number">6</span>:  <span class="comment"># 60%的概率使用普通攻击</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s使用普通攻击打了%s.&#x27;</span> % (u.name, m.name))</span><br><span class="line">            u.attack(m)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s的魔法值恢复了%d点.&#x27;</span> % (u.name, u.resume()))</span><br><span class="line">        <span class="keyword">elif</span> skill &lt;= <span class="number">9</span>:  <span class="comment"># 30%的概率使用魔法攻击(可能因魔法值不足而失败)</span></span><br><span class="line">            <span class="keyword">if</span> u.magic_attack(ms):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s使用了魔法攻击.&#x27;</span> % u.name)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s使用魔法失败.&#x27;</span> % u.name)</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 10%的概率使用究极必杀技(如果魔法值不足则使用普通攻击)</span></span><br><span class="line">            <span class="keyword">if</span> u.huge_attack(m):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s使用究极必杀技虐了%s.&#x27;</span> % (u.name, m.name))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s使用普通攻击打了%s.&#x27;</span> % (u.name, m.name))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;%s的魔法值恢复了%d点.&#x27;</span> % (u.name, u.resume()))</span><br><span class="line">        <span class="keyword">if</span> m.alive &gt; <span class="number">0</span>:  <span class="comment"># 如果选中的小怪兽没有死就回击奥特曼</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s回击了%s.&#x27;</span> % (m.name, u.name))</span><br><span class="line">            m.attack(u)</span><br><span class="line">        display_info(u, ms)  <span class="comment"># 每个回合结束后显示奥特曼和小怪兽的信息</span></span><br><span class="line">        fight_round += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n========战斗结束!========\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> u.alive &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s奥特曼胜利!&#x27;</span> % u.name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小怪兽胜利!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="案例2：扑克游戏。"><a href="#案例2：扑克游戏。" class="headerlink" title="案例2：扑克游戏。"></a>案例2：扑克游戏。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Card</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;一张牌&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, suite, face</span>):</span><br><span class="line">        self._suite = suite</span><br><span class="line">        self._face = face</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">face</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._face</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">suite</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._suite</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self._face == <span class="number">1</span>:</span><br><span class="line">            face_str = <span class="string">&#x27;A&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> self._face == <span class="number">11</span>:</span><br><span class="line">            face_str = <span class="string">&#x27;J&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> self._face == <span class="number">12</span>:</span><br><span class="line">            face_str = <span class="string">&#x27;Q&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> self._face == <span class="number">13</span>:</span><br><span class="line">            face_str = <span class="string">&#x27;K&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            face_str = <span class="built_in">str</span>(self._face)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;%s%s&#x27;</span> % (self._suite, face_str)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.__str__()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Poker</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;一副牌&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self._cards = [Card(suite, face) </span><br><span class="line">                       <span class="keyword">for</span> suite <span class="keyword">in</span> <span class="string">&#x27;♠♥♣♦&#x27;</span></span><br><span class="line">                       <span class="keyword">for</span> face <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">14</span>)]</span><br><span class="line">        self._current = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cards</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._cards</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">shuffle</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;洗牌(随机乱序)&quot;&quot;&quot;</span></span><br><span class="line">        self._current = <span class="number">0</span></span><br><span class="line">        random.shuffle(self._cards)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">next</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;发牌&quot;&quot;&quot;</span></span><br><span class="line">        card = self._cards[self._current]</span><br><span class="line">        self._current += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> card</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">has_next</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;还有没有牌&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self._current &lt; <span class="built_in">len</span>(self._cards)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Player</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;玩家&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self._name = name</span><br><span class="line">        self._cards_on_hand = []</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cards_on_hand</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._cards_on_hand</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, card</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;摸牌&quot;&quot;&quot;</span></span><br><span class="line">        self._cards_on_hand.append(card)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">arrange</span>(<span class="params">self, card_key</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;玩家整理手上的牌&quot;&quot;&quot;</span></span><br><span class="line">        self._cards_on_hand.sort(key=card_key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序规则-先根据花色再根据点数排序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>(<span class="params">card</span>):</span><br><span class="line">    <span class="keyword">return</span> (card.suite, card.face)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    p = Poker()</span><br><span class="line">    p.shuffle()</span><br><span class="line">    players = [Player(<span class="string">&#x27;东邪&#x27;</span>), Player(<span class="string">&#x27;西毒&#x27;</span>), Player(<span class="string">&#x27;南帝&#x27;</span>), Player(<span class="string">&#x27;北丐&#x27;</span>)]</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">13</span>):</span><br><span class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> players:</span><br><span class="line">            player.get(p.<span class="built_in">next</span>)</span><br><span class="line">    <span class="keyword">for</span> player <span class="keyword">in</span> players:</span><br><span class="line">        <span class="built_in">print</span>(player.name + <span class="string">&#x27;:&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        player.arrange(get_key)</span><br><span class="line">        <span class="built_in">print</span>(player.cards_on_hand)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：</strong> 大家可以自己尝试在上面代码的基础上写一个简单的扑克游戏，例如21点(Black Jack)，游戏的规则可以自己在网上找一找。</p></blockquote><h4 id="案例3：工资结算系统。"><a href="#案例3：工资结算系统。" class="headerlink" title="案例3：工资结算系统。"></a>案例3：工资结算系统。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">某公司有三种类型的员工 分别是部门经理、程序员和销售员</span></span><br><span class="line"><span class="string">需要设计一个工资结算系统 根据提供的员工信息来计算月薪</span></span><br><span class="line"><span class="string">部门经理的月薪是每月固定15000元</span></span><br><span class="line"><span class="string">程序员的月薪按本月工作时间计算 每小时150元</span></span><br><span class="line"><span class="string">销售员的月薪是1200元的底薪加上销售额5%的提成</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span>(<span class="built_in">object</span>, metaclass=ABCMeta):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;员工&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        初始化方法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param name: 姓名</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self._name = name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">name</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_salary</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        获得月薪</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return: 月薪</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span>(<span class="title class_ inherited__">Employee</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;部门经理&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_salary</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">15000.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Programmer</span>(<span class="title class_ inherited__">Employee</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;程序员&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, working_hour=<span class="number">0</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name)</span><br><span class="line">        self._working_hour = working_hour</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">working_hour</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._working_hour</span><br><span class="line"></span><br><span class="line"><span class="meta">    @working_hour.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">working_hour</span>(<span class="params">self, working_hour</span>):</span><br><span class="line">        self._working_hour = working_hour <span class="keyword">if</span> working_hour &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_salary</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">150.0</span> * self._working_hour</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Salesman</span>(<span class="title class_ inherited__">Employee</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;销售员&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, sales=<span class="number">0</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name)</span><br><span class="line">        self._sales = sales</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sales</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._sales</span><br><span class="line"></span><br><span class="line"><span class="meta">    @sales.setter</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sales</span>(<span class="params">self, sales</span>):</span><br><span class="line">        self._sales = sales <span class="keyword">if</span> sales &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_salary</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1200.0</span> + self._sales * <span class="number">0.05</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    emps = [</span><br><span class="line">        Manager(<span class="string">&#x27;刘备&#x27;</span>), Programmer(<span class="string">&#x27;诸葛亮&#x27;</span>),</span><br><span class="line">        Manager(<span class="string">&#x27;曹操&#x27;</span>), Salesman(<span class="string">&#x27;荀彧&#x27;</span>),</span><br><span class="line">        Salesman(<span class="string">&#x27;吕布&#x27;</span>), Programmer(<span class="string">&#x27;张辽&#x27;</span>),</span><br><span class="line">        Programmer(<span class="string">&#x27;赵云&#x27;</span>)</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">for</span> emp <span class="keyword">in</span> emps:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(emp, Programmer):</span><br><span class="line">            emp.working_hour = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入%s本月工作时间: &#x27;</span> % emp.name))</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(emp, Salesman):</span><br><span class="line">            emp.sales = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入%s本月销售额: &#x27;</span> % emp.name))</span><br><span class="line">        <span class="comment"># 同样是接收get_salary这个消息但是不同的员工表现出了不同的行为(多态)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s本月工资为: ￥%s元&#x27;</span> %</span><br><span class="line">              (emp.name, emp.get_salary()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程与线程</title>
      <link href="/2021/07/02/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/"/>
      <url>/2021/07/02/13.%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h2><p>今天我们使用的计算机早已进入多CPU或多核时代，而我们使用的操作系统都是支持“多任务”的操作系统，这使得我们可以同时运行多个程序，也可以将一个程序分解为若干个相对独立的子任务，让多个子任务并发的执行，从而缩短程序的执行时间，同时也让用户获得更好的体验。因此在当下不管是用什么编程语言进行开发，实现让程序同时执行多个任务也就是常说的“并发编程”，应该是程序员必备技能之一。为此，我们需要先讨论两个概念，一个叫进程，一个叫线程。</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>进程就是操作系统中执行的一个程序，操作系统以进程为单位分配存储空间，每个进程都有自己的地址空间、数据栈以及其他用于跟踪进程执行的辅助数据，操作系统管理所有进程的执行，为它们合理的分配资源。进程可以通过fork或spawn的方式来创建新的进程来执行其他的任务，不过新的进程也有自己独立的内存空间，因此必须通过进程间通信机制（IPC，Inter-Process Communication）来实现数据共享，具体的方式包括管道、信号、套接字、共享内存区等。</p><p>一个进程还可以拥有多个并发的执行线索，简单的说就是拥有多个可以获得CPU调度的执行单元，这就是所谓的线程。由于线程在同一个进程下，它们可以共享相同的上下文，因此相对于进程而言，线程间的信息共享和通信更加容易。当然在单核CPU系统中，真正的并发是不可能的，因为在某个时刻能够获得CPU的只有唯一的一个线程，多个线程共享了CPU的执行时间。使用多线程实现并发编程为程序带来的好处是不言而喻的，最主要的体现在提升程序的性能和改善用户体验，今天我们使用的软件几乎都用到了多线程技术，这一点可以利用系统自带的进程监控工具（如macOS中的“活动监视器”、Windows中的“任务管理器”）来证实，如下图所示。</p><p><img src="./res/macos-monitor.png" alt=""></p><p>当然多线程也并不是没有坏处，站在其他进程的角度，多线程的程序对其他程序并不友好，因为它占用了更多的CPU执行时间，导致其他程序无法获得足够的CPU执行时间；另一方面，站在开发者的角度，编写和调试多线程的程序都对开发者有较高的要求，对于初学者来说更加困难。</p><p>Python既支持多进程又支持多线程，因此使用Python实现并发编程主要有3种方式：多进程、多线程、多进程+多线程。</p><h3 id="Python中的多进程"><a href="#Python中的多进程" class="headerlink" title="Python中的多进程"></a>Python中的多进程</h3><p>Unix和Linux操作系统上提供了<code>fork()</code>系统调用来创建进程，调用<code>fork()</code>函数的是父进程，创建出的是子进程，子进程是父进程的一个拷贝，但是子进程拥有自己的PID。<code>fork()</code>函数非常特殊它会返回两次，父进程中可以通过<code>fork()</code>函数的返回值得到子进程的PID，而子进程中的返回值永远都是0。Python的os模块提供了<code>fork()</code>函数。由于Windows系统没有<code>fork()</code>调用，因此要实现跨平台的多进程编程，可以使用multiprocessing模块的<code>Process</code>类来创建子进程，而且该模块还提供了更高级的封装，例如批量启动进程的进程池（<code>Pool</code>）、用于进程间通信的队列（<code>Queue</code>）和管道（<code>Pipe</code>）等。</p><p>下面用一个下载文件的例子来说明使用多进程和不使用多进程到底有什么差别，先看看下面的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_task</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;开始下载%s...&#x27;</span> % filename)</span><br><span class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">    sleep(time_to_download)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s下载完成! 耗费了%d秒&#x27;</span> % (filename, time_to_download))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    start = time()</span><br><span class="line">    download_task(<span class="string">&#x27;Python从入门到住院.pdf&#x27;</span>)</span><br><span class="line">    download_task(<span class="string">&#x27;Peking Hot.avi&#x27;</span>)</span><br><span class="line">    end = time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共耗费了%.2f秒.&#x27;</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>下面是运行程序得到的一次运行结果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">开始下载Python从入门到住院.pdf...</span><br><span class="line">Python从入门到住院.pdf下载完成! 耗费了6秒</span><br><span class="line">开始下载Peking Hot.avi...</span><br><span class="line">Peking Hot.avi下载完成! 耗费了7秒</span><br><span class="line">总共耗费了13.01秒.</span><br></pre></td></tr></table></figure><p>从上面的例子可以看出，如果程序中的代码只能按顺序一点点的往下执行，那么即使执行两个毫不相关的下载任务，也需要先等待一个文件下载完成后才能开始下一个下载任务，很显然这并不合理也没有效率。接下来我们使用多进程的方式将两个下载任务放到不同的进程中，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> getpid</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_task</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;启动下载进程，进程号[%d].&#x27;</span> % getpid())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;开始下载%s...&#x27;</span> % filename)</span><br><span class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">    sleep(time_to_download)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s下载完成! 耗费了%d秒&#x27;</span> % (filename, time_to_download))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    start = time()</span><br><span class="line">    p1 = Process(target=download_task, args=(<span class="string">&#x27;Python从入门到住院.pdf&#x27;</span>, ))</span><br><span class="line">    p1.start()</span><br><span class="line">    p2 = Process(target=download_task, args=(<span class="string">&#x27;Peking Hot.avi&#x27;</span>, ))</span><br><span class="line">    p2.start()</span><br><span class="line">    p1.join()</span><br><span class="line">    p2.join()</span><br><span class="line">    end = time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共耗费了%.2f秒.&#x27;</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在上面的代码中，我们通过<code>Process</code>类创建了进程对象，通过<code>target</code>参数我们传入一个函数来表示进程启动后要执行的代码，后面的<code>args</code>是一个元组，它代表了传递给函数的参数。<code>Process</code>对象的<code>start</code>方法用来启动进程，而<code>join</code>方法表示等待进程执行结束。运行上面的代码可以明显发现两个下载任务“同时”启动了，而且程序的执行时间将大大缩短，不再是两个任务的时间总和。下面是程序的一次执行结果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">启动下载进程，进程号[1530].</span><br><span class="line">开始下载Python从入门到住院.pdf...</span><br><span class="line">启动下载进程，进程号[1531].</span><br><span class="line">开始下载Peking Hot.avi...</span><br><span class="line">Peking Hot.avi下载完成! 耗费了7秒</span><br><span class="line">Python从入门到住院.pdf下载完成! 耗费了10秒</span><br><span class="line">总共耗费了10.01秒.</span><br></pre></td></tr></table></figure><p>我们也可以使用subprocess模块中的类和函数来创建和启动子进程，然后通过管道来和子进程通信，这些内容我们不在此进行讲解，有兴趣的读者可以自己了解这些知识。接下来我们将重点放在如何实现两个进程间的通信。我们启动两个进程，一个输出Ping，一个输出Pong，两个进程输出的Ping和Pong加起来一共10个。听起来很简单吧，但是如果这样写可是错的哦。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sub_task</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="keyword">global</span> counter</span><br><span class="line">    <span class="keyword">while</span> counter &lt; <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">print</span>(string, end=<span class="string">&#x27;&#x27;</span>, flush=<span class="literal">True</span>)</span><br><span class="line">        counter += <span class="number">1</span></span><br><span class="line">        sleep(<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Process(target=sub_task, args=(<span class="string">&#x27;Ping&#x27;</span>, )).start()</span><br><span class="line">    Process(target=sub_task, args=(<span class="string">&#x27;Pong&#x27;</span>, )).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>看起来没毛病，但是最后的结果是Ping和Pong各输出了10个，Why？当我们在程序中创建进程的时候，子进程复制了父进程及其所有的数据结构，每个子进程有自己独立的内存空间，这也就意味着两个子进程中各有一个<code>counter</code>变量，所以结果也就可想而知了。要解决这个问题比较简单的办法是使用multiprocessing模块中的<code>Queue</code>类，它是可以被多个进程共享的队列，底层是通过管道和<a href="">信号量（semaphore）</a>机制来实现的，有兴趣的读者可以自己尝试一下。</p><h3 id="Python中的多线程"><a href="#Python中的多线程" class="headerlink" title="Python中的多线程"></a>Python中的多线程</h3><p>在Python早期的版本中就引入了thread模块（现在名为_thread）来实现多线程编程，然而该模块过于底层，而且很多功能都没有提供，因此目前的多线程开发我们推荐使用threading模块，该模块对多线程编程提供了更好的面向对象的封装。我们把刚才下载文件的例子用多线程的方式来实现一遍。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;开始下载%s...&#x27;</span> % filename)</span><br><span class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">    sleep(time_to_download)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s下载完成! 耗费了%d秒&#x27;</span> % (filename, time_to_download))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    start = time()</span><br><span class="line">    t1 = Thread(target=download, args=(<span class="string">&#x27;Python从入门到住院.pdf&#x27;</span>,))</span><br><span class="line">    t1.start()</span><br><span class="line">    t2 = Thread(target=download, args=(<span class="string">&#x27;Peking Hot.avi&#x27;</span>,))</span><br><span class="line">    t2.start()</span><br><span class="line">    t1.join()</span><br><span class="line">    t2.join()</span><br><span class="line">    end = time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共耗费了%.3f秒&#x27;</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>我们可以直接使用threading模块的<code>Thread</code>类来创建线程，但是我们之前讲过一个非常重要的概念叫“继承”，我们可以从已有的类创建新类，因此也可以通过继承<code>Thread</code>类的方式来创建自定义的线程类，然后再创建线程对象并启动线程。代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DownloadTask</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, filename</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self._filename = filename</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;开始下载%s...&#x27;</span> % self._filename)</span><br><span class="line">        time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">        sleep(time_to_download)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s下载完成! 耗费了%d秒&#x27;</span> % (self._filename, time_to_download))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    start = time()</span><br><span class="line">    t1 = DownloadTask(<span class="string">&#x27;Python从入门到住院.pdf&#x27;</span>)</span><br><span class="line">    t1.start()</span><br><span class="line">    t2 = DownloadTask(<span class="string">&#x27;Peking Hot.avi&#x27;</span>)</span><br><span class="line">    t2.start()</span><br><span class="line">    t1.join()</span><br><span class="line">    t2.join()</span><br><span class="line">    end = time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总共耗费了%.2f秒.&#x27;</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>因为多个线程可以共享进程的内存空间，因此要实现多个线程间的通信相对简单，大家能想到的最直接的办法就是设置一个全局变量，多个线程共享这个全局变量即可。但是当多个线程共享同一个变量（我们通常称之为“资源”）的时候，很有可能产生不可控的结果从而导致程序失效甚至崩溃。如果一个资源被多个线程竞争使用，那么我们通常称之为“临界资源”，对“临界资源”的访问需要加上保护，否则资源会处于“混乱”的状态。下面的例子演示了100个线程向同一个银行账户转账（转入1元钱）的场景，在这个例子中，银行账户就是一个临界资源，在没有保护的情况下我们很有可能会得到错误的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self._balance = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deposit</span>(<span class="params">self, money</span>):</span><br><span class="line">        <span class="comment"># 计算存款后的余额</span></span><br><span class="line">        new_balance = self._balance + money</span><br><span class="line">        <span class="comment"># 模拟受理存款业务需要0.01秒的时间</span></span><br><span class="line">        sleep(<span class="number">0.01</span>)</span><br><span class="line">        <span class="comment"># 修改账户余额</span></span><br><span class="line">        self._balance = new_balance</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">balance</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._balance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddMoneyThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, account, money</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self._account = account</span><br><span class="line">        self._money = money</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        self._account.deposit(self._money)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    account = Account()</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="comment"># 创建100个存款的线程向同一个账户中存钱</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        t = AddMoneyThread(account, <span class="number">1</span>)</span><br><span class="line">        threads.append(t)</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="comment"># 等所有存款的线程都执行完毕</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;账户余额为: ￥%d元&#x27;</span> % account.balance)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行上面的程序，结果让人大跌眼镜，100个线程分别向账户中转入1元钱，结果居然远远小于100元。之所以出现这种情况是因为我们没有对银行账户这个“临界资源”加以保护，多个线程同时向账户中存钱时，会一起执行到<code>new_balance = self._balance + money</code>这行代码，多个线程得到的账户余额都是初始状态下的<code>0</code>，所以都是<code>0</code>上面做了+1的操作，因此得到了错误的结果。在这种情况下，“锁”就可以派上用场了。我们可以通过“锁”来保护“临界资源”，只有获得“锁”的线程才能访问“临界资源”，而其他没有得到“锁”的线程只能被阻塞起来，直到获得“锁”的线程释放了“锁”，其他线程才有机会获得“锁”，进而访问被保护的“临界资源”。下面的代码演示了如何使用“锁”来保护对银行账户的操作，从而获得正确的结果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self._balance = <span class="number">0</span></span><br><span class="line">        self._lock = Lock()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deposit</span>(<span class="params">self, money</span>):</span><br><span class="line">        <span class="comment"># 先获取锁才能执行后续的代码</span></span><br><span class="line">        self._lock.acquire()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            new_balance = self._balance + money</span><br><span class="line">            sleep(<span class="number">0.01</span>)</span><br><span class="line">            self._balance = new_balance</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="comment"># 在finally中执行释放锁的操作保证正常异常锁都能释放</span></span><br><span class="line">            self._lock.release()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">balance</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self._balance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddMoneyThread</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, account, money</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self._account = account</span><br><span class="line">        self._money = money</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        self._account.deposit(self._money)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    account = Account()</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        t = AddMoneyThread(account, <span class="number">1</span>)</span><br><span class="line">        threads.append(t)</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.join()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;账户余额为: ￥%d元&#x27;</span> % account.balance)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>比较遗憾的一件事情是Python的多线程并不能发挥CPU的多核特性，这一点只要启动几个执行死循环的线程就可以得到证实了。之所以如此，是因为Python的解释器有一个“全局解释器锁”（GIL）的东西，任何线程执行前必须先获得GIL锁，然后每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行，这是一个历史遗留问题，但是即便如此，就如我们之前举的例子，使用多线程在提升执行效率和改善用户体验方面仍然是有积极意义的。</p><h3 id="多进程还是多线程"><a href="#多进程还是多线程" class="headerlink" title="多进程还是多线程"></a>多进程还是多线程</h3><p>无论是多进程还是多线程，只要数量一多，效率肯定上不去，为什么呢？我们打个比方，假设你不幸正在准备中考，每天晚上需要做语文、数学、英语、物理、化学这5科的作业，每项作业耗时1小时。如果你先花1小时做语文作业，做完了，再花1小时做数学作业，这样，依次全部做完，一共花5小时，这种方式称为单任务模型。如果你打算切换到多任务模型，可以先做1分钟语文，再切换到数学作业，做1分钟，再切换到英语，以此类推，只要切换速度足够快，这种方式就和单核CPU执行多任务是一样的了，以旁观者的角度来看，你就正在同时写5科作业。</p><p>但是，切换作业是有代价的，比如从语文切到数学，要先收拾桌子上的语文书本、钢笔（这叫保存现场），然后，打开数学课本、找出圆规直尺（这叫准备新环境），才能开始做数学作业。操作系统在切换进程或者线程时也是一样的，它需要先保存当前执行的现场环境（CPU寄存器状态、内存页等），然后，把新任务的执行环境准备好（恢复上次的寄存器状态，切换内存页等），才能开始执行。这个切换过程虽然很快，但是也需要耗费时间。如果有几千个任务同时进行，操作系统可能就主要忙着切换任务，根本没有多少时间去执行任务了，这种情况最常见的就是硬盘狂响，点窗口无反应，系统处于假死状态。所以，多任务一旦多到一个限度，反而会使得系统性能急剧下降，最终导致所有任务都做不好。</p><p>是否采用多任务的第二个考虑是任务的类型，可以把任务分为计算密集型和I/O密集型。计算密集型任务的特点是要进行大量的计算，消耗CPU资源，比如对视频进行编码解码或者格式转换等等，这种任务全靠CPU的运算能力，虽然也可以用多任务完成，但是任务越多，花在任务切换的时间就越多，CPU执行任务的效率就越低。计算密集型任务由于主要消耗CPU资源，这类任务用Python这样的脚本语言去执行效率通常很低，最能胜任这类任务的是C语言，我们之前提到过Python中有嵌入C/C++代码的机制。</p><p>除了计算密集型任务，其他的涉及到网络、存储介质I/O的任务都可以视为I/O密集型任务，这类任务的特点是CPU消耗很少，任务的大部分时间都在等待I/O操作完成（因为I/O的速度远远低于CPU和内存的速度）。对于I/O密集型任务，如果启动多任务，就可以减少I/O等待时间从而让CPU高效率的运转。有一大类的任务都属于I/O密集型任务，这其中包括了我们很快会涉及到的网络应用和Web应用。</p><blockquote><p><strong>说明：</strong> 上面的内容和例子来自于<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000">廖雪峰官方网站的《Python教程》</a>，因为对作者文中的某些观点持有不同的看法，对原文的文字描述做了适当的调整。</p></blockquote><h3 id="单线程-异步I-O"><a href="#单线程-异步I-O" class="headerlink" title="单线程+异步I/O"></a>单线程+异步I/O</h3><p>现代操作系统对I/O操作的改进中最为重要的就是支持异步I/O。如果充分利用操作系统提供的异步I/O支持，就可以用单进程单线程模型来执行多任务，这种全新的模型称为事件驱动模型。Nginx就是支持异步I/O的Web服务器，它在单核CPU上采用单进程模型就可以高效地支持多任务。在多核CPU上，可以运行多个进程（数量与CPU核心数相同），充分利用多核CPU。用Node.js开发的服务器端程序也使用了这种工作模式，这也是当下并发编程的一种流行方案。</p><p>在Python语言中，单线程+异步I/O的编程模型称为协程，有了协程的支持，就可以基于事件驱动编写高效的多任务程序。协程最大的优势就是极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销。协程的第二个优势就是不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不用加锁，只需要判断状态就好了，所以执行效率比多线程高很多。如果想要充分利用CPU的多核特性，最简单的方法是多进程+协程，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。关于这方面的内容，在后续的课程中会进行讲解。</p><h3 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h3><h4 id="例子1：将耗时间的任务放到线程中以获得更好的用户体验。"><a href="#例子1：将耗时间的任务放到线程中以获得更好的用户体验。" class="headerlink" title="例子1：将耗时间的任务放到线程中以获得更好的用户体验。"></a>例子1：将耗时间的任务放到线程中以获得更好的用户体验。</h4><p>如下所示的界面中，有“下载”和“关于”两个按钮，用休眠的方式模拟点击“下载”按钮会联网下载文件需要耗费10秒的时间，如果不使用“多线程”，我们会发现，当点击“下载”按钮后整个程序的其他部分都被这个耗时间的任务阻塞而无法执行了，这显然是非常糟糕的用户体验，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>():</span><br><span class="line">    <span class="comment"># 模拟下载任务需要花费10秒钟时间</span></span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br><span class="line">    tkinter.messagebox.showinfo(<span class="string">&#x27;提示&#x27;</span>, <span class="string">&#x27;下载完成!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_about</span>():</span><br><span class="line">    tkinter.messagebox.showinfo(<span class="string">&#x27;关于&#x27;</span>, <span class="string">&#x27;作者: Mr.z(v1.0)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    top = tkinter.Tk()</span><br><span class="line">    top.title(<span class="string">&#x27;单线程&#x27;</span>)</span><br><span class="line">    top.geometry(<span class="string">&#x27;200x150&#x27;</span>)</span><br><span class="line">    top.wm_attributes(<span class="string">&#x27;-topmost&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    panel = tkinter.Frame(top)</span><br><span class="line">    button1 = tkinter.Button(panel, text=<span class="string">&#x27;下载&#x27;</span>, command=download)</span><br><span class="line">    button1.pack(side=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">    button2 = tkinter.Button(panel, text=<span class="string">&#x27;关于&#x27;</span>, command=show_about)</span><br><span class="line">    button2.pack(side=<span class="string">&#x27;right&#x27;</span>)</span><br><span class="line">    panel.pack(side=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    tkinter.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>如果使用多线程将耗时间的任务放到一个独立的线程中执行，这样就不会因为执行耗时间的任务而阻塞了主线程，修改后的代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">DownloadTaskHandler</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">            time.sleep(<span class="number">10</span>)</span><br><span class="line">            tkinter.messagebox.showinfo(<span class="string">&#x27;提示&#x27;</span>, <span class="string">&#x27;下载完成!&#x27;</span>)</span><br><span class="line">            <span class="comment"># 启用下载按钮</span></span><br><span class="line">            button1.config(state=tkinter.NORMAL)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">download</span>():</span><br><span class="line">        <span class="comment"># 禁用下载按钮</span></span><br><span class="line">        button1.config(state=tkinter.DISABLED)</span><br><span class="line">        <span class="comment"># 通过daemon参数将线程设置为守护线程(主程序退出就不再保留执行)</span></span><br><span class="line">        <span class="comment"># 在线程中处理耗时间的下载任务</span></span><br><span class="line">        DownloadTaskHandler(daemon=<span class="literal">True</span>).start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_about</span>():</span><br><span class="line">        tkinter.messagebox.showinfo(<span class="string">&#x27;关于&#x27;</span>, <span class="string">&#x27;作者: Mr.z(v1.0)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    top = tkinter.Tk()</span><br><span class="line">    top.title(<span class="string">&#x27;单线程&#x27;</span>)</span><br><span class="line">    top.geometry(<span class="string">&#x27;200x150&#x27;</span>)</span><br><span class="line">    top.wm_attributes(<span class="string">&#x27;-topmost&#x27;</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    panel = tkinter.Frame(top)</span><br><span class="line">    button1 = tkinter.Button(panel, text=<span class="string">&#x27;下载&#x27;</span>, command=download)</span><br><span class="line">    button1.pack(side=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">    button2 = tkinter.Button(panel, text=<span class="string">&#x27;关于&#x27;</span>, command=show_about)</span><br><span class="line">    button2.pack(side=<span class="string">&#x27;right&#x27;</span>)</span><br><span class="line">    panel.pack(side=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    tkinter.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="例子2：使用多进程对复杂任务进行“分而治之”。"><a href="#例子2：使用多进程对复杂任务进行“分而治之”。" class="headerlink" title="例子2：使用多进程对复杂任务进行“分而治之”。"></a>例子2：使用多进程对复杂任务进行“分而治之”。</h4><p>我们来完成1~100000000求和的计算密集型任务，这个问题本身非常简单，有点循环的知识就能解决，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    number_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100000001</span>)]</span><br><span class="line">    start = time()</span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> number_list:</span><br><span class="line">        total += number</span><br><span class="line">    <span class="built_in">print</span>(total)</span><br><span class="line">    end = time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Execution time: %.3fs&#x27;</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在上面的代码中，我故意先去创建了一个列表容器然后填入了100000000个数，这一步其实是比较耗时间的，所以为了公平起见，当我们将这个任务分解到8个进程中去执行的时候，我们暂时也不考虑列表切片操作花费的时间，只是把做运算和合并运算结果的时间统计出来，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">task_handler</span>(<span class="params">curr_list, result_queue</span>):</span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> curr_list:</span><br><span class="line">        total += number</span><br><span class="line">    result_queue.put(total)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    processes = []</span><br><span class="line">    number_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100000001</span>)]</span><br><span class="line">    result_queue = Queue()</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 启动8个进程将数据切片后进行运算</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        p = Process(target=task_handler,</span><br><span class="line">                    args=(number_list[index:index + <span class="number">12500000</span>], result_queue))</span><br><span class="line">        index += <span class="number">12500000</span></span><br><span class="line">        processes.append(p)</span><br><span class="line">        p.start()</span><br><span class="line">    <span class="comment"># 开始记录所有进程执行完成花费的时间</span></span><br><span class="line">    start = time()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</span><br><span class="line">        p.join()</span><br><span class="line">    <span class="comment"># 合并执行结果</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> result_queue.empty():</span><br><span class="line">        total += result_queue.get()</span><br><span class="line">    <span class="built_in">print</span>(total)</span><br><span class="line">    end = time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Execution time: &#x27;</span>, (end - start), <span class="string">&#x27;s&#x27;</span>, sep=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>比较两段代码的执行结果（在我目前使用的MacBook上，上面的代码需要大概6秒左右的时间，而下面的代码只需要不到1秒的时间，再强调一次我们只是比较了运算的时间，不考虑列表创建及切片操作花费的时间），使用多进程后由于获得了更多的CPU执行时间以及更好的利用了CPU的多核特性，明显的减少了程序的执行时间，而且计算量越大效果越明显。当然，如果愿意还可以将多个进程部署在不同的计算机上，做成分布式进程，具体的做法就是通过<code>multiprocessing.managers</code>模块中提供的管理器将<code>Queue</code>对象通过网络共享出来（注册到网络上让其他计算机可以访问），这部分内容也留到爬虫的专题再进行讲解。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程入门</title>
      <link href="/2021/07/02/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
      <url>/2021/07/02/14.%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8%E5%92%8C%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="网络编程入门"><a href="#网络编程入门" class="headerlink" title="网络编程入门"></a>网络编程入门</h2><h3 id="计算机网络基础"><a href="#计算机网络基础" class="headerlink" title="计算机网络基础"></a>计算机网络基础</h3><p>计算机网络是独立自主的计算机互联而成的系统的总称，组建计算机网络最主要的目的是实现多台计算机之间的通信和资源共享。今天计算机网络中的设备和计算机网络的用户已经多得不可计数，而计算机网络也可以称得上是一个“复杂巨系统”，对于这样的系统，我们不可能用一两篇文章把它讲清楚，有兴趣的读者可以自行阅读Andrew S.Tanenbaum老师的经典之作《计算机网络》或Kurose和Ross老师合著的《计算机网络:自顶向下方法》来了解计算机网络的相关知识。</p><h4 id="计算机网络发展史"><a href="#计算机网络发展史" class="headerlink" title="计算机网络发展史"></a>计算机网络发展史</h4><ol><li><p>1960s - 美国国防部ARPANET项目问世，奠定了分组交换网络的基础。</p><p><img src="./res/arpanet.png" alt=""></p></li><li><p>1980s - 国际标准化组织（ISO）发布OSI/RM，奠定了网络技术标准化的基础。</p><p><img src="./res/osimodel.png" alt=""></p></li><li><p>1990s - 英国人<a href="https://zh.wikipedia.org/wiki/%E6%8F%90%E5%A7%86%C2%B7%E6%9F%8F%E5%85%A7%E8%8C%B2-%E6%9D%8E">蒂姆·伯纳斯-李</a>发明了图形化的浏览器，浏览器的简单易用性使得计算机网络迅速被普及。</p><p>在没有浏览器的年代，上网是这样的。</p><p><img src="./res/before-browser.jpg" alt=""></p><p>有了浏览器以后，上网是这样的。</p><p><img src="./res/after-browser.jpg" alt=""></p></li></ol><h4 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP/IP模型"></a>TCP/IP模型</h4><p>实现网络通信的基础是网络通信协议，这些协议通常是由<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84">互联网工程任务组</a> （IETF）制定的。所谓“协议”就是通信计算机双方必须共同遵从的一组约定，例如怎样建立连接、怎样互相识别等，网络协议的三要素是：语法、语义和时序。构成我们今天使用的Internet的基础的是TCP/IP协议族，所谓协议族就是一系列的协议及其构成的通信模型，我们通常也把这套东西称为TCP/IP模型。与国际标准化组织发布的OSI/RM这个七层模型不同，TCP/IP是一个四层模型，也就是说，该模型将我们使用的网络从逻辑上分解为四个层次，自底向上依次是：网络接口层、网络层、传输层和应用层，如下图所示。</p><p><img src="./res/TCP-IP-model.png" alt=""></p><p>IP通常被翻译为网际协议，它服务于网络层，主要实现了寻址和路由的功能。接入网络的每一台主机都需要有自己的IP地址，IP地址就是主机在计算机网络上的身份标识。当然由于IPv4地址的匮乏，我们平常在家里、办公室以及其他可以接入网络的公共区域上网时获得的IP地址并不是全球唯一的IP地址，而是一个<a href="https://zh.wikipedia.org/zh-hans/%E5%B1%80%E5%9F%9F%E7%BD%91">局域网（LAN）</a>中的内部IP地址，通过<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2">网络地址转换（NAT）服务</a>我们也可以实现对网络的访问。计算机网络上有大量的被我们称为“<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8">路由器</a>”的网络中继设备，它们会存储转发我们发送到网络上的数据分组，让从源头发出的数据最终能够找到传送到目的地通路，这项功能就是所谓的路由。</p><p>TCP全称传输控制协议，它是基于IP提供的寻址和路由服务而建立起来的负责实现端到端可靠传输的协议，之所以将TCP称为可靠的传输协议是因为TCP向调用者承诺了三件事情：</p><ol><li>数据不传丢不传错（利用握手、校验和重传机制可以实现）。</li><li>流量控制（通过滑动窗口匹配数据发送者和接收者之间的传输速度）。</li><li>拥塞控制（通过RTT时间以及对滑动窗口的控制缓解网络拥堵）。</li></ol><h4 id="网络应用模式"><a href="#网络应用模式" class="headerlink" title="网络应用模式"></a>网络应用模式</h4><ol><li>C/S模式和B/S模式。这里的C指的是Client（客户端），通常是一个需要安装到某个宿主操作系统上的应用程序；而B指的是Browser（浏览器），它几乎是所有图形化操作系统都默认安装了的一个应用软件；通过C或B都可以实现对S（服务器）的访问。关于二者的比较和讨论在网络上有一大堆的文章，在此我们就不再浪费笔墨了。</li><li>去中心化的网络应用模式。不管是B/S还是C/S都需要服务器的存在，服务器就是整个应用模式的中心，而去中心化的网络应用通常没有固定的服务器或者固定的客户端，所有应用的使用者既可以作为资源的提供者也可以作为资源的访问者。</li></ol><h3 id="基于HTTP协议的网络资源访问"><a href="#基于HTTP协议的网络资源访问" class="headerlink" title="基于HTTP协议的网络资源访问"></a>基于HTTP协议的网络资源访问</h3><h4 id="HTTP（超文本传输协议）"><a href="#HTTP（超文本传输协议）" class="headerlink" title="HTTP（超文本传输协议）"></a>HTTP（超文本传输协议）</h4><p>HTTP是超文本传输协议（Hyper-Text Transfer Proctol）的简称，维基百科上对HTTP的解释是：超文本传输协议是一种用于分布式、协作式和超媒体信息系统的应用层协议，它是<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2">万维网</a>数据通信的基础，设计HTTP最初的目的是为了提供一种发布和接收<a href="https://zh.wikipedia.org/wiki/HTML">HTML</a>页面的方法，通过HTTP或者<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE">HTTPS</a>（超文本传输安全协议）请求的资源由URI（<a href="https://zh.wikipedia.org/wiki/%E7%B5%B1%E4%B8%80%E8%B3%87%E6%BA%90%E6%A8%99%E8%AD%98%E7%AC%A6">统一资源标识符</a>）来标识。关于HTTP的更多内容，我们推荐阅读阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html">《HTTP 协议入门》</a>，简单的说，通过HTTP我们可以获取网络上的（基于字符的）资源，开发中经常会用到的网络API（有的地方也称之为网络数据接口）就是基于HTTP来实现数据传输的。</p><h4 id="JSON格式"><a href="#JSON格式" class="headerlink" title="JSON格式"></a>JSON格式</h4><p><strong>JSON</strong>（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation）是一种轻量级的数据交换语言，该语言以易于让人阅读的文字（纯文本）为基础，用来传输由属性值或者序列性的值组成的数据对象。尽管JSON是最初只是Javascript中一种创建对象的字面量语法，但它在当下更是一种独立于语言的数据格式，很多编程语言都支持JSON格式数据的生成和解析，Python内置的json模块也提供了这方面的功能。由于JSON是纯文本，它和<a href="https://zh.wikipedia.org/wiki/XML">XML</a>一样都适用于异构系统之间的数据交换，而相较于XML，JSON显得更加的轻便和优雅。下面是表达同样信息的XML和JSON，而JSON的优势是相当直观的。</p><p>XML的例子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">content</span>&gt;</span>Will you marry me?<span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSON的例子：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Alice&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bob&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Will you marry me?&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h4><p>requests是一个基于HTTP协议来使用网络的第三库，其<a href="http://cn.python-requests.org/zh_CN/latest/">官方网站</a>有这样的一句介绍它的话：“Requests是唯一的一个<strong>非转基因</strong>的Python HTTP库，人类可以安全享用。”简单的说，使用requests库可以非常方便的使用HTTP，避免安全缺陷、冗余代码以及“重复发明轮子”（行业黑话，通常用在软件工程领域表示重新创造一个已有的或是早已被优化過的基本方法）。前面的文章中我们已经使用过这个库，下面我们还是通过requests来实现一个访问网络数据接口并从中获取美女图片下载链接然后下载美女图片到本地的例子程序，程序中使用了<a href="https://www.tianapi.com/">天行数据</a>提供的网络API。</p><p>我们可以先通过pip安装requests及其依赖库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>如果使用PyCharm作为开发工具，可以直接在代码中书写<code>import requests</code>，然后通过代码修复功能来自动下载安装requests。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承Thread类创建自定义的线程类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DownloadHanlder</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, url</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.url = url</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        filename = self.url[self.url.rfind(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>:]</span><br><span class="line">        resp = requests.get(self.url)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/Users/Hao/&#x27;</span> + filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(resp.content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 通过requests模块的get函数获取网络资源</span></span><br><span class="line">    <span class="comment"># 下面的代码中使用了天行数据接口提供的网络API</span></span><br><span class="line">    <span class="comment"># 要使用该数据接口需要在天行数据的网站上注册</span></span><br><span class="line">    <span class="comment"># 然后用自己的Key替换掉下面代码的中APIKey即可</span></span><br><span class="line">    resp = requests.get(</span><br><span class="line">        <span class="string">&#x27;http://api.tianapi.com/meinv/?key=APIKey&amp;num=10&#x27;</span>)</span><br><span class="line">    <span class="comment"># 将服务器返回的JSON格式的数据解析为字典</span></span><br><span class="line">    data_model = resp.json()</span><br><span class="line">    <span class="keyword">for</span> mm_dict <span class="keyword">in</span> data_model[<span class="string">&#x27;newslist&#x27;</span>]:</span><br><span class="line">        url = mm_dict[<span class="string">&#x27;picUrl&#x27;</span>]</span><br><span class="line">        <span class="comment"># 通过多线程的方式实现图片下载</span></span><br><span class="line">        DownloadHanlder(url).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="基于传输层协议的套接字编程"><a href="#基于传输层协议的套接字编程" class="headerlink" title="基于传输层协议的套接字编程"></a>基于传输层协议的套接字编程</h3><p>套接字这个词对很多不了解网络编程的人来说显得非常晦涩和陌生，其实说得通俗点，套接字就是一套用<a href="https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80">C语言</a>写成的应用程序开发库，主要用于实现进程间通信和网络编程，在网络应用开发中被广泛使用。在Python中也可以基于套接字来使用传输层提供的传输服务，并基于此开发自己的网络应用。实际开发中使用的套接字可以分为三类：流套接字（TCP套接字）、数据报套接字和原始套接字。</p><h4 id="TCP套接字"><a href="#TCP套接字" class="headerlink" title="TCP套接字"></a>TCP套接字</h4><p>所谓TCP套接字就是使用TCP协议提供的传输服务来实现网络通信的编程接口。在Python中可以通过创建socket对象并指定type属性为SOCK_STREAM来使用TCP套接字。由于一台主机可能拥有多个IP地址，而且很有可能会配置多个不同的服务，所以作为服务器端的程序，需要在创建套接字对象后将其绑定到指定的IP地址和端口上。这里的端口并不是物理设备而是对IP地址的扩展，用于区分不同的服务，例如我们通常将HTTP服务跟80端口绑定，而MySQL数据库服务默认绑定在3306端口，这样当服务器收到用户请求时就可以根据端口号来确定到底用户请求的是HTTP服务器还是数据库服务器提供的服务。端口的取值范围是0~65535，而1024以下的端口我们通常称之为“著名端口”（留给像FTP、HTTP、SMTP等“著名服务”使用的端口，有的地方也称之为“周知端口”），自定义的服务通常不使用这些端口，除非自定义的是HTTP或FTP这样的著名服务。</p><p>下面的代码实现了一个提供时间日期的服务器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket, SOCK_STREAM, AF_INET</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 1.创建套接字对象并指定使用哪种传输服务</span></span><br><span class="line">    <span class="comment"># family=AF_INET - IPv4地址</span></span><br><span class="line">    <span class="comment"># family=AF_INET6 - IPv6地址</span></span><br><span class="line">    <span class="comment"># type=SOCK_STREAM - TCP套接字</span></span><br><span class="line">    <span class="comment"># type=SOCK_DGRAM - UDP套接字</span></span><br><span class="line">    <span class="comment"># type=SOCK_RAW - 原始套接字</span></span><br><span class="line">    server = socket(family=AF_INET, <span class="built_in">type</span>=SOCK_STREAM)</span><br><span class="line">    <span class="comment"># 2.绑定IP地址和端口(端口用于区分不同的服务)</span></span><br><span class="line">    <span class="comment"># 同一时间在同一个端口上只能绑定一个服务否则报错</span></span><br><span class="line">    server.bind((<span class="string">&#x27;192.168.1.2&#x27;</span>, <span class="number">6789</span>))</span><br><span class="line">    <span class="comment"># 3.开启监听 - 监听客户端连接到服务器</span></span><br><span class="line">    <span class="comment"># 参数512可以理解为连接队列的大小</span></span><br><span class="line">    server.listen(<span class="number">512</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;服务器启动开始监听...&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 4.通过循环接收客户端的连接并作出相应的处理(提供服务)</span></span><br><span class="line">        <span class="comment"># accept方法是一个阻塞方法如果没有客户端连接到服务器代码不会向下执行</span></span><br><span class="line">        <span class="comment"># accept方法返回一个元组其中的第一个元素是客户端对象</span></span><br><span class="line">        <span class="comment"># 第二个元素是连接到服务器的客户端的地址(由IP和端口两部分构成)</span></span><br><span class="line">        client, addr = server.accept()</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(addr) + <span class="string">&#x27;连接到了服务器.&#x27;</span>)</span><br><span class="line">        <span class="comment"># 5.发送数据</span></span><br><span class="line">        client.send(<span class="built_in">str</span>(datetime.now()).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="comment"># 6.断开连接</span></span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>运行服务器程序后我们可以通过Windows系统的telnet来访问该服务器，结果如下图所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.1.2 6789</span><br></pre></td></tr></table></figure><p><img src="./res/telnet.png" alt=""></p><p>当然我们也可以通过Python的程序来实现TCP客户端的功能，相较于实现服务器程序，实现客户端程序就简单多了，代码如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 1.创建套接字对象默认使用IPv4和TCP协议</span></span><br><span class="line">    client = socket()</span><br><span class="line">    <span class="comment"># 2.连接到服务器(需要指定IP地址和端口)</span></span><br><span class="line">    client.connect((<span class="string">&#x27;192.168.1.2&#x27;</span>, <span class="number">6789</span>))</span><br><span class="line">    <span class="comment"># 3.从服务器接收数据</span></span><br><span class="line">    <span class="built_in">print</span>(client.recv(<span class="number">1024</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    client.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>需要注意的是，上面的服务器并没有使用多线程或者异步I/O的处理方式，这也就意味着当服务器与一个客户端处于通信状态时，其他的客户端只能排队等待。很显然，这样的服务器并不能满足我们的需求，我们需要的服务器是能够同时接纳和处理多个用户请求的。下面我们来设计一个使用多线程技术处理多个用户请求的服务器，该服务器会向连接到服务器的客户端发送一张图片。</p><p>服务器端代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket, SOCK_STREAM, AF_INET</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"><span class="keyword">from</span> json <span class="keyword">import</span> dumps</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 自定义线程类</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">FileTransferHandler</span>(<span class="title class_ inherited__">Thread</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, cclient</span>):</span><br><span class="line">            <span class="built_in">super</span>().__init__()</span><br><span class="line">            self.cclient = cclient</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">            my_dict = &#123;&#125;</span><br><span class="line">            my_dict[<span class="string">&#x27;filename&#x27;</span>] = <span class="string">&#x27;guido.jpg&#x27;</span></span><br><span class="line">            <span class="comment"># JSON是纯文本不能携带二进制数据</span></span><br><span class="line">            <span class="comment"># 所以图片的二进制数据要处理成base64编码</span></span><br><span class="line">            my_dict[<span class="string">&#x27;filedata&#x27;</span>] = data</span><br><span class="line">            <span class="comment"># 通过dumps函数将字典处理成JSON字符串</span></span><br><span class="line">            json_str = dumps(my_dict)</span><br><span class="line">            <span class="comment"># 发送JSON字符串</span></span><br><span class="line">            self.cclient.send(json_str.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            self.cclient.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.创建套接字对象并指定使用哪种传输服务</span></span><br><span class="line">    server = socket()</span><br><span class="line">    <span class="comment"># 2.绑定IP地址和端口(区分不同的服务)</span></span><br><span class="line">    server.bind((<span class="string">&#x27;192.168.1.2&#x27;</span>, <span class="number">5566</span>))</span><br><span class="line">    <span class="comment"># 3.开启监听 - 监听客户端连接到服务器</span></span><br><span class="line">    server.listen(<span class="number">512</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;服务器启动开始监听...&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;guido.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 将二进制数据处理成base64再解码成字符串</span></span><br><span class="line">        data = b64encode(f.read()).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        client, addr = server.accept()</span><br><span class="line">        <span class="comment"># 启动一个线程来处理客户端的请求</span></span><br><span class="line">        FileTransferHandler(client).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>客户端代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">from</span> json <span class="keyword">import</span> loads</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    client = socket()</span><br><span class="line">    client.connect((<span class="string">&#x27;192.168.1.2&#x27;</span>, <span class="number">5566</span>))</span><br><span class="line">    <span class="comment"># 定义一个保存二进制数据的对象</span></span><br><span class="line">    in_data = <span class="built_in">bytes</span>()</span><br><span class="line">    <span class="comment"># 由于不知道服务器发送的数据有多大每次接收1024字节</span></span><br><span class="line">    data = client.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">while</span> data:</span><br><span class="line">        <span class="comment"># 将收到的数据拼接起来</span></span><br><span class="line">        in_data += data</span><br><span class="line">        data = client.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="comment"># 将收到的二进制数据解码成JSON字符串并转换成字典</span></span><br><span class="line">    <span class="comment"># loads函数的作用就是将JSON字符串转成字典对象</span></span><br><span class="line">    my_dict = loads(in_data.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    filename = my_dict[<span class="string">&#x27;filename&#x27;</span>]</span><br><span class="line">    filedata = my_dict[<span class="string">&#x27;filedata&#x27;</span>].encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/Users/Hao/&#x27;</span> + filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># 将base64格式的数据解码成二进制数据并写入文件</span></span><br><span class="line">        f.write(b64decode(filedata))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;图片已保存.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>在这个案例中，我们使用了JSON作为数据传输的格式（通过JSON格式对传输的数据进行了序列化和反序列化的操作），但是JSON并不能携带二进制数据，因此对图片的二进制数据进行了Base64编码的处理。Base64是一种用64个字符表示所有二进制数据的编码方式，通过将二进制数据每6位一组的方式重新组织，刚好可以使用0~9的数字、大小写字母以及“+”和“/”总共64个字符表示从<code>000000</code>到<code>111111</code>的64种状态。<a href="https://zh.wikipedia.org/wiki/Base64">维基百科</a>上有关于Base64编码的详细讲解，不熟悉Base64的读者可以自行阅读。</p><blockquote><p><strong>说明：</strong> 上面的代码主要为了讲解网络编程的相关内容因此并没有对异常状况进行处理，请读者自行添加异常处理代码来增强程序的健壮性。</p></blockquote><h4 id="UDP套接字"><a href="#UDP套接字" class="headerlink" title="UDP套接字"></a>UDP套接字</h4><p>传输层除了有可靠的传输协议TCP之外，还有一种非常轻便的传输协议叫做用户数据报协议，简称UDP。TCP和UDP都是提供端到端传输服务的协议，二者的差别就如同打电话和发短信的区别，后者不对传输的可靠性和可达性做出任何承诺从而避免了TCP中握手和重传的开销，所以在强调性能和而不是数据完整性的场景中（例如传输网络音视频数据），UDP可能是更好的选择。可能大家会注意到一个现象，就是在观看网络视频时，有时会出现卡顿，有时会出现花屏，这无非就是部分数据传丢或传错造成的。在Python中也可以使用UDP套接字来创建网络应用，对此我们不进行赘述，有兴趣的读者可以自行研究。</p><h3 id="网络应用开发"><a href="#网络应用开发" class="headerlink" title="网络应用开发"></a>网络应用开发</h3><h4 id="发送电子邮件"><a href="#发送电子邮件" class="headerlink" title="发送电子邮件"></a>发送电子邮件</h4><p>在即时通信软件如此发达的今天，电子邮件仍然是互联网上使用最为广泛的应用之一，公司向应聘者发出录用通知、网站向用户发送一个激活账号的链接、银行向客户推广它们的理财产品等几乎都是通过电子邮件来完成的，而这些任务应该都是由程序自动完成的。</p><p>就像我们可以用HTTP（超文本传输协议）来访问一个网站一样，发送邮件要使用SMTP（简单邮件传输协议），SMTP也是一个建立在TCP（传输控制协议）提供的可靠数据传输服务的基础上的应用级协议，它规定了邮件的发送者如何跟发送邮件的服务器进行通信的细节，而Python中的smtplib模块将这些操作简化成了几个简单的函数。</p><p>下面的代码演示了如何在Python发送邮件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> smtplib <span class="keyword">import</span> SMTP</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 请自行修改下面的邮件发送者和接收者</span></span><br><span class="line">    sender = <span class="string">&#x27;abcdefg@126.com&#x27;</span></span><br><span class="line">    receivers = [<span class="string">&#x27;uvwxyz@qq.com&#x27;</span>, <span class="string">&#x27;uvwxyz@126.com&#x27;</span>]</span><br><span class="line">    message = MIMEText(<span class="string">&#x27;用Python发送邮件的示例代码.&#x27;</span>, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    message[<span class="string">&#x27;From&#x27;</span>] = Header(<span class="string">&#x27;王大锤&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    message[<span class="string">&#x27;To&#x27;</span>] = Header(<span class="string">&#x27;Mr.z&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    message[<span class="string">&#x27;Subject&#x27;</span>] = Header(<span class="string">&#x27;示例代码实验邮件&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    smtper = SMTP(<span class="string">&#x27;smtp.126.com&#x27;</span>)</span><br><span class="line">    <span class="comment"># 请自行修改下面的登录口令</span></span><br><span class="line">    smtper.login(sender, <span class="string">&#x27;secretpass&#x27;</span>)</span><br><span class="line">    smtper.sendmail(sender, receivers, message.as_string())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;邮件发送完成!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>如果要发送带有附件的邮件，那么可以按照下面的方式进行操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> smtplib <span class="keyword">import</span> SMTP</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 创建一个带附件的邮件消息对象</span></span><br><span class="line">    message = MIMEMultipart()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建文本内容</span></span><br><span class="line">    text_content = MIMEText(<span class="string">&#x27;附件中有本月数据请查收&#x27;</span>, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    message[<span class="string">&#x27;Subject&#x27;</span>] = Header(<span class="string">&#x27;本月数据&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># 将文本内容添加到邮件消息对象中</span></span><br><span class="line">    message.attach(text_content)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取文件并将文件作为附件添加到邮件消息对象中</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/Users/Hao/Desktop/hello.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        txt = MIMEText(f.read(), <span class="string">&#x27;base64&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        txt[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">        txt[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=hello.txt&#x27;</span></span><br><span class="line">        message.attach(txt)</span><br><span class="line">    <span class="comment"># 读取文件并将文件作为附件添加到邮件消息对象中</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/Users/Hao/Desktop/汇总数据.xlsx&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        xls = MIMEText(f.read(), <span class="string">&#x27;base64&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        xls[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/vnd.ms-excel&#x27;</span></span><br><span class="line">        xls[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=month-data.xlsx&#x27;</span></span><br><span class="line">        message.attach(xls)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建SMTP对象</span></span><br><span class="line">    smtper = SMTP(<span class="string">&#x27;smtp.126.com&#x27;</span>)</span><br><span class="line">    <span class="comment"># 开启安全连接</span></span><br><span class="line">    <span class="comment"># smtper.starttls()</span></span><br><span class="line">    sender = <span class="string">&#x27;abcdefg@126.com&#x27;</span></span><br><span class="line">    receivers = [<span class="string">&#x27;uvwxyz@qq.com&#x27;</span>]</span><br><span class="line">    <span class="comment"># 登录到SMTP服务器</span></span><br><span class="line">    <span class="comment"># 请注意此处不是使用密码而是邮件客户端授权码进行登录</span></span><br><span class="line">    <span class="comment"># 对此有疑问的读者可以联系自己使用的邮件服务器客服</span></span><br><span class="line">    smtper.login(sender, <span class="string">&#x27;secretpass&#x27;</span>)</span><br><span class="line">    <span class="comment"># 发送邮件</span></span><br><span class="line">    smtper.sendmail(sender, receivers, message.as_string())</span><br><span class="line">    <span class="comment"># 与邮件服务器断开连接</span></span><br><span class="line">    smtper.quit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;发送完成!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h4><p>发送短信也是项目中常见的功能，网站的注册码、验证码、营销信息基本上都是通过短信来发送给用户的。在下面的代码中我们使用了<a href="http://www.ihuyi.com/">互亿无线</a>短信平台（该平台为注册用户提供了50条免费短信以及常用开发语言发送短信的demo，可以登录该网站并在用户自服务页面中对短信进行配置）提供的API接口实现了发送短信的服务，当然国内的短信平台很多，读者可以根据自己的需要进行选择（通常会考虑费用预算、短信达到率、使用的难易程度等指标），如果需要在商业项目中使用短信服务建议购买短信平台提供的套餐服务。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> http.client</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    host  = <span class="string">&quot;106.ihuyi.com&quot;</span></span><br><span class="line">    sms_send_uri = <span class="string">&quot;/webservice/sms.php?method=Submit&quot;</span></span><br><span class="line">    <span class="comment"># 下面的参数需要填入自己注册的账号和对应的密码</span></span><br><span class="line">    params = urllib.parse.urlencode(&#123;<span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;你自己的账号&#x27;</span>, <span class="string">&#x27;password&#x27;</span> : <span class="string">&#x27;你自己的密码&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;您的验证码是：147258。请不要把验证码泄露给其他人。&#x27;</span>, <span class="string">&#x27;mobile&#x27;</span>: <span class="string">&#x27;接收者的手机号&#x27;</span>, <span class="string">&#x27;format&#x27;</span>:<span class="string">&#x27;json&#x27;</span> &#125;)</span><br><span class="line">    <span class="built_in">print</span>(params)</span><br><span class="line">    headers = &#123;<span class="string">&#x27;Content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>, <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>&#125;</span><br><span class="line">    conn = http.client.HTTPConnection(host, port=<span class="number">80</span>, timeout=<span class="number">30</span>)</span><br><span class="line">    conn.request(<span class="string">&#x27;POST&#x27;</span>, sms_send_uri, params, headers)</span><br><span class="line">    response = conn.getresponse()</span><br><span class="line">    response_str = response.read()</span><br><span class="line">    jsonstr = response_str.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(json.loads(jsonstr))</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
